Question,Rewritten Question,Code,Answer Type,Generated Answer,Expected Answer
Is the person with the highest net worth self-made?,"Considering the person with the highest finalWorth, what is the value of their selfMade attribute?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
highest_worth_person = dataset.loc[dataset[""finalWorth""] == dataset[""finalWorth""].max()]
self_made_value = highest_worth_person[""selfMade""].iloc[0]

return self_made_value
",bool,True,True
Does the youngest billionaire identify as male?,Is the gender of the billionaire with the minimum age value equal to male?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_age_individual = dataset.loc[dataset[""age""] == dataset[""age""].min()]
gender = min_age_individual[""gender""].iloc[0]

return gender == ""male""
",bool,False,True
Is the city with the most billionaires in the United States?,Does the city with the highest count of billionaires also have its country attribute equal to United States?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
city_counts = dataset['city'].value_counts()
most_frequent_city = city_counts.idxmax()

country_of_most_frequent_city = dataset[dataset['city'] == most_frequent_city]['country'].iloc[0]

return country_of_most_frequent_city == 'United States'
",bool,True,True
Is there a non-self-made billionaire in the top 5 ranks?,Are there any individuals within the top 5 rankings whose selfMade attribute is False?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_5 = dataset.head(5)
has_false_selfmade = top_5['selfMade'].any()

return has_false_selfmade
",bool,True,True
Does the oldest billionaire have a philanthropy score of 5?,Is the philanthropy score of the billionaire with the maximum age equal to 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_age_individual = dataset.loc[dataset[""age""] == dataset[""age""].max()]
philanthropy_score = max_age_individual[""philanthropyScore""].iloc[0]

return philanthropy_score == 5
",bool,False,False
What is the age of the youngest billionaire?,What is the minimum value present in the age column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_age = dataset[""age""].min()

return min_age
",float64,19.0,19.0
How many billionaires are there from the 'Technology' category?,What is the count of billionaires whose category attribute is equal to 'Technology'?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
technology_billionaires = db[db[""category""] == ""Technology""]
count = len(technology_billionaires)

return count
",int64,343,343
What's the total worth of billionaires in the 'Automotive' category?,Calculate the sum of the finalWorth attribute for all billionaires whose category is 'Automotive'.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
automotive_billionaires = db[db[""category""] == ""Automotive""]
total_worth = automotive_billionaires[""finalWorth""].sum()

return total_worth
",float64,583600,583600
How many billionaires have a philanthropy score above 3?,What is the count of billionaires whose philanthropy score is greater than 3?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
philanthropists = dataset[dataset[""philanthropyScore""] > 3]
count = philanthropists.shape[0]

return count
",int64,25,25
What's the rank of the wealthiest non-self-made billionaire?,What is the rank value for the billionaire who has selfMade attribute set to False and possesses the highest finalWorth?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
not_self_made = dataset[dataset[""selfMade""] == False]
max_worth_individual = not_self_made.loc[not_self_made[""finalWorth""] == not_self_made[""finalWorth""].max()]
rank = max_worth_individual[""rank""].iloc[0]

return rank
",uint16,3,3
Which category does the richest billionaire belong to?,What is the value of the category attribute for the billionaire with the highest final worth?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
billionaire_with_highest_worth = dataset.loc[dataset[""finalWorth""] == dataset[""finalWorth""].max(), :]
category_value = billionaire_with_highest_worth[""category""].iloc[0]

return category_value
",category,Automotive,Automotive
What's the country of origin of the oldest billionaire?,Which country is associated with the billionaire having the maximum age?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_age_individual = db.loc[db[""age""] == db[""age""].max()]
country = max_age_individual[""country""].iloc[0]

return country
",string,United States,United States
What's the gender of the billionaire with the highest philanthropy score?,What is the gender of the individual having the maximum philanthropy score?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_philanthropy_individual = dataset.loc[dataset[""philanthropyScore""] == dataset[""philanthropyScore""].max()]
gender = max_philanthropy_individual[""gender""].iloc[0]

return gender
",string,M,M
What's the source of wealth for the youngest billionaire?,What is the source attribute value for the billionaire with the minimum age?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_age_individual = dataset.loc[dataset[""age""] == dataset[""age""].min()]
source_value = min_age_individual[""source""].iloc[0]

return source_value
",string,drugstores,drugstores
What is the title of the billionaire with the lowest rank?,What is the title of the person having the minimum rank in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_rank_person = dataset.loc[dataset[""rank""] == dataset[""rank""].min()]
title = min_rank_person[""title""].iloc[0]

return title
",string,CEO,
List the top 3 countries with the most billionaires.,"What are the names of the top 3 countries with the highest number of billionaires, ordered from most to least?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
country_counts = dataset['country'].value_counts().nlargest(3).index.tolist()
return country_counts
",list of string,"['United States', 'China', 'India']","['United States', 'China', 'India']"
List the top 2 most common sources of wealth for billionaires.,What are the two most frequent values in the source column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
source_counts = dataset['source'].value_counts()
top_two_sources = source_counts.head(2).index.tolist()

return top_two_sources
",list of string,"['real estate', 'investments']","['real estate', 'investments']"
List the 4 cities where the four youngest billionaires live.,What are the names of the four cities corresponding to the four individuals with the lowest age values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
four_youngest = dataset.nsmallest(4, 'age')
cities = four_youngest['city'].tolist()

return cities
",list of string,"[nan, 'Los Angeles', 'Jiaozuo', 'Oslo']","['', 'Los Angeles', 'Jiaozuo', 'Oslo']"
List the 4 categories with the fewest billionaires.,What are the names of the four categories that have the smallest number of billionaires listed in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
category_counts = dataset['category'].value_counts()
smallest_categories = category_counts.nsmallest(4).index.tolist()

return smallest_categories
",list of string,"['Gambling & Casinos', 'Sports', 'Logistics', 'Telecom']","['Telecom', 'Logistics', 'Sports', 'Gambling & Casinos']"
List the 2 countries with the least number of billionaires. If there are more than two with the same number take the first two alphabetically.,What are the names of the first two countries alphabetically that have the smallest number of billionaires in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
country_counts = dataset['country'].value_counts()
sorted_countries = country_counts.sort_values()
first_two_countries = sorted_countries.index[:2].tolist()

return first_two_countries
",list of string,"['Andorra', 'Bahrain']","['Algeria', 'Andorra']"
List the top 5 ranks of billionaires who are not self-made.,"Retrieve the ranks of the five billionaires with the lowest selfMade attribute set to False, ordered from smallest to largest rank.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
not_self_made = dataset[dataset[""selfMade""] == False]
sorted_by_rank = not_self_made.sort_values(by=""rank"")
lowest_five_ranks = sorted_by_rank[""rank""].head(5).tolist()

return lowest_five_ranks
",list of (uint16),"[3, 10, 14, 16, 18]","[3, 10, 14, 16, 18]"
List the youngest 3 ages of billionaires who have a philanthropy score of 5.,What are the three smallest values of age for billionaires whose philanthropy score is equal to 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_data = dataset[dataset[""philanthropyScore""] == 5]
ages = filtered_data[""age""].tolist()
ages.sort()
smallest_three_ages = ages[:3]

return smallest_three_ages
",list of float64,"[48.0, 83.0, 83.0]","[48.0, 83.0, 83.0]"
List the highest 6 final worth values of billionaires in the 'Technology' category.,What are the 6 largest values in the finalWorth column for rows where the category is Technology?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
technology_individuals = dataset[dataset[""category""] == ""Technology""]
largest_worths = technology_individuals[""finalWorth""].nlargest(6).tolist()

return largest_worths
",list of (uint32),"[171000, 129000, 111000, 107000, 106000, 91400]","[171000, 129000, 111000, 107000, 106000, 91400]"
List the top 4 ranks of female billionaires.,What are the ranks of the top 4 female individuals listed in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
female_individuals = dataset[dataset[""gender""] == ""Female""].sort_values(""finalWorth"", ascending=False)
top_4_ranks = female_individuals[""rank""].head(4).tolist()

return top_4_ranks
",list of (uint16),[],"[14, 18, 21, 30]"
List the top 2 final worth values of billionaires in the 'Automotive' category.,What are the two highest finalWorth values for billionaires whose category is Automotive?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
automotive_billionaires = dataset[dataset[""category""] == ""Automotive""].sort_values(""finalWorth"", ascending=False)
top_two_worths = automotive_billionaires[""finalWorth""].head(2).tolist()

return top_two_worths
",list of (uint32),"[219000, 44800]","[219000, 44800]"
Did any children below the age of 18 survive?,Are there any rows in the dataset where Survived is True and Age is less than 18?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
young_survivors = dataset[(dataset[""Survived""] == True) & (dataset[""Age""] < 18)]
if len(young_survivors) > 0:
return True
else:
return False
",bool,True,True
Were there any passengers who paid a fare of more than $500?,Is there at least one passenger whose Fare is greater than 500?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
fare_greater_than_500 = dataset[dataset[""Fare""] > 500]
if len(fare_greater_than_500) > 0:
return True
else:
return False
",bool,True,True
Is every passenger's name unique?,Are all the values in the Name column distinct?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
names = dataset[""Name""].unique()
num_distinct_names = len(names)
total_names = len(dataset)

are_all_distinct = num_distinct_names == total_names

return are_all_distinct
",bool,True,True
Were there any female passengers in the 3rd class who survived?,"Are there any passengers with Survived as True, Pclass equal to 3 and Sex equal to female?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_passengers = dataset[(dataset['Survived'] == True) & (dataset['Pclass'] == 3) & (dataset['Sex'] == 'female')]
if len(filtered_passengers) > 0:
return True
else:
return False
",bool,True,True
How many unique passenger classes are present in the dataset?,What is the count of distinct values found within the Pclass column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_pclass_count = db[""Pclass""].nunique()

return distinct_pclass_count
",int64,3,3
What's the maximum age of the passengers?,What is the highest value present in the Age column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
highest_age = dataset[""Age""].max()

return highest_age
",float64,80.0,80.0
How many passengers boarded without any siblings or spouses?,What is the count of passengers who have Siblings_Spouses Aboard equal to zero?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
count = len(db[db[""Siblings_Spouses Aboard""] == 0])

return count
",int64,604,604
"On average, how much fare did the passengers pay?",What is the mean of the Fare column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
mean_fare = db[""Fare""].mean()

return mean_fare
",float64,32.30542000000000,32.31
Which passenger class has the highest number of survivors?,What is the value of Pclass that corresponds to the maximum number of survivors in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
survival_by_pclass = dataset.groupby('Pclass')['Survived'].sum()
max_survivors_pclass = survival_by_pclass[survival_by_pclass == survival_by_pclass.max()].index[0]

return str(max_survivors_pclass)
",string,1,1
What's the most common gender among the survivors?,Which gender appears most frequently in the Sex column for those who survived?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
survivors = dataset[dataset['Survived'] == True]
gender_counts = survivors['Sex'].value_counts()
most_frequent_gender = gender_counts.idxmax()

return most_frequent_gender
",string,female,female
"Among those who survived, which fare range was the most common: (0-50, 50-100, 100-150, 150+)?",What fare range appears most frequently among the survivors in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
survivors = db[db[""Survived""] == True]
fare_counts = survivors[""Fare""].value_counts()
most_frequent_fare = fare_counts.index[0]

return str(most_frequent_fare)
",string,13.0,0.0-50
"What's the most common age range among passengers: (0-18, 18-30, 30-50, 50+)?",,,,ERROR,18.0-30
Name the top 3 passenger classes by survival rate.,,,,ERROR,"[1, 2, 3]"
"Could you list the 3 fare ranges present in the dataset with the least survivors: (0-50, 50-100, 100-150, 150+)?",What are the three fare categories with the fewest number of survivors in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
survival_by_fare = dataset.groupby('Fare')['Survived'].sum().sort_values()
top_three_fares = survival_by_fare.index[:3].tolist()

return top_three_fares
",list of (string),"[14.1083, 20.2125, 19.9667]","['50-100', '150+', '100-150']"
"What are the top 4 age ranges ('30-50', '18-30', '0-18', '50+') with the highest number of survivors?","Retrieve the four age ranges ('30-50', '18-30', '0-18', '50+') that correspond to the highest counts of survivors in the dataset.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
age_ranges = {'0-18': [], '18-30': [], '30-50': [], '50+': []}

for index, row in dataset.iterrows():
age = row['Age']
if age <= 18:
age_ranges['0-18'].append(row['Survived'])
elif 18 < age <= 30:
age_ranges['18-30'].append(row['Survived'])
elif 30 < age <= 50:
age_ranges['30-50'].append(row['Survived'])
else:
age_ranges['50+'].append(row['Survived'])

survival_counts = {}
for age_range, survivors in age_ranges.items():
survival_counts[age_range] = sum(survivors)

sorted_age_ranges = sorted(survival_counts.items(), key=lambda item: item[1], reverse=True)

top_four_age_ranges = [age_range for age_range, count in sorted_age_ranges[:4]]
    
return top_four_age_ranges
",list of (string),"['30-50', '18-30', '0-18', '50+']","['30-50', '18-30', '0-18', '50+']"
What are the top 2 genders by average fare paid?,Calculate the average fare for each gender and return the two genders with the highest average fares.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
average_fare_by_gender = dataset.groupby('Sex')['Fare'].mean()
sorted_fares = average_fare_by_gender.sort_values(ascending=False)
top_two_genders = sorted_fares.index[:2].tolist()

return top_two_genders
",list of (string),"['female', 'male']","['female', 'male']"
What are the oldest 3 ages among the survivors?,Can you return the three largest values from the Age column where Survived is True?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
survived_ages = dataset[dataset[""Survived""] == True][""Age""].tolist()
sorted_ages = sorted(survived_ages, reverse=True)
top_three_ages = sorted_ages[:3]

return top_three_ages
",list of float64,"[63.0, 60.0, 58.0]","[80, 63, 63]"
Which are the top 4 fares paid by survivors?,Return the 4 highest values from the Fare column where Survived is True.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
survivors = db[db[""Survived""] == True]
highest_fares = survivors['Fare'].nlargest(4).tolist()

return highest_fares
",list of (float64),"[512.3292, 512.3292, 512.3292, 263.0]","[512.329, 512.329, 512.329, 263]"
Could you list the youngest 3 ages among the survivors?,What are the three smallest values in the Age column for rows where Survived is True?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
survivors = db[db[""Survived""] == True]
ages = survivors[""Age""].tolist()
ages.sort()
smallest_three_ages = ages[:3]

return smallest_three_ages
",list of (float64),"[3.0, 3.0, 4.0]","[1, 1, 1]"
Which are the lowest 4 fares among those who didn't survive?,Retrieve the 4 smallest values from the Fare column for rows where Survived is False.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
not_survived = db[db[""Survived""] == False]
smallest_fares = not_survived[""Fare""].nsmallest(4).tolist()

return smallest_fares
",list of float64,"[0.0, 0.0, 0.0, 0.0]","[0, 0, 0, 0]"
Is the average age of the respondents above 30?,,,,ERROR,True
Are there more single individuals than married ones in the dataset?,,,,ERROR,True
Do the majority of respondents have a height greater than 170 cm?,,,,ERROR,True
Is the most frequent hair color black?,,,,ERROR,False
How many unique nationalities are present in the dataset?,,,,ERROR,13
What is the average gross annual salary?,,,,ERROR,56332.81720400000
How many respondents wear glasses all the time?,,,,ERROR,98
What's the median age of the respondents?,,,,ERROR,33.0
What is the most common level of studies achieved?,,,,ERROR,Master
Which body complexity has the least number of respondents?,,,,ERROR,Very thin
What's the most frequent eye color?,,,,ERROR,Brown
Which sexual orientation has the highest representation?,,,,ERROR,Heterosexual
List the top 3 most common areas of knowledge.,,,,ERROR,"['Computer Science', 'Business', 'Enginering & Architecture']"
List the bottom 3 hair lengths in terms of frequency.,,,,ERROR,"['Medium', 'Long', 'Bald']"
Name the top 5 civil statuses represented in the dataset.,,,,ERROR,"['Single', 'Married', 'In a Relationship', 'In a Relationship Cohabiting', 'Divorced']"
What are the 4 least common hair colors?,,,,ERROR,"['Red', 'Other', 'White', 'Blue']"
What are the top 4 maximum gross annual salaries?,,,,ERROR,"[500000.0, 360000.0, 300000.0, 300000.0]"
Name the 3 happiness values for the 3 unhappiest people in the happiness scale.,,,,ERROR,"[2, 2, 2]"
What are the 5 highest ages present in the dataset?,,,,ERROR,"[65, 62, 60, 60, 59]"
List the bottom 6 skin tone values based on frequency.,,,,ERROR,"[2, 1, 6, 0, 7, 8]"
Are there any trips with a total distance greater than 30 miles?,Is there at least one trip where the trip distance is greater than 30.0?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
trip_distances = db[""trip_distance""]
has_long_trip = (trip_distances > 30.0).any()

return has_long_trip
",bool,False,False
Were there any trips that cost more than $100 in total?,Is there any record in the dataset where the total amount exceeds 100?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
total_amount_exceeds_100 = dataset[""total_amount""] > 100
any_record_exists = total_amount_exceeds_100.any()

return any_record_exists
",bool,False,False
Is there any trip with more than 6 passengers?,Are there any records in the dataset where the passenger count is greater than 6?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
passenger_count_gt_6 = dataset[dataset[""passenger_count""] > 6]
result = len(passenger_count_gt_6) > 0

return result
",bool,False,False
Did all the trips use a payment type of either 1 or 2?,Is every entry in the dataset such that the payment type is either 1 or 2?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
payment_types = dataset['payment_type'].unique()
valid_payment_types = {1, 2}

return valid_payment_types.issubset(set(payment_types))
",bool,True,False
What is the maximum fare amount charged for a trip?,What is the largest value present in the fare_amount column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
largest_fare = db[""fare_amount""].max()

return largest_fare
",float64,75.25,75.25
How many unique pickup locations are in the dataset?,What is the count of distinct values present in the PULocationID column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_pulocationid_count = db[""PULocationID""].nunique()

return distinct_pulocationid_count
",int64,96,96
What is the average tip amount given by passengers?,Calculate the mean value of the tip_amount column in the Taxi dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
mean_tip_amount = db['tip_amount'].mean()

return mean_tip_amount
",float64,2.7366810000000000,2.74
How many trips took place in the airport area?,What is the count of trips where the Airport_fee is not null?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
count = db[db['Airport_fee'].notna()].shape[0]

return count
",int64,99807,99807
Which payment type is the most common in the dataset?,What is the most frequent value in the payment_type column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
most_frequent_payment_type = dataset['payment_type'].mode()[0]

return most_frequent_payment_type
",string,1,1
Which vendor has the most trips recorded?,What is the value of VendorID that appears most frequently in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
vendor_counts = db['VendorID'].value_counts()
most_frequent_vendor = vendor_counts.idxmax()

return str(most_frequent_vendor)
",string,2,2
What is the most common drop-off location?,Which DOLocationID appears most frequently in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
dolocationid_counts = db['DOLocationID'].value_counts()
most_frequent_dolocationid = dolocationid_counts.index[0]

return str(most_frequent_dolocationid)
",string,236,236
On which date did the first recorded trip occur?,What is the earliest value in the tpep_pickup_datetime column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
earliest_pickup_time = db[""tpep_pickup_datetime""].min()

return earliest_pickup_time
",datetime64[us],31-01-2023 23:52,31-01-2023
Which are the top 2 most frequent pickup locations?,What are the two PULocationID values that appear most often in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
pulocationid_counts = db['PULocationID'].value_counts()
top_two_pulocations = pulocationid_counts.head(2).index.tolist()

return top_two_pulocations
",list of (string),"[161, 237]","[161, 237]"
Name the 4 most common rate codes used.,,,,ERROR,"[1, 2, 5, 4]"
list the 2 most frequent store and forward flags.,What are the two most common values present in the store_and_fwd_flag column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
value_counts = db['store_and_fwd_flag'].value_counts()
most_common_values = value_counts.nlargest(2).index.tolist()

return most_common_values
",list of (string),"['N', 'Y']","['N', 'Y']"
Identify the top 4 payment types used by frequency,What are the 4 most frequent payment types in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
payment_type_counts = dataset['payment_type'].value_counts()
most_frequent_payment_types = payment_type_counts.nlargest(4).index.tolist()

return most_frequent_payment_types
",list of (string),"[1, 2, 4, 3]","[1, 2, 4, 3]"
Report the 4 highest toll amounts paid.,What are the four largest values present in the tolls_amount column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
largest_tolls = db['tolls_amount'].nlargest(4).tolist()

return largest_tolls
",list of (uint8),"[0, 0, 0, 0]","[0, 0, 0, 0]"
list the top 3 longest trip distances,Retrieve the trip distances corresponding to the 3 largest values in the trip_distance column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
trip_distances = db[""trip_distance""].tolist()
sorted_distances = sorted(trip_distances, reverse=True)
top_3_distances = sorted_distances[:3]

return top_3_distances
",list of (float64),"[19.83, 19.74, 19.68]","[19.83, 19.74, 19.68]"
Identify the 5 largest total amounts paid for trips.,What are the 5 highest values in the total_amount column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
highest_total_amounts = dataset['total_amount'].nlargest(5).tolist()

return highest_total_amounts
",list of (float64),"[80.0, 80.0, 80.0, 80.0, 79.55]","[80.0, 80.0, 80.0, 80.0, 80.0]"
Report the 6 highest fare amounts charged.,What are the 6 largest values present in the fare_amount column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
largest_fare_amounts = db['fare_amount'].nlargest(6).tolist()

return largest_fare_amounts
",list of (float64),"[75.25, 74.4, 73.0, 73.0, 73.0, 73.0]","[75.25, 74.4, 73.0, 73.0, 73.0, 73.0]"
Are there any complaints made in Brooklyn?,Is there any row in the dataset where the borough is Brooklyn?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
brooklyn_exists = db[db[""borough""] == ""Brooklyn""].shape[0] > 0

return brooklyn_exists
",bool,False,True
Do any complaints have 'Dog' as a descriptor?,,,,ERROR,True
Were there any complaints raised in April?,Is there any record in the dataset where the month name is April?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
april_records = db[db[""month_name""] == ""April""]
if len(april_records) > 0:
return True
else:
return False
",bool,True,True
Is the Mayor's office of special enforcement one of the agencies handling complaints?,"Does the agency named ""Mayor's office of special enforcement"" appear in the list of agencies handling complaints?","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
agencies = db[""agency_name""].unique()
target_agency = ""Mayor's office of special enforcement""

if target_agency in agencies:
return True
else:
return False
",bool,False,True
How many complaints have been made in Queens?,"What is the count of records where the borough column equals ""Queens""?","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
queens_records = db[db[""borough""] == ""Queens""]
count = len(queens_records)

return count
",int64,0,23110
What's the total number of unique agencies handling complaints?,How many distinct values are present in the agency column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
distinct_agencies = dataset['agency'].nunique()

return distinct_agencies
",int64,22,22
How many complaints were raised at midnight?,What is the count of complaints where the hour of creation is equal to 0?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
complaints_at_hour_zero = db[db['hour'] == 0]
count = len(complaints_at_hour_zero)

return count
",int64,14811,14811
How many unique descriptors are present in the dataset?,What is the count of distinct values found in the descriptor column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_descriptors = db[""descriptor""].nunique()

return distinct_descriptors
",int64,1131,1131
Which borough has the most complaints?,,,,ERROR,BROOKLYN
Which month sees the highest number of complaints?,What is the name of the month that has the highest count of complaints in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
complaint_counts = db.groupby('month_name')['segmentation_1'].count()
max_month = complaint_counts[complaint_counts == complaint_counts.max()].index[0]

return max_month
",string,July,July
Which weekday has the least complaints?,What is the weekday with the minimum count of complaints in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
weekday_counts = db['weekday_name'].value_counts()
min_weekday = weekday_counts.idxmin()

return min_weekday
",string,Sunday,Sunday
Which agency is least frequently handling complaints?,What is the name of the agency that appears least often in the complaint data?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
agency_counts = db['agency'].value_counts()
least_common_agency = agency_counts.idxmin()

return least_common_agency
",string,ACS,ACS
List the top 5 most frequent complaint types.,What are the 5 complaint types that occur most often in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
complaint_type_counts = dataset['complaint_type'].value_counts()
most_common_complaint_types = complaint_type_counts.head(5).index.tolist()

return most_common_complaint_types
",list of string,"['Noise - Residential', 'HEAT/HOT WATER', 'Illegal Parking', 'Blocked Driveway', 'Street Condition']","['Noise - Residential', 'HEAT/HOT WATER', 'Illegal Parking', 'Blocked Driveway', 'Street Condition']"
Which 4 agencies handle the most complaints?,Retrieve the names of the top 4 agencies with the highest count of complaints.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
agency_counts = db['agency'].value_counts()
top_4_agencies = agency_counts.head(4).index.tolist()

return top_4_agencies
",list of string,"['NYPD', 'HPD', 'DOT', 'DSNY']","['NYPD', 'HPD', 'DOT', 'DSNY']"
Name the 2 least frequent descriptors for complaints by inverse alphabetical order.,,,,ERROR,"['Booting Company', 'Ready NY - Businesses', 'Animal']"
Mention the 2 most common weekdays for complaints.,What are the two weekdays that appear most frequently in the complaint data?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
weekday_counts = db['weekday_name'].value_counts()
top_two_weekdays = weekday_counts.nlargest(2).index.tolist()

return top_two_weekdays
",list of string,"['Tuesday', 'Monday']","['Tuesday', 'Monday']"
What are the top 4 hours with the most complaints?,Retrieve the four hour values that appear most frequently in the complaint_type column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
hour_counts = db['hour'].value_counts().nlargest(4).index.tolist()

return hour_counts
",list of (uint8),"[0, 12, 10, 11]","[0, 12, 10, 11]"
State the 3 lowest unique complaint keys.,Retrieve the three smallest distinct values from the unique_key column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
smallest_unique_keys = db['unique_key'].drop_duplicates().nsmallest(3).tolist()

return smallest_unique_keys
",list of (uint32),"[15628852, 15634748, 15634996]","[15628852, 15634748, 15634996]"
Which 2 hours see the least complaints?,What are the two hours with the lowest count of complaints in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
hour_counts = db['hour'].value_counts().sort_values(ascending=True)
two_lowest_hours = list(hour_counts.index[:2])

return two_lowest_hours
",string,"[4, 5]","[6, 2]"
List the 6 highest complaint numbers from the dataset.,Retrieve the top 6 largest values from the complaint_type column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_6_complaint_types = db['complaint_type'].value_counts().nlargest(6).index.tolist()

return top_6_complaint_types
",list of (int64),"['Noise - Residential', 'HEAT/HOT WATER', 'Illegal Parking', 'Blocked Driveway', 'Street Condition', 'Street Light Condition']","[54954250, 54954040, 54952675, 54950924, 54950765, 54950581]"
Are all properties in the dataset located in the same neighbourhood?,Do all entries in the dataset have identical values for both neighbourhood_cleansed and host_neighbourhood columns?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
neighborhoods = dataset['neighbourhood_cleansed'].unique()
host_neighborhoods = dataset['host_neighbourhood'].unique()

if len(neighborhoods) == 1 and len(host_neighborhoods) == 1:
return True
else:
return False
",bool,False,False
Do all hosts verify their identity?,Is the host_identity_verified column equal to True for all rows in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
is_host_identity_verified_true = (dataset[""host_identity_verified""] == ""t"").all()

return is_host_identity_verified_true
",bool,False,False
Are all reviews_per_month values greater than 5?,"For all entries in the dataset, is the value of reviews_per_month greater than 5?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
reviews_greater_than_five = dataset[""reviews_per_month""] > 5
all_greater = reviews_greater_than_five.all()

return all_greater
",bool,False,False
Are there any listings without a specified room type?,Are there any entries in the dataset where the room type is missing or unspecified?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
missing_room_type = dataset[dataset['room_type'].isnull() | (dataset['room_type'] == 'Missing')]
has_missing = len(missing_room_type) > 0

return has_missing
",bool,False,False
How many unique neighbourhoods are there in the dataset?,What is the number of distinct values present in the neighbourhood_cleansed column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
distinct_neighbourhoods = dataset[""neighbourhood_cleansed""].nunique()

return distinct_neighbourhoods
",int64,33,563
How many listings don't have a valid price?,How many listings have a missing or invalid value in the price column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
missing_prices = dataset[dataset['price'].isna() | (dataset['price'] == '')]
count = len(missing_prices)

return count
",int64,75241,0
How many properties have received the worst possible (0-5) review score for communication?,What is the count of properties where the review score for communication is equal to 0?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
communication_score_zero = dataset[dataset[""review_scores_communication""] == 0]
count = len(communication_score_zero)

return count
",int64,6,6
What is the maximum number of bedrooms a property has in this dataset?,What is the highest value present in the bedrooms column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
highest_bedrooms = dataset[""bedrooms""].max()

return highest_bedrooms
",float64,22.0,22.0
Which neighbourhood has the most listings?,What is the value of neighbourhood_cleansed that appears most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
neighborhood_counts = dataset['neighbourhood_cleansed'].value_counts()
most_frequent_neighbourhood = neighborhood_counts.index[0]

return most_frequent_neighbourhood
",string,Westminster,Westminster
What is the most common room type in the listings?,What is the value of room_type that appears most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
room_type_counts = dataset['room_type'].value_counts()
most_frequent_room_type = room_type_counts.idxmax()

return most_frequent_room_type
",string,Entire home/apt,Entire home/apt
What property type has the most listings?,Which unique value appears most frequently in the property_type column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
value_counts = dataset['property_type'].value_counts()
most_frequent_value = value_counts.idxmax()

return most_frequent_value
",string,Entire rental unit,Entire rental unit
Which host verification method is the least used?,,,,,photographer
List the top 3 neighbourhoods with the most listings.,"Retrieve the names of the top 3 neighbourhoods based on the count of listings, sorted in descending order.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
neighbourhood_counts = dataset['neighbourhood'].value_counts().nlargest(3)
top_neighbourhoods = neighbourhood_counts.index.tolist()

return top_neighbourhoods
",list of string,"['Greater London, England, United Kingdom', 'London, United Kingdom', 'London, England, United Kingdom']","['Westminster', 'Tower Hamlets', 'Hackney']"
Which are the top 4 most common property types?,What are the four most frequent values present in the property_type column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
property_type_counts = dataset['property_type'].value_counts()
most_frequent_types = property_type_counts.head(4).index.tolist()

return most_frequent_types
",list of string,"['Entire rental unit', 'Private room in rental unit', 'Private room in home', 'Entire condo']","['Entire rental unit', 'Private room in rental unit', 'Private room in home', 'Entire condo']"
List the 2 most common host verification methods.,,,,ERROR,"['phone', 'email']"
Which are the 2 most preferred room types?,What are the two most frequent values present in the room_type column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
room_type_counts = dataset['room_type'].value_counts()
most_frequent_two = room_type_counts.head(2).index.tolist()

return most_frequent_two
",list of string,"['Entire home/apt', 'Private room']","['Entire home/apt', 'Private room']"
What are the top 3 highest review scores for location?,Retrieve the top 3 highest values from the review_scores_location column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_3_locations = dataset.sort_values(by=""review_scores_location"", ascending=False).head(3)[""review_scores_location""].tolist()

return top_3_locations
",list of (float64),"[5.0, 5.0, 5.0]","[5.0, 5.0, 5.0]"
What are the 4 most common number of bedrooms in properties?,What are the four most frequent values present in the bedrooms column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
bedroom_counts = dataset['bedrooms'].value_counts().nlargest(4)
answer = bedroom_counts.index.tolist()

return answer
",list of (int64),"[1.0, 2.0, 3.0, 4.0]","[1.0, 2.0, 3.0, 4.0]"
What are the 5 highest counts of listings by a single host for entire homes?,Retrieve the top 5 highest values from the calculated_host_listings_count_entire_homes column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_5_values = dataset.nlargest(5, 'calculated_host_listings_count_entire_homes')['calculated_host_listings_count_entire_homes'].tolist()

return top_5_values
",list of (uint16),"[288, 288, 288, 288, 288]","[288, 288, 288, 288, 288]"
List the 6 lowest review scores for communication.,Retrieve the six smallest values from the review scores related to communication.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
communication_scores = dataset[""review_scores_communication""].tolist()
sorted_scores = sorted(communication_scores)
smallest_six = sorted_scores[:6]

return smallest_six
",list of (float64),"[4.33, 4.67, 4.83, nan, nan, 5.0]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]"
Are there players who have a greater overall score than their potential score?,,,,ERROR,False
Are there any players who joined their current club before they were 18 years old?,,,,ERROR,True
Are there any players whose preferred foot is left and are from a nationality that starts with 'B'?,,,,ERROR,True
Are there any players who are taller than 6 feet and have an agility score above 90?,,,,ERROR,False
What is the average overall score of players from France?,,,,ERROR,67.861432
How many unique clubs are there in the dataset?,,,,ERROR,683
What is the highest value (in €) of a player in the dataset?,,,,ERROR,105500000
How many players have the position 'ST'?,,,,ERROR,414
What is the most common nationality in the dataset?,,,,ERROR,England
What is the most common preferred foot amongst players?,,,,ERROR,Right
Which club has the most players in the dataset?,,,,ERROR,Crystal Palace
What is the most common position of players in the dataset?,,,,ERROR,SUB
Which are the top 5 nationalities in terms of the average overall score of their players?,,,,ERROR,"['Tanzania', 'Syria', 'Mozambique', 'Chad', 'Central African Rep.']"
Which are the top 3 clubs in terms of the total value (in €) of their players?,,,,ERROR,"['Liverpool', 'Manchester City', 'Real Madrid']"
Which are the bottom 4 nationalities in terms of the average agility of their players?,,,,ERROR,"['Macau', 'Andorra', 'Moldova', 'Liechtenstein']"
Which are the top 6 clubs in terms of the average potential score of their players?,,,,ERROR,"['FC Bayern München', 'Real Madrid', 'FC Barcelona', 'Paris Saint-Germain', 'Juventus', 'Manchester City']"
What are the top 3 overall scores in the dataset?,,,,ERROR,"[93, 92, 91]"
What are the bottom 5 potential scores in the dataset?,,,,ERROR,"[48, 48, 49, 50, 50]"
What are the top 4 values (in €) of players in the dataset?,,,,ERROR,"[105500000, 90000000, 87000000, 80000000]"
What are the top 2 wages (in €) of players in the dataset?,,,,ERROR,"[560000, 370000]"
There are no tornadoes that resulted in more than 500 injuries.,Is there any tornado record in the dataset where the number of injuries is greater than 500?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
injuries_greater_than_500 = db[db[""inj""] > 500]
if len(injuries_greater_than_500) > 0:
return True
else:
return False
",bool,True,True
All tornadoes in the dataset occurred in the 21st century.,Is the year of every tornado entry greater than or equal to 2001 and less than or equal to 2099?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
years = dataset['yr']
is_within_range = (years >= 2001) & (years <= 2099)

return is_within_range.all()
",bool,False,False
No tornado has a length greater than 100 miles.,Is there any tornado in the dataset with a length greater than 100?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
tornados_longer_than_100 = db[db[""len""] > 100]
exists = not tornados_longer_than_100.empty

return exists
",bool,True,True
There are no tornadoes that resulted in more than 100 fatalities.,Is there any tornado entry where the fat column value is greater than 100?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
fat_greater_than_100 = dataset[dataset[""fat""] > 100]
exists = len(fat_greater_than_100) > 0

return exists
",bool,True,True
How many unique states are represented in the dataset?,What is the number of distinct values present in the st column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_values = db['st'].nunique()

return distinct_values
",int64,53,53
What is the highest magnitude of tornado recorded in the dataset?,What is the maximum value present in the magnitude column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_magnitude = db[""mag""].max()

return max_magnitude
",int8,5,5
What is the longest length of a tornado path in the dataset?,What is the maximum value of the tornado path length column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_len = dataset[""len""].max()

return max_len
",float64,234.7,234.7
What is the maximum number of injuries caused by a single tornado?,Find the largest value in the injuries column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
largest_injuries = db[""inj""].max()

return largest_injuries
",uint16,1740,1740
Which state has experienced the most tornadoes?,What is the value of the st column that appears most frequently in the Tornados dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
st_counts = dataset['st'].value_counts()
most_frequent_st = st_counts.index[0]

return most_frequent_st
",string,TX,TX
In which month do most tornadoes occur?,What is the most frequent month represented in the dataset of tornado occurrences?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
month_counts = dataset['mo'].value_counts()
most_frequent_month = month_counts.idxmax()

return str(most_frequent_month)
",string,5,5
On what date did the most destructive tornado (by injuries) occur?,,,,ERROR,10-04-1979
On what date did the longest tornado (by path length) occur?,What is the date associated with the tornado that has the maximum path length?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_len_tornado = db.loc[db[""len""] == db[""len""].max()]
date = max_len_tornado[""date""].iloc[0]

return date
",datetime64[us,22-03-1953,22-03-1953
Which are the top 5 states with the highest average tornado magnitude?,"What are the names of the 5 states with the largest average tornado magnitude, ordered from highest to lowest average magnitude?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
avg_mag = dataset.groupby('st')['mag'].mean().sort_values(ascending=False)
top_5_states = avg_mag.head(5).index.tolist()

return top_5_states
",list of (string),"['AR', 'KY', 'VT', 'TN', 'MS']","[AR, KY, VT, TN, MS]"
Which are the top 2 states with the most tornado-related injuries? If in a tie then select alphabetically. ,,,,ERROR,"[TX, AL]"
Which are the top 4 states with the most tornado-related fatalities? If you find a tie select alphabetically.,Retrieve the names of the top four states sorted alphabetically that have the highest number of tornado-related fatalities.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
state_fatalities = db.groupby('st')['fat'].sum().sort_values(ascending=False)
top_four_states = state_fatalities.head(4).index.tolist()
top_four_states.sort()

return top_four_states
",list of (string),"['AL', 'MS', 'OK', 'TX']","[AL, TX, MS, OK]"
Which are the bottom 2 states in terms of the average tornado path length?,What are the names of the two states with the smallest average tornado path length?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
avg_len = db.groupby('st')['len'].mean().sort_values()
top_two_states = avg_len.head(2).index.tolist()

return top_two_states
",list of (string),"['AK', 'VI']","[AK, VI]"
What are the top 3 number of injuries caused by tornadoes in the dataset?,Retrieve the top 3 highest values from the injuries column in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_3_injuries = db.sort_values(by='inj', ascending=False)['inj'].head(3).tolist()

return top_3_injuries
",list of (uint16),"[1740, 1500, 1228]","[1740, 1500, 1228]"
What are the top 5 magnitudes of tornadoes in the dataset?,Retrieve the 5 largest values from the mag column in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
largest_mag = dataset['mag'].nlargest(5).tolist()

return largest_mag
",list of (int8),"[5, 5, 5, 5, 5]","[5, 5, 5, 5, 5]"
What are the top 4 path lengths of tornadoes in the dataset?,Retrieve the four largest values from the len column in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
largest_len = db.nlargest(4, 'len')['len'].tolist()

return largest_len
",list of (float64),"[234.7, 217.8, 202.5, 202.1]","[234.7, 217.8, 202.5, 202.1]"
What are the top 6 number of fatalities caused by tornadoes in the dataset?,Retrieve the six largest values from the fatalities column in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
fatalities = db[""fat""].tolist()
largest_fatalities = sorted(fatalities, reverse=True)[:6]

return largest_fatalities
",list of (uint8),"[158, 116, 114, 94, 80, 72]","[158, 116, 114, 94, 80, 72]"
There were no days when the precipitation was greater than 5 inches.,Is it true that all values in the PRCP column are less than or equal to 5?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
all_prcp_less_than_or_equal_to_5 = (db[""PRCP""] <= 5).all()

return all_prcp_less_than_or_equal_to_5
",bool,False,False
All recorded temperatures are above freezing point.,Is every value in the TMIN column greater than 0.0?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
all_tmin_greater_than_zero = (db[""TMIN""] > 0.0).all()

return all_tmin_greater_than_zero
",bool,False,False
There were no days when the snow depth was more than 10 inches.,Is every value in the SNWD column less than or equal to 10?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
all_values_less_than_or_equal_to_10 = (db[""SNWD""] <= 10).all()

return all_values_less_than_or_equal_to_10
",bool,False,False
There were no days when the maximum temperature was below freezing point.,Is every value in the TMAX column greater than or equal to 0?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
all_values_non_negative = (db[""TMAX""] >= 0).all()

return all_values_non_negative
",bool,False,False
What is the highest recorded precipitation in inches?,What is the maximum value of precipitation recorded in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_precipitation = db[""PRCP""].max()

return max_precipitation
",float64,8.28,8.28
What is the lowest minimum temperature recorded?,What is the smallest value found in the TMIN column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
smallest_tmin = db[""TMIN""].min()

return smallest_tmin
",float64,-015.0,-015.0
What is the highest maximum temperature recorded?,What is the maximum value in the TMAX column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_tmax = db[""TMAX""].max()

return max_tmax
",float64,106.0,106.0
What is the deepest recorded snow depth in inches?,What is the maximum value of snow depth recorded in inches?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_snow_depth = db[""SNWD""].max()

return max_snow_depth
",float64,26.0,26.0
On which date was the highest precipitation recorded?,What is the date corresponding to the maximum precipitation value?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_precipitation_date = db.loc[db[""PRCP""] == db[""PRCP""].max(), ""DATE""].iloc[0]

return max_precipitation_date
",datetime64[us],23-09-3782,23-09-3782
On which date was the lowest minimum temperature recorded?,What is the date corresponding to the smallest value in the TMIN column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
min_tmin_date = db.loc[db[""TMIN""] == db[""TMIN""].min(), ""DATE""].iloc[0]

return min_tmin_date
",datetime64[us],09-02-1934,09-02-1934
On which date was the highest maximum temperature recorded?,What is the date corresponding to the maximum value in the TMAX column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_temp_date = db.loc[db[""TMAX""] == db[""TMAX""].max(), ""DATE""].iloc[0]

return max_temp_date
",datetime64[us],09-07-1936,09-07-1936
On which date was the deepest snow depth recorded?,What is the date associated with the maximum snow depth value in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_snow_depth = db.loc[db[""SNWD""] == db[""SNWD""].max()]
date = max_snow_depth[""DATE""].iloc[0]

return date
",datetime64[us],27-12-1947,27-12-1947
What are the dates of the top 5 highest recorded precipitation events?,Retrieve the dates corresponding to the 5 precipitation events with the largest PRCP values.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
sorted_precipitation = db.sort_values(by='PRCP', ascending=False)
top_5_dates = sorted_precipitation['DATE'].head(5).tolist()

return top_5_dates
",list of (datetime64[us]),"[Timestamp('1882-09-23 00:00:00+0000', tz='UTC'), Timestamp('2007-04-15 00:00:00+0000', tz='UTC'), Timestamp('1977-11-08 00:00:00+0000', tz='UTC'), Timestamp('1903-10-09 00:00:00+0000', tz='UTC'), Timestamp('2021-09-01 00:00:00+0000', tz='UTC')]","[1882-09-23, 2007-04-15, 1977-11-08, 1903-10-09, 2021-09-01]"
What are the dates of the top 3 lowest minimum temperatures recorded?,Retrieve the dates corresponding to the three smallest values in the TMIN column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
smallest_tmin_indices = db['TMIN'].nsmallest(3).index.tolist()
dates = db.loc[smallest_tmin_indices]['DATE'].tolist()

return dates
",list of datetime64[us],"[Timestamp('1934-02-09 00:00:00+0000', tz='UTC'), Timestamp('1917-12-30 00:00:00+0000', tz='UTC'), Timestamp('1943-02-15 00:00:00+0000', tz='UTC')]","[1934-02-09, 1917-12-30, 1943-02-15]"
What are the dates of the top 4 highest maximum temperatures recorded?,Retrieve the dates corresponding to the four largest values in the TMAX column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
largest_tmax_indices = db['TMAX'].nlargest(4).index
dates = db.loc[largest_tmax_indices, 'DATE']

return list(dates)
",list of datetime64[us],"[Timestamp('1936-07-09 00:00:00+0000', tz='UTC'), Timestamp('1918-08-07 00:00:00+0000', tz='UTC'), Timestamp('1977-07-21 00:00:00+0000', tz='UTC'), Timestamp('2011-07-22 00:00:00+0000', tz='UTC')]","[1936-07-09, 1918-08-07, 1977-07-21, 2011-07-22]"
What are the dates of the top 2 deepest snow depth recorded?,Retrieve the dates corresponding to the two largest snow depth values in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
sorted_snow = db.sort_values(by='SNWD', ascending=False)
top_two_dates = sorted_snow['DATE'].head(2).tolist()

return top_two_dates
",list of (datetime64[us]),"[Timestamp('1947-12-27 00:00:00+0000', tz='UTC'), Timestamp('1947-12-28 00:00:00+0000', tz='UTC')]","[1947-12-27, 1947-12-28]"
What are the 3 highest recorded precipitation events in inches?,Retrieve the precipitation values corresponding to the 3 largest entries in the PRCP column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
precipitation_values = db.nlargest(3, 'PRCP')['PRCP'].tolist()

return precipitation_values
",list of (float64),"[8.28, 7.57, 7.4]","[8.28, 7.57, 7.4]"
What are the 5 lowest minimum temperatures recorded?,Retrieve the five smallest values from the TMIN column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
smallest_tmin = db['TMIN'].nsmallest(5).tolist()

return smallest_tmin
",list of (float64),"[-15.0, -13.0, -8.0, -7.0, -7.0]","[-15.0, -13.0, -8.0, -7.0, -7.0]"
What are the 4 highest maximum temperatures recorded?,Retrieve the four largest values from the TMAX column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
largest_tmax_values = db['TMAX'].nlargest(4).tolist()

return largest_tmax_values
",list of (float64),"[106.0, 104.0, 104.0, 104.0]","[106.0, 104.0, 104.0, 104.0]"
What are the 2 deepest snow depth recorded in inches?,,,,ERROR,"[26.0, 25.0]"
Are there more than 20 unique clothing items in the dataset?,"What is the count of distinct values in the Clothing ID column, and is this count greater than 20?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
distinct_clothing_ids = dataset['Clothing ID'].nunique()
is_count_greater_than_20 = distinct_clothing_ids > 20

return is_count_greater_than_20
",bool,True,True
Is the age of the reviewers above 50 years on average?,Calculate the average age of reviewers and determine if this average is greater than 50.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
average_age = db[""Age""].mean()
is_greater_than_50 = average_age > 50

return is_greater_than_50
",bool,False,False
Do all reviews come from the same department?,Is there only one unique value in the Department Name column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
unique_department_names = dataset['Department Name'].nunique()
is_only_one = unique_department_names == 1

return is_only_one
",bool,False,False
Are all products recommended?,Is the Recommended IND column equal to 1 for all rows in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
all_recommended = db[""Recommended IND""] == 1
is_equal = all_recommended.all()

return is_equal
",bool,False,False
What is the average age of the reviewers?,Calculate the mean of the Age column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
mean_age = dataset[""Age""].mean()

return mean_age
",float64,43.198544000000000,43.198544000000000
What's the highest number of positive feedback received for a review?,What is the maximum value in the Positive Feedback Count column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_feedback = db[""Positive Feedback Count""].max()

return max_feedback
",uint8,122,122
What is the most common rating given by reviewers?,Which rating value appears most frequently in the Rating column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
value_counts = dataset['Rating'].value_counts()
most_frequent_rating = value_counts.idxmax()

return str(most_frequent_rating)
",string,5,5
How many unique clothing items are there in the dataset?,What is the count of distinct values present in the Clothing ID column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_clothing_ids = db['Clothing ID'].nunique()

return distinct_clothing_ids
",int64,1206,1206
Which department has the most reviews?,What is the value of Department Name that appears most frequently in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
department_counts = db['Department Name'].value_counts()
most_frequent_department = department_counts.idxmax()

return most_frequent_department
",string,Tops,Tops
Which class of clothing is most commonly reviewed?,What is the most frequent value in the Class Name column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
most_frequent_class = dataset['Class Name'].mode()[0]

return most_frequent_class
",string,Dresses,Dresses
Which division is most commonly mentioned in the reviews?,What is the most frequent value in the Division Name column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
most_frequent_division = dataset['Division Name'].mode()[0]

return most_frequent_division
",string,General,General
What is the most frequently reviewed clothing item? If you find a tie answer with row order.,,,,ERROR,1078
Which are the 4 most reviewed categories in Department Name?,What are the names of the top 4 Department Names based on the number of reviews?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
department_review_counts = dataset.groupby('Department Name')['Review Text'].count()
top_4_departments = department_review_counts.nlargest(4).index.tolist()

return top_4_departments
",list of (string),"['Tops', 'Dresses', 'Bottoms', 'Intimate']","['Tops', 'Dresses', 'Bottoms', 'Intimate']"
Which are the top 2 most reviewed categories in Class Name?,What are the two categories with the highest count in the Class Name column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
class_name_counts = dataset['Class Name'].value_counts()
top_two_classes = class_name_counts.nlargest(2).index.tolist()

return top_two_classes
",list of (string),"['Dresses', 'Knits']","['Dresses', 'Knits']"
Which are the 2 most reviewed categories in Division Name?,What are the two Division Names that have the highest count of reviews?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
division_counts = dataset.groupby('Division Name')['Review Text'].count()
sorted_divisions = division_counts.sort_values(ascending=False)
top_two_divisions = sorted_divisions.head(2).index.tolist()

return top_two_divisions
",list of (string),"['General', 'General Petite']","['General', 'General Petite']"
What are the 4 highest ratings given by reviewers?,Retrieve the top 4 highest values from the Rating column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_4_ratings = db['Rating'].nlargest(4).tolist()

return top_4_ratings
",list of (uint8),"[5, 5, 5, 5]","[5, 4, 3, 2]"
What are the 5 oldest Ages of reviewers?,Return a list containing the 5 highest values from the Age column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
highest_ages = db['Age'].nlargest(5).tolist()

return highest_ages
",list of (uint8),"[99, 99, 94, 94, 94]","[99, 99, 94, 94, 94]"
What are the 4 most common Positive Feedback Counts of reviewers?,Retrieve the top 4 most frequent values from the Positive Feedback Count column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
value_counts = dataset['Positive Feedback Count'].value_counts()
top_4_values = value_counts.head(4).index.tolist()

return top_4_values
",list of (uint8),"[0, 1, 2, 3]","[0, 1, 2, 3]"
What are the 2 most common values for recommendation indicator?,Identify the two most frequent distinct values present in the Recommendation Indicator column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
recommendation_indicator_counts = db['Recommended IND'].value_counts().nlargest(2).index.tolist()

return recommendation_indicator_counts
",list of (string),"[1, 0]","[1, 0]"
What are the 2 most common clothing IDs in the reviews? If you find a tie answer in row order.,,,,ERROR,"[1078, 862]"
Was the highest reported incident in the year 2023 filed online?,"Is there an incident with the Incident Year equal to 2023 and Filed Online equal to ""True""?","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
filtered_incidents = db[(db['Incident Year'] == 2023) & (db['Filed Online'] == ""True"")]
if len(filtered_incidents) > 0:
return True
else:
return False
",bool,False,False
Are all incidents reported on Mondays resolved?,,,,ERROR,False
Do any incidents reported in Police District 'Central' fall in Supervisor District 5?,Is there any record where the Police District is 'Central' and the Supervisor District value matches 5?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
filtered_records = db[(db['Police District'] == 'Central') & (db['Supervisor District'] == 5)]
if len(filtered_records) > 0:
return True
else:
return False
",bool,True,False
Are there any incidents that occurred at the same latitude and longitude more than once?,,,,ERROR,True
How many unique types of incident categories are there in the dataset?,What is the count of distinct values present in the Incident Category column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_incident_categories = db[""Incident Category""].nunique()

return distinct_incident_categories
",int64,49,49
What's the total number of incidents reported online?,"How many incidents have the Filed Online column equal to ""True""?","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
online_incidents = db[db[""Filed Online""] == ""True""]
count = len(online_incidents)

return count
",int64,0,144099
How many different police districts are there in the dataset?,What is the count of unique values present in the Police District column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
unique_police_districts = db['Police District'].nunique()

return unique_police_districts
",int64,11,11
What is the average incident count per year?,"Calculate the mean of the Incident Year column, then divide the total number of incidents by that average year to determine the average incident count per year.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
mean_incident_year = dataset['Incident Year'].mean()
total_incidents = len(dataset)
average_incident_count_per_year = total_incidents / mean_incident_year

return average_incident_count_per_year
",float64,353.0144260000000,118851.16666700000
What is the most common incident category?,Which Incident Category appears most frequently in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
incident_category_counts = db['Incident Category'].value_counts()
most_frequent_category = incident_category_counts.index[0]

return most_frequent_category
",string,Larceny Theft,Larceny Theft
Which day of the week has the highest number of incidents?,,,,ERROR,Friday
What is the most common resolution for incidents reported online?,Which value appears most frequently in the Resolution column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
resolution_counts = dataset['Resolution'].value_counts()
most_frequent_resolution = resolution_counts.idxmax()

return most_frequent_resolution
",string,Open or Active,Open or Active
What is the Police District with the most incidents?,Which Police District has the highest count of incidents in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
police_district_counts = db.groupby('Police District')['Incident ID'].count().reset_index()
max_count_district = police_district_counts.loc[police_district_counts['Incident ID'].idxmax()]['Police District']

return max_count_district
",string,Central,Central
What are the three most common incident descriptions?,Can you provide a list containing the three most frequent values found in the Incident Description column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
incident_descriptions = db[""Incident Description""].tolist()
description_counts = {}
for description in incident_descriptions:
if description in description_counts:
description_counts[description] += 1
else:
description_counts[description] = 1

sorted_descriptions = sorted(description_counts.items(), key=lambda item: item[1], reverse=True)
top_three_descriptions = [item[0] for item in sorted_descriptions[:3]]

return top_three_descriptions
",list of string,"['Theft, From Locked Vehicle, >$950', 'Malicious Mischief, Vandalism to Property', 'Battery']","['Theft, From Locked Vehicle, >$950', 'Malicious Mischief, Vandalism to Property', 'Battery']"
Name the 4 most frequently occurring police districts.,What are the names of the top 4 police districts with the highest number of incidents?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
police_district_counts = dataset['Police District'].value_counts().nlargest(4).index.tolist()

return police_district_counts
",list of string,"['Central', 'Northern', 'Mission', 'Southern']","[Central, Northern, Mission, Southern]"
List the three most common incident categories on Fridays.,What are the top three most frequent values in the Incident Category column for incidents that occurred on Fridays?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
friday_incidents = dataset[dataset['Incident Day of Week'] == 'Friday']
incident_category_counts = friday_incidents['Incident Category'].value_counts()
top_three_categories = incident_category_counts.head(3).index.tolist()

return top_three_categories
",list of string,"['Larceny Theft', 'Malicious Mischief', 'Other Miscellaneous']","[Larceny Theft, Malicious Mischief, Other Miscellaneous]"
Give the 6 most common resolutions for incidents.,What are the six most frequent values present in the Resolution column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
resolution_counts = dataset['Resolution'].value_counts()
most_frequent_resolutions = resolution_counts.head(6).index.tolist()

return most_frequent_resolutions
",category,"['Open or Active', 'Cite or Arrest Adult', 'Unfounded', 'Exceptional Adult']","[Open or Active, Cite or Arrest Adult, Unfounded, Exceptional Adult]"
List the years with the top 4 highest incident counts.,What are the four Incident Years that have the highest counts of incidents?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
incident_year_counts = db['Incident Year'].value_counts().sort_values(ascending=False)
top_four_years = incident_year_counts.head(4).index.tolist()

return top_four_years
",list of (uint16),"[2018, 2019, 2022, 2021]","[2018, 2019, 2022, 2021]"
Which 3 incident years have the lowest number of online filed reports? If two have the same number choose the latest year,,,,ERROR,"[2023, 2020, 2021]"
What are the 2 years with the highest incident counts.,Return a list containing the two years for which the number of incidents is greatest in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
incident_counts_by_year = db.groupby('Incident Year')['Row ID'].count().reset_index()
max_incident_count = incident_counts_by_year['Row ID'].max()
years_with_max_incidents = incident_counts_by_year[incident_counts_by_year['Row ID'] == max_incident_count]['Incident Year'].tolist()

return years_with_max_incidents
",list of (uint16),[2018],"[2018, 2019]"
Name the 6 years with the most number of unique incident categories.,Identify the six years that have the highest counts of distinct incident category values.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
year_counts = db['Incident Year'].value_counts().sort_values(ascending=False)
top_six_years = year_counts.head(6).index.tolist()

return top_six_years
",list of (uint16),"[2018, 2019, 2022, 2021, 2020, 2023]","[2018, 2019, 2020, 2021, 2022, 2023]"
Do all patients experience exercise-induced angina?,"Is the ExerciseAngina column always populated with the value ""Yes"" for all patients in the dataset?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
exercise_angina_values = dataset[""ExerciseAngina""].unique()
is_always_yes = len(exercise_angina_values) == 1 and 'Yes' in exercise_angina_values

return is_always_yes
",bool,False,False
Does any patient have a resting blood pressure above 200?,Is there any row in the dataset where the RestingBP value is greater than 200?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
bp_greater_than_200 = dataset[dataset[""RestingBP""] > 200]
result = len(bp_greater_than_200) > 0

return result
",bool,False,False
Are there patients without heart disease?,Do any patients in the dataset have HeartDisease attribute set to 0?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
has_no_heart_disease = (dataset[""HeartDisease""] == 0).any()

return has_no_heart_disease
",bool,True,True
Does everyone have normal resting electrocardiographic results?,"Is the RestingECG category for every individual in the dataset equal to ""normal""?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
all_normal = (dataset[""RestingECG""] == ""normal"").all()

return all_normal
",bool,False,False
What is the maximum age of patients in the dataset?,What is the largest value in the Age column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
largest_age = db[""Age""].max()

return largest_age
",float64,77,77
What is the minimum resting blood pressure among the patients?,What is the lowest value in the RestingBP column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
lowest_resting_bp = db[""RestingBP""].min()

return lowest_resting_bp
",float64,0,0
What is the average cholesterol level in the dataset?,Calculate the mean value of Cholesterol column in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
mean_cholesterol = dataset[""Cholesterol""].mean()

return mean_cholesterol
",float64,198.7995640000000,198.7995640000000
What is the standard deviation of maximum heart rate among the patients?,Calculate the standard deviation of the MaxHR column in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
std_dev = db[""MaxHR""].std()

return std_dev
",float64,25.4603340000000,25.4603340000000
What is the most common chest pain type among patients?,Which value appears most frequently in the ChestPainType column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
chest_pain_counts = db['ChestPainType'].value_counts()
most_frequent_type = chest_pain_counts.idxmax()

return most_frequent_type
",string,ASY,ASY
What is the least common resting electrocardiographic result?,Which resting electrocardiographic result appears the fewest times in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
resting_ecg_counts = db['RestingECG'].value_counts()
min_count_ecg = resting_ecg_counts.idxmin()

return min_count_ecg
",string,ST,ST
What is the most common ST slope among patients with heart disease?,Which value appears most frequently in the ST_Slope column for patients where HeartDisease is true?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
heart_disease_patients = db[db[""HeartDisease""] == 1]
st_slope_counts = heart_disease_patients[""ST_Slope""].value_counts()
most_frequent_st_slope = st_slope_counts.idxmax()

return most_frequent_st_slope
",string,Flat,Flat
What is the least common chest pain type among male patients?,Can you identify the most frequent ChestPainType value when filtering for patients whose Sex is Male?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
male_patients = dataset[dataset[""Sex""] == ""Male""]
chest_pain_types = male_patients[""ChestPainType""].value_counts()
most_frequent_chest_pain_type = chest_pain_types.idxmax()

return most_frequent_chest_pain_type
",string,ATA,TA
What are the top 3 most common chest pain types?,Can you provide a ranked list containing the three most frequent values found in the ChestPainType column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
chest_pain_type_counts = dataset['ChestPainType'].value_counts()
top_3_types = chest_pain_type_counts.head(3).index.tolist()

return top_3_types
",list of string,"['ASY', 'NAP', 'ATA']","['ASY', 'NAP', 'ATA']"
Which 4 resting electrocardiographic results are least common?,What are the four most infrequent values present in the RestingECG column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
value_counts = db['RestingECG'].value_counts()
most_infrequent = value_counts.nsmallest(4).index.tolist()

return most_infrequent
",list of string,"['ST', 'LVH', 'Normal']","['ST', 'LVH', 'Normal']"
What are the 2 most common ST slopes among patients with heart disease?,Identify the two most frequent values present in the ST_Slope column for patients where HeartDisease is true?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
st_slope_values = db[db[""HeartDisease""] == 1][""ST_Slope""].value_counts().nlargest(2).index.tolist()

return st_slope_values
",list of string,"['Flat', 'Up']","['Flat', 'Up']"
What are the 4 most common chest pain types among male patients?,Could you identify the four most frequent values present in the ChestPainType column for patients whose Sex is male?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
male_patients = db[db[""Sex""] == ""m""]
chest_pain_types = male_patients[""ChestPainType""].value_counts().nlargest(4).index.tolist()

return chest_pain_types
",list of string,"['ATA', 'NAP', 'ASY', 'TA']","['TA', 'ATA', 'NAP', 'ASY']"
What are the ages of the 5 oldest patients in the dataset?,Retrieve the Age values for the top 5 patients with highest age in descending order.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_5_patients = db.nlargest(5, 'Age')
ages = top_5_patients['Age'].tolist()

return ages
",list of (float64),"[77, 77, 76, 76, 75]","[77, 77, 76, 76, 75]"
What are the 4 highest resting blood pressures?,Retrieve the top 4 largest values from the RestingBP column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_4_restingbp = db['RestingBP'].nlargest(4).tolist()

return top_4_restingbp
",list of (uint8),"[200, 200, 200, 200]","[200, 200, 200, 200]"
What are the 6 lowest cholesterol levels in the dataset?,Retrieve the 6 smallest values from the Cholesterol column in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
cholesterol_values = db[""Cholesterol""].tolist()
smallest_cholesterol_values = sorted(cholesterol_values)[:6]

return smallest_cholesterol_values
",list of (uint16),"[0, 0, 0, 0, 0, 0]","[0, 0, 0, 0, 0, 0]"
What are the 3 highest maximum heart rates among the patients?,Retrieve the top 3 values from the MaxHR column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_3_maxhr = db['MaxHR'].nlargest(3).tolist()

return top_3_maxhr
",list of (uint8),"[202, 195, 194]","[202, 195, 194]"
Did the oldest roller coaster in the dataset still operate?,,,,ERROR,True
Is there a roller coaster in the dataset that operates at a speed more than 100 mph?,Are there any roller coasters in the dataset where the speed_mph column has a value greater than 100?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
coaster_speeds = db[""speed_mph""]
has_high_speed = (coaster_speeds > 100).any()

return has_high_speed
",bool,True,True
Are all roller coasters in the dataset designed by 'Werner Stengel' removed?,Is there any roller coaster with the designer as 'Werner Stengel'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
designer_stengel = dataset[dataset[""Designer""] == ""Werner Stengel""]
if len(designer_stengel) > 0:
return True
else:
return False
",bool,True,False
Does every roller coaster have a G-force value?,Is the G-force value available for all roller coasters in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
all_gforce_available = True
for index, row in db.iterrows():
if pd.isna(row['Gforce_clean']):
all_gforce_available = False
break

return all_gforce_available
",bool,False,False
What is the maximum speed (in mph) for roller coasters in the dataset?,What is the highest value in the speed_mph column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
answer = db[""speed_mph""].max()
return answer
",float64,149.1,149.1
How many roller coasters were introduced in the year 2000?,What is the count of roller coasters where the year_introduced attribute equals 2000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
coaster_count = dataset[dataset[""year_introduced""] == 2000].shape[0]

return coaster_count
",int64,47,47
What is the average G-force across all roller coasters in the dataset?,Calculate the mean value of G-force from the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
mean_gforce = db[""Gforce_clean""].mean()

return mean_gforce
",float64,3.8240060000000000,3.8240060000000000
What is the total number of roller coasters designed by 'Edwin Madeupname' in the dataset?,How many roller coasters have the designer field equal to 'Edwin Madeupname'?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
coaster_count = db[db[""Designer""] == ""Edwin Madeupname""].shape[0]

return coaster_count
",int64,0,0
Which manufacturer has built the fastest roller coaster?,What is the manufacturer associated with the roller coaster having the highest speed_mph value?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
highest_speed_coaster = db.loc[db[""speed_mph""] == db[""speed_mph""].max()]
manufacturer = highest_speed_coaster[""Manufacturer""].iloc[0]

return manufacturer
",category,Intamin,Intamin
What is the status of the roller coaster with the highest G-force?,What is the status value associated with the roller coaster that has the highest Gforce_clean value?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
highest_gforce_coaster = db.loc[db[""Gforce_clean""] == db[""Gforce_clean""].max()]
status = highest_gforce_coaster[""Status""].iloc[0]

return status
",category,Removed,Removed
What type of the roller coaster is the oldest in the dataset?,What is the value of the Type column for the roller coaster with the earliest opening_date_clean?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
earliest_coaster = db.loc[db[""opening_date_clean""] == db[""opening_date_clean""].min()]
coaster_type = earliest_coaster[""Type""].iloc[0]

return coaster_type
",category,Wood,Wood
What is the location of the roller coaster with the highest number of inversions?,Which location corresponds to the roller coaster that has the maximum value in the Inversions column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
coaster_with_max_inversions = db.loc[db[""Inversions""] == db[""Inversions""].max()]
location = coaster_with_max_inversions[""Location""].iloc[0]

return location
",string,Alton Towers,Alton Towers
What are the names of the top 3 fastest roller coasters?,Can you provide a list containing the names of the three roller coasters with the highest speed_mph values?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
coaster_names = db.sort_values(by='speed_mph', ascending=False)['Name'].head(3).tolist()

return coaster_names
",list of string,"[nan, nan, nan]","[Formula Rossa, Kingda Ka, Top Thrill Dragster]"
Which 2 roller coasters have the highest number of inversions?,Return the names of the top two roller coasters with the highest number of inversions.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
coaster_names = db.sort_values(by='Inversions', ascending=False)['coaster_name'].head(2).tolist()

return coaster_names
",list of (category),"['The Smiler', '10 Inversion Roller Coaster']","[The Smiler, Colossus (Thorpe Park)]"
What are the locations of the top 5 roller coasters with the highest G-force?,Can you provide the Location values for the five roller coasters that have the highest Gforce_clean value?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
coaster_data = db.sort_values(by='Gforce_clean', ascending=False).head(5)
locations = coaster_data['Location'].tolist()

return locations
",list of (string),"['Sea Lion Park', 'Fuji-Q Highland', 'Six Flags Over Texas', 'Nürburgring', 'Other']","[Sea Lion Park, Fuji-Q Highland, Six Flags Over Texas, Nürburgring, Morey's Piers]"
Name the 4 oldest roller coasters in the dataset.,Retrieve the names of the four roller coasters with the earliest opening dates from the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
roller_coasters = db.sort_values(by='Opened')
earliest_four_coasters = roller_coasters.head(4)['coaster_name'].tolist()

return earliest_four_coasters
",list of string,"['Switchback Railway (Euclid Beach Park)', 'Figure Eight (Euclid Beach Park)', 'Scenic Railway (Euclid Beach Park)', 'Aero Dips']","[Switchback Railway, Flip Flap Railway, Loop the Loop (Coney Island), Loop the Loop (Young's Pier)]"
What are the top 3 speeds (in mph) of roller coasters in the dataset?,Retrieve the three highest values from the speed_mph column in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_three_speeds = db.nlargest(3, 'speed_mph')['speed_mph'].tolist()

return top_three_speeds
",list of (float64),"[149.1, 128.0, 120.0]","[149.1, 128.0, 120.0]"
List the G-force values of the 2 roller coasters with the highest G-force.,What are the G-force values corresponding to the two roller coasters that have the highest Gforce_clean value?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
coaster_data = db.sort_values(by='Gforce_clean', ascending=False).head(2)
gforces = coaster_data['Gforce_clean'].tolist()

return gforces
",list of (float64),"[12.0, 6.5]","[12.0, 6.5]"
What are the heights (in ft) of the top 4 tallest roller coasters?,Retrieve a list containing the height in feet for the four roller coasters with the highest height values.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
coaster_heights = db['height_ft'].tolist()
sorted_heights = sorted(coaster_heights, reverse=True)
top_four_heights = sorted_heights[:4]

return top_four_heights
",list of (float64),"[nan, nan, nan, nan]","[377.3, 367.5, 318.2, 306.1]"
Name the introduction years of the 6 oldest roller coasters in the dataset.,What are the year introduced values for the 6 roller coasters with the highest number of inversions?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
coaster_data = db.sort_values(by='Inversions', ascending=False).head(6)
year_introduced_values = coaster_data['year_introduced'].tolist()

return year_introduced_values
",list of uint16,"[2013, 2006, 2002, 2019, 1998, 1995]","[1884, 1895, 1901, 1901, 1902, 1902]"
Is there a rental property with exactly 5 bedrooms?,Are there any listings in the Airbnb dataset where the bedrooms attribute is exactly equal to 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
bedrooms_equal_to_five = dataset[dataset[""bedrooms""] == 5]
if len(bedrooms_equal_to_five) > 0:
return True
else:
return False
",bool,True,True
Is there a rental property listed by a superhost that is instantly bookable?,Are there any listings that are listed by a host marked as superhost and also have the instant_bookable attribute set to True?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
superhosts = dataset[dataset[""host_is_superhost""] == ""t""]
instant_bookable_listings = superhosts[superhosts[""instant_bookable""] == ""t""]

if len(instant_bookable_listings) > 0:
return True
else:
return False
",bool,True,True
Are there any rental properties that can accommodate more than 10 guests?,Are there any listings in the Airbnb dataset where the accommodates attribute value is greater than 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
accommodates_greater_than_10 = dataset[dataset[""accommodates""] > 10]
if len(accommodates_greater_than_10) > 0:
return True
else:
return False
",bool,True,True
Is there a rental property that has received a perfect review score?,Is there any rental property in the dataset where the review_scores_rating is equal to the maximum possible rating?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_review_score = dataset[""review_scores_rating""].max()
is_max_review_exists = (dataset[""review_scores_rating""] == max_review_score).any()

return is_max_review_exists
",bool,True,False
How many rental properties are there in the dataset?,What is the total number of listings in the Airbnb dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
total_listings = len(dataset)
return total_listings
",int64,20776,20776
What is the maximum number of bedrooms in a property?,What is the highest value found in the bedrooms column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
highest_bedrooms = dataset[""bedrooms""].max()

return highest_bedrooms
",float64,18.0,18.0
What is the highest price per night for a rental property?,,,,ERROR,95150.0
What is the maximum number of reviews a property has received?,What is the highest value present in the number_of_reviews column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
highest_review_count = dataset[""number_of_reviews""].max()

return highest_review_count
",uint16,870,870
What is the host response time for the property with the highest number of bedrooms?,,,,ERROR,within an hour
What type of room is the most expensive property?,,,,ERROR,Entire home/apt
What is the property type of the listing with the most reviews?,What is the value of the property_type column for the listing that has the highest number_of_reviews?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_reviews_listing = dataset.loc[dataset[""number_of_reviews""] == dataset[""number_of_reviews""].max()]
property_type = max_reviews_listing[""property_type""].iloc[0]

return property_type
",string,Entire rental unit,Entire rental unit
What is the acceptance rate of the host of the property that can accommodate the most number of guests?,,,,ERROR,100.0%
Which are the 2 lowest values of host response rates above 0% ?,,,,ERROR,"['5%', '10%']"
Which are the 2 lowest values of host response rates?,,,,ERROR,"['0%', '0%']"
What are the 4 highest values of host acceptance rates?,,,,ERROR,"['99%', '99%', '99%', '99%']"
What are the 2 least common scraping sources?,What are the two most frequent values in the source column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
source_counts = dataset['source'].value_counts()
most_frequent_sources = list(source_counts.head(2).index)

return most_frequent_sources
",list of string,"['city scrape', 'previous scrape']","['previous scrape', 'city scrape']"
What are the 3 prices of the most expensive properties?,,,,ERROR,"[95150.0, 90130.0, 64430.0]"
What are the 2 prices of the least expensive properties?,,,,ERROR,"[0.0, 0.0]"
What are the 2 numbers of reviews received by the 2 most reviewed properties?,Retrieve the number of reviews for the two Airbnb properties that have received the highest number of reviews.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_two_reviews = dataset.nlargest(2, 'number_of_reviews')[['number_of_reviews']]

return top_two_reviews['number_of_reviews'].tolist()
",list of (uint16),"[870, 822]","[870, 822]"
What are the 5 numbers of guests accommodated by the properties that can accommodate the most guests?,"Retrieve the top 5 values from the accommodates column, representing the number of guests that can be accommodated by properties with the highest accommodation capacity.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_5_accommodates = dataset['accommodates'].nlargest(5).tolist()

return top_5_accommodates
",list of (int64),"[16, 16, 16, 16, 16]","[16, 16, 16, 16, 16]"
Is there a food item with 'Fruits' as its group?,Does any row in the table have a value of 'Fruits' in its ‘GROUP’ column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
group_values = dataset['GROUP'].unique()
has_fruits = 'Fruits' in group_values

return has_fruits
",bool,True,True
Are there food items with 'Nuts' as their sub group?,Do any food items have a sub group of 'Nuts'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
nuts_count = dataset[dataset[""SUB GROUP""] == ""Nuts""].shape[0]
has_nuts = nuts_count > 0

return has_nuts
",bool,True,True
Is there a food item with scientific name 'Tilia argentea'?,,,,ERROR,True
Is 'Angelica' listed as a food name in the dataset?,Does the 'FOOD NAME' column contain the value 'Angelica'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
food_name_column = dataset['FOOD NAME']
contains_angelica = 'Angelica' in food_name_column.values

return contains_angelica
",bool,True,True
How many food items are there in the dataset?,What is the total number of unique food items listed in the FOOD NAME column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
unique_food_items = db['FOOD NAME'].nunique()

return unique_food_items
",int64,906,906
How many unique food groups are there in the dataset?,What is the count of distinct values present in the ‘GROUP’ column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_group_count = db['GROUP'].nunique()

return distinct_group_count
",int64,24,24
How many unique sub groups are there in the dataset?,What is the count of distinct values in the SUB GROUP column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_subgroups = db['SUB GROUP'].nunique()
return distinct_subgroups
",int64,123,123
How many unique food items are there in the dataset?,What is the number of distinct values present in the FOOD NAME column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
distinct_food_names = dataset['FOOD NAME'].nunique()

return distinct_food_names
",int64,906,906
What is the group of the food named 'Kiwi'?,What is the value of the 'GROUP' column for the row where the 'FOOD NAME' column equals 'Kiwi'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
kiwi_row = dataset[dataset['FOOD NAME'] == 'Kiwi']
group_value = kiwi_row['GROUP'].iloc[0]

return group_value
",string,Fruits,Fruits
What is the sub group of the food with scientific name 'Tilia argentea'?,Retrieve the value of the SUB GROUP column for the row where the SCIENTIFIC NAME column equals 'Tilia argentea'.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
scientific_name = ""Tilia argentea""
row = db[db['SCIENTIFIC NAME'] == scientific_name]
sub_group = row['SUB GROUP'].iloc[0]

return sub_group
",string,Herbs,Herbs
What is the scientific name of the food named 'Colorado pinyon'?,,,,ERROR,Pinus edulis
What is the food name of the item with scientific name 'Tilia argentea'?,,,,ERROR,Silver linden
What are the top 3 most common food groups?,Can you return the three most frequent values present in the GROUP column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
group_counts = db['GROUP'].value_counts()
top_three_groups = group_counts.head(3).index.tolist()

return top_three_groups
",list of string,"['Aquatic foods', 'Vegetables', 'Fruits']","['Aquatic foods', 'Vegetables', 'Fruits']"
What are the top 2 most common groups? If there are two that have the same number of appearances give preference alphabetically.,,,,ERROR,"['Aquatic foods', 'Fruits']"
What are the 5 least common food groups?,Could you provide a sorted list of the five food groups that appear least frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
group_counts = dataset['GROUP'].value_counts()
least_frequent_groups = group_counts.nsmallest(5).index.tolist()

return least_frequent_groups
",list of string,"['Eggs', 'Baby foods', 'Unclassified', 'Herbs and spices', 'Teas']","['Teas', 'Eggs', 'Baby foods', 'Unclassified', 'Herbs and spices']"
What are the 5 most common sub groups?,Can you return a list containing the top 5 most frequent values in the SUB GROUP column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
sub_group_counts = db['SUB GROUP'].value_counts()
top_5_sub_groups = sub_group_counts.head(5).index.tolist()

return top_5_sub_groups
",list of (string),"['Fishes', 'Herbs', 'Berries', 'Tropical fruits', 'Nuts']","['Fishes', 'Herbs', 'Berries', 'Tropical fruits', 'Nuts']"
What are the lengths of the top 5 most common sub group names?,"Retrieve the 'SUB GROUP' names that appear most frequently in the dataset, identify the top 5 such groups, and then determine the length of each of these top 5 sub group names.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
subgroup_counts = dataset['SUB GROUP'].value_counts()
top_5_subgroups = subgroup_counts.nlargest(5).index.tolist()
lengths = [len(sg) for sg in top_5_subgroups]

return lengths
",list of (int64),"[6, 5, 7, 15, 4]","[6, 5, 7, 15, 4]"
What are the number of appearances of the 2 least common groups?,How many times do the two most frequent values in the 'GROUP' column appear in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
group_counts = db['GROUP'].value_counts()
top_two_groups = group_counts.nlargest(2)
total_count = top_two_groups.sum()

return int(total_count)
",int64,296,"[1, 1]"
What are the number of appearances of the 3 most common groups?,,,,ERROR,"[166, 130, 130]"
What are the three most common group name lengths?,,,,ERROR,"[6.0, 13.0, 10.0]"
Is there a customer with 'Large Business' as their occupation?,Does any record in the table have an Occupation value equal to 'Large Business'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
occupation_large_business = dataset[dataset[""Occupation""] == ""Large Business""]
if len(occupation_large_business) > 0:
return True
else:
return False
",bool,True,True
Are there customers with 'King' as their pitched product?,Do any records exist where the ProductPitched column contains the value 'King'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
king_exists = (dataset[""ProductPitched""] == ""King"").any()

return king_exists
",bool,True,True
Is there a customer with designation 'VP'?,Does any record in the table have a Designation value equal to 'VP'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
vp_designation = dataset[dataset[""Designation""] == ""VP""]
has_vp = len(vp_designation) > 0

return has_vp
",bool,True,True
Is 'Unmarried' listed as a marital status in the dataset?,Does the MaritalStatus column contain the value 'Unmarried'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
marital_status_contains_unmarried = 'Unmarried' in dataset['MaritalStatus'].unique()

return marital_status_contains_unmarried
",bool,True,True
How many customers are there in the dataset?,What is the total count of unique CustomerIDs present in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
unique_customer_ids = db['CustomerID'].nunique()

return unique_customer_ids
",int64,4888,4888
How many unique occupations are there in the dataset?,What is the count of distinct values present in the Occupation column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
distinct_occupations = dataset['Occupation'].nunique()

return distinct_occupations
",int64,4,4
How many unique designations are there in the dataset?,,,,ERROR,5
How many unique marital statuses are there in the dataset?,What is the count of distinct values present in the MaritalStatus column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
distinct_marital_status = dataset['MaritalStatus'].nunique()

return distinct_marital_status
",int64,4,4
What is the occupation of the customer with ID 200000?,Can you retrieve the Occupation value for the customer whose CustomerID is 200000?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
customer_id = 200000
occupation = db[db[""CustomerID""] == customer_id][""Occupation""].iloc[0]

return occupation
",string,Salaried,Salaried
What is the product pitched to the customer with ID 200001?,What is the value in the ProductPitched column for the row where CustomerID equals 200001?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
customer_id = 200001
row = dataset[dataset[""CustomerID""] == customer_id]
product_pitched = row[""ProductPitched""].iloc[0]

return product_pitched
",string,Deluxe,Deluxe
What is the designation of the customer with ID 200002?,Can you retrieve the designation of the customer whose CustomerID is 200002?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
customer_id = 200002
designation = dataset[dataset[""CustomerID""] == customer_id][""Designation""].iloc[0]

return designation
",category,Executive,Executive
What is the marital status of the customer with ID 200003?,Can you retrieve the marital status for the customer whose CustomerID is 200003?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
customer_id = 200003
marital_status = db[db[""CustomerID""] == customer_id][""MaritalStatus""].iloc[0]

return marital_status
",string,Divorced,Divorced
What are the 3 most common occupations?,List the top 3 most frequent values present in the Occupation column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
occupation_counts = db['Occupation'].value_counts()
top_3_occupations = occupation_counts.head(3).index.tolist()

return top_3_occupations
",list of string,"['Salaried', 'Small Business', 'Large Business']","['Salaried', 'Small Business', 'Large Business']"
What are the top 2 most common pitched products?,Can you return a list containing the two most frequent values present in the ProductPitched column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
product_pitched_counts = dataset['ProductPitched'].value_counts()
most_frequent_values = product_pitched_counts.head(2).index.tolist()

return most_frequent_values
",list of string,"['Basic', 'Deluxe']","['Basic', 'Deluxe']"
What are the 4 least common occupations?,Retrieve the four most frequent occupation values from the Occupation column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
occupation_counts = db['Occupation'].value_counts()
most_frequent_occupations = occupation_counts.head(4).index.tolist()

return most_frequent_occupations
",list of string,"['Salaried', 'Small Business', 'Large Business', 'Free Lancer']","['Salaried', 'Small Business', 'Large Business', 'Free Lancer']"
What are the 2 least common pitched products?,Identify the two product categories listed in the ProductPitched column that occur least frequently in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
product_counts = dataset['ProductPitched'].value_counts()
least_frequent_products = product_counts.nsmallest(2).index.tolist()

return least_frequent_products
",list of string,"['King', 'Super Deluxe']","['Super Deluxe', 'King']"
What are the ages of the 3 oldest customers?,Retrieve the Age values corresponding to the three customers with the highest Age.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_three_customers = dataset.nlargest(3, 'Age')
ages = top_three_customers['Age'].tolist()

return ages
",list of float64,"[61.0, 61.0, 61.0]","[61, 61, 61]"
What are the ages of the 4 youngest customers?,Retrieve the Age values corresponding to the four customers with the smallest Age.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
smallest_age_customers = db.nlargest(4, 'Age')
ages = smallest_age_customers['Age'].tolist()

return ages
",list of float64,"[61.0, 61.0, 61.0, 61.0]","[18.0, 18.0, 18.0, 18.0]"
What are the top 2 highest monthly incomes of the customers?,Retrieve the two largest values from the MonthlyIncome column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
largest_incomes = dataset['MonthlyIncome'].nlargest(2).tolist()

return largest_incomes
",list of float64,"[98678.0, 95000.0]","[98678, 95000]"
What are the 4 most common duration of pitch?,Return the four most frequent values present in the DurationOfPitch column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
duration_of_pitch_values = db[""DurationOfPitch""].value_counts().nlargest(4).index.tolist()

return duration_of_pitch_values
",list of (float64),"[9.0, 7.0, 8.0, 6.0]","[9.0, 7.0, 8.0, 6.0]"
Is there any entry posted on a weekend?,Are there any entries in the dataset where the weekday name is Saturday or Sunday?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
weekend_entries = dataset[dataset['weekday_name'].isin(['Saturday', 'Sunday'])]
has_weekend_entry = not weekend_entries.empty

return has_weekend_entry
",bool,True,True
Are there titles with more than 100 characters?,Is there any entry in the dataset where the length of the title exceeds 100 characters?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
title_lengths = dataset[""title_gx_text_length""]
exceeds_100 = (title_lengths > 100).any()

return exceeds_100
",bool,False,False
Do any entries have a negative sentiment according to the Cardiff NLP model?,Are there any rows where the title_gx_cardiff_nlp_sentiment column has a value indicating negative sentiment?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
negative_sentiment = dataset[dataset[""title_gx_cardiff_nlp_sentiment""] == ""Negative""]
if len(negative_sentiment) > 0:
return True
else:
return False
",bool,False,False
"Is the term 'linux' mentioned in the ""Clusters II"" column?","Does the ""Clusters II"" column contain the word 'linux'?","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
clusters_ii_column = db[""Clusters II""]
contains_linux = clusters_ii_column.astype(str).str.contains('linux').any()

return contains_linux
",bool,True,True
How many entries were posted in the morning?,"What is the count of entries where the partofday attribute equals ""morning""?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
count = dataset[dataset[""partofday""] == ""morning""].shape[0]

return count
",int64,1516,1516
What's the highest score received by an entry?,What is the maximum value in the score column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_score = db[""score""].max()

return max_score
",uint16,6015,6015
"On average, how many descendants does an entry have?",What is the mean value of the descendants column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
mean_descendants = dataset[""descendants""].mean()

return mean_descendants
",float64,339.2486210000000,339.2486210000000
How many entries are in the Autumn season?,"What is the count of records where the season column has a value of ""Autumn""?","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
autumn_count = db[db[""season""] == ""Autumn""].shape[0]

return autumn_count
",int64,2301,2301
Which day of the week has the most entries?,What is the most frequent value in the weekday_name column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
weekday_counts = dataset['weekday_name'].value_counts()
most_frequent_weekday = weekday_counts.idxmax()

return most_frequent_weekday
",string,Tuesday,Tuesday
What is the predominant language used in titles?,Which language appears most frequently in the title_gx_lang column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
language_counts = dataset['title_gx_lang'].value_counts()
most_frequent_language = language_counts.idxmax()

return most_frequent_language
",string,en,en
In which season was the entry with the highest score posted?,What is the value of the season column corresponding to the row with the maximum score?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_score_row = dataset.loc[dataset[""score""] == dataset[""score""].max()]
season_value = max_score_row[""season""].iloc[0]

return season_value
",category,Spring,Spring
On which part of the day are most entries posted?,What is the most frequent value in the partofday column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
most_frequent_partofday = dataset['partofday'].mode()[0]

return most_frequent_partofday
",category,afternoon,afternoon
"List the top 4 most frequent terms in the ""Clusters II"" column.",What are the four most common values present in the Clusters II column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
most_common_clusters = dataset['Clusters II'].value_counts().nlargest(4).index.tolist()

return most_common_clusters
",list of string,"['year, work, new', 'google, web, firefox, open', 'apple, linux, rust, iphone', 'facebook, twitter, die, account']","['year, work, new', 'google, web, firefox, open', 'apple, linux, rust, iphone', 'facebook, twitter, die, account']"
Name the 2 month names which appear less in the dataset.,Identify the two month names that occur with minimum frequency in the month_name column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
month_counts = dataset['month_name'].value_counts()
min_frequency = month_counts.min()
least_frequent_months = list(month_counts[month_counts == min_frequency].index)

return least_frequent_months
",list of string,['July'],"['December', 'July']"
Identify the top 3 weekdays based on entry frequency.,What are the three most frequent values present in the weekday_name column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
weekday_counts = dataset['weekday_name'].value_counts()
top_three_weekdays = weekday_counts.nlargest(3).index.tolist()

return top_three_weekdays
",list of string,"['Tuesday', 'Wednesday', 'Thursday']","['Tuesday', 'Wednesday', 'Thursday']"
Provide the bottom 4 seasons in terms of entry count.,What are the four season categories with the smallest number of occurrences in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
season_counts = dataset['season'].value_counts()
sorted_seasons = season_counts.sort_values()
four_smallest_seasons = sorted_seasons.head(4).index.tolist()

return four_smallest_seasons
",list of (category),"['Summer', 'Autumn', 'Winter', 'Spring']","['Spring', 'Winter', 'Autumn', 'Summer']"
List the top 3 scores in the dataset.,Retrieve the three highest values from the score column in descending order.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
highest_scores = dataset.nlargest(3, 'score')['score'].tolist()

return highest_scores
",list of (uint16),"[6015, 5771, 4338]","[6015, 5771, 4338]"
Name the bottom 5 title text lengths.,Retrieve the 5 smallest values from the title_gx_text_length column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
smallest_values = dataset['title_gx_text_length'].nsmallest(5).tolist()

return smallest_values
",list of (float64),"[1.0, 2.0, 2.0, 2.0, 2.0]","[1.0, 2.0, 2.0, 2.0, 2.0]"
Identify the top 4 numbers of descendants.,Retrieve the four highest values from the descendants column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
highest_descendants = db.nlargest(4, 'descendants')['descendants'].tolist()

return highest_descendants
",list of (float64),"[4576.0, 3678.0, 3676.0, 3463.0]","[4576.0, 3678.0, 3676.0, 3463.0]"
Provide the bottom 6 scores in the dataset.,What are the 6 smallest values in the score column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
smallest_scores = sorted(db['score'].tolist())[:6]

return smallest_scores
",list of (uint16),"[501, 501, 501, 501, 501, 501]","[501, 501, 501, 501, 501, 501]"
Are there any employees with more than 7 projects?,Is there any record where the Number of Projects is greater than 7?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
projects_greater_than_7 = db[db[""Number of Projects""] > 7]
exists = len(projects_greater_than_7) > 0

return exists
",bool,False,False
Has any employee worked for more than 300 hours on average per month?,Is there an employee whose average monthly hours exceeds 300?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
hours_exceeds_300 = dataset[dataset[""Average Monthly Hours""] > 300]
if len(hours_exceeds_300) > 0:
return True
else:
return False
",bool,True,True
Are all satisfaction levels above 0.5?,What proportion of employees have a satisfaction level greater than 0.5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
satisfied_employees = dataset[dataset['Satisfaction Level'] > 0.5]
proportion = len(satisfied_employees) / len(dataset)

return proportion > 0.5
",bool,True,False
Were there any employees hired in 2019?,Is there a record in the dataset where the Date Hired falls within the year 2019?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
date_in_2019 = dataset['Date Hired'].dt.year == 2019
has_record_in_2019 = date_in_2019.any()

return has_record_in_2019
",bool,True,True
How many unique departments are there?,What is the count of distinct values present in the Department column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
distinct_departments = dataset[""Department""].nunique()

return distinct_departments
",int64,10,10
What's the maximum number of years an employee has been in the company?,What is the highest value found in the Years in the Company column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
highest_years = db[""Years in the Company""].max()
return highest_years
",uint8,10,10
How many employees have been promoted in the last 5 years?,,,,ERROR,319
"On average, how many hours do employees work monthly?",What is the mean value of the Average Monthly Hours column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
mean_hours = dataset[""Average Monthly Hours""].mean()

return mean_hours
",float64,201.0503370000000,201.05
Which department has the highest number of employees?,What is the value of the Department column that corresponds to the maximum Number of Projects across all rows in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_projects = db.loc[db[""Number of Projects""] == db[""Number of Projects""].max(), ""Department""].iloc[0]

return max_projects
",string,RandD,sales
What's the most common salary level among employees?,Which salary category appears most frequently within the staff dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
salary_counts = db['salary'].value_counts()
most_frequent_salary = salary_counts.idxmax()

return most_frequent_salary
",string,low,low
Which year had the highest number of employees hired?,What is the year with the maximum count of entries in the Date Hired column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
years = db['Date Hired'].dt.year
year_counts = years.value_counts()
max_year = year_counts.idxmax()

return max_year
",int64,2017,2017
Which salary level has the least number of employees who had an accident at work?,What salary category has the smallest count of employees who experienced a work accident?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
work_accident_counts = db.groupby('salary')['Work Accident'].count().reset_index()
work_accident_counts = work_accident_counts.rename(columns={'Work Accident': 'Count'})

min_count = work_accident_counts['Count'].min()
salary_with_min_count = work_accident_counts[work_accident_counts['Count'] == min_count]['salary'].iloc[0]

return salary_with_min_count
",int64,high,high
Name the top 4 departments with the most employees.,What are the names of the four departments that have the highest number of employees in the Staff dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
department_counts = dataset['Department'].value_counts()
top_four_departments = department_counts.nlargest(4).index.tolist()

return top_four_departments
",list of string,"['sales', 'technical', 'support', 'IT']","['sales', 'technical', 'support', 'IT']"
List the 3 departments with the most number of promotions in the last 5 years that have at least one promotion. ,,,,ERROR,"['hr', 'accounting', 'IT']"
Identify the 3 departments with the lowest average satisfaction levels.,What are the names of the top three departments when sorted by their mean satisfaction level in ascending order?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
department_satisfaction = dataset.groupby('Department')['Satisfaction Level'].mean().sort_values()
top_three_departments = department_satisfaction.index[:3].tolist()

return top_three_departments
",list of string,"['accounting', 'hr', 'technical']","['accounting', 'hr', 'technical']"
What are the 2 departments with the lowest average monthly hours worked?,Can you identify the two departments that have the smallest average value for Average Monthly Hours?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
department_hours = dataset.groupby('Department')['Average Monthly Hours'].mean().sort_values()
two_smallest_departments = department_hours.head(2).index.tolist()

return two_smallest_departments
",list of (string),"['hr', 'marketing']","['hr', 'marketing']"
Identify the top 3 years with the highest employee hiring.,What are the three most frequent years present in the Date Hired column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
years = dataset['Date Hired'].dt.year
year_counts = years.value_counts()
most_frequent_years = year_counts.nlargest(3).index.tolist()

return most_frequent_years
",list of (int64),"[2017, 2018, 2016]","['2017', '2018', '2016']"
Which are the highest 3 satisfaction levels among employees who left?,Retrieve the top three highest values for Satisfaction Level from employees whose Left attribute is not equal to ‘No’.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_employees = dataset[dataset['Left'] != 'No']
top_three_satisfaction = filtered_employees['Satisfaction Level'].nlargest(3).tolist()

return top_three_satisfaction
",list of (float64),"[0.92, 0.92, 0.92]","[0.92, 0.92, 0.92]"
List the bottom 5 average monthly hours among employees who were promoted in the last 5 years.,,,,ERROR,"[215, 133, 159, 241, 247]"
Whhat are the top 6 last evaluation scores?,Retrieve the six highest values from the Last Evaluation column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
highest_evaluations = db.sort_values(by='Last Evaluation', ascending=False)['Last Evaluation'].head(6).tolist()

return highest_evaluations
",list of (float64),"[1.0, 1.0, 1.0, 1.0, 1.0, 1.0]","[1, 1, 1, 1, 1, 1]"
Did any incident result in the total destruction of the aircraft?,Were there any incidents where the Aircaft_Damage_Type indicates total destruction of the aircraft?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
total_destruction_incidents = dataset[dataset[""Aircaft_Damage_Type""] == ""Total Destruction""]
if len(total_destruction_incidents) > 0:
return True
else:
return False
",bool,False,True
Have there been any incidents where the cause was related to the undercarriage of the aircraft?,Does the dataset contain any records where the Incident_Cause(es) column includes a value related to the aircraft's undercarriage?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
undercarriage_causes = ['Undercarriage', 'Landing Gear']
for cause in undercarriage_causes:
if dataset['Incident_Cause(es)'].astype(str).str.contains(cause).any():
return True

return False
",bool,True,True
Has there been any instance where the ground casualties were non-zero?,Is there any record where the value in the Ground_Casualties column is not equal to zero?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
ground_casualties_not_zero = (dataset['Ground_Casualties'] != '0').any()

return ground_casualties_not_zero
",bool,True,True
Are there incidents where the aircraft was involved in a collision?,Is there any record in the dataset where the Aircaft_Damage_Type column indicates a collision?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
collision_records = dataset[dataset[""Aircaft_Damage_Type""] == ""Collision""]
if len(collision_records) > 0:
return True
else:
return False
",bool,False,True
How many unique aircraft models are in the dataset?,What is the count of distinct values present in the Aircaft_Model column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
distinct_models = dataset['Aircaft_Model'].nunique()

return distinct_models
",int64,3523,3523
What's the highest number of occupants recorded in an incident?,,,,ERROR,524.0
How many incidents occurred in January 2022?,What is the count of incidents where the Date falls within January 2022?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
import pandas as pd
january_2022_incidents = dataset[(dataset['Date'].dt.year == 2022) & (dataset['Date'].dt.month == 1)]
count = len(january_2022_incidents)

return count
",int64,7,7
How many incidents resulted in non-zero fatalities?,What is the count of incidents where the number of fatalities is greater than zero?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
fatality_count = len(dataset[dataset['Fatalities'] > 0])

return fatality_count
",int64,9231,0
Which aircraft model was involved in the most incidents?,What is the most frequent value in the Aircaft_Model column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
most_frequent_model = dataset['Aircaft_Model'].mode()[0]

return most_frequent_model
",string,Junkers Ju-52/3m,Junkers Ju-52/3m
What was the cause of the incident that resulted in the most fatalities?,Which value appears most frequently in the Incident_Cause(es) column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
cause_counts = dataset['Incident_Cause(es)'].value_counts()
most_frequent_cause = cause_counts.idxmax()

return most_frequent_cause
",category,Info-Unavailable,"Airplane - Pressurization, Airplane - Pressurization - Bulkhead failure, Airplane - Pressurization - Explosive decompression, Maintenance - (repair of) previous damage, Result - Loss of control"
What is the most common phase of aircraft during incidents?,Which aircraft phase appears most frequently in the dataset of incidents?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
phase_counts = dataset['Aircraft_Phase'].value_counts()
most_frequent_phase = phase_counts.idxmax()

return most_frequent_phase
",string,En route (ENR),En route (ENR)
What is the location of the incident with the highest number of onboard occupants?,,,,ERROR,near Ueno Village...
What are the top 3 most common causes of incidents?,Can you list the three most frequent values present in the Incident_Cause(es) column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
cause_counts = dataset['Incident_Cause(es)'].value_counts()
most_frequent_causes = cause_counts.head(3).index.tolist()

return most_frequent_causes
",category,"['Info-Unavailable', 'Result - Runway excursion', 'Result - Damaged on the ground']","['Info-Unavailable', 'Result - Runway excursion', 'Result - Damaged on the ground']"
List the top 5 locations where the most incidents have occurred. If there are two or more with the same number order them alphabetically,"What are the top 5 incident locations, sorted alphabetically when there is a tie in the number of incidents?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
incident_locations = dataset['Incident_Location'].value_counts().nlargest(5).index.tolist()
incident_locations.sort()

return incident_locations
",list of (string),"['Beirut Inter...', 'Havana-José ...', 'Miami Intern...', 'Rio de Janei...', 'unknown']","['Arnhem', 'Beirut International Airport (BEY)', 'Glasgow-Preswick Airport', 'Havana-José Martí International Airport (HAV)', 'Miami International Airport, FL (MIA)']"
Name the 2 most frequently occurring aircraft operators in the dataset.,What are the names of the two most common values found in the Aircaft_Operator column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
operator_counts = dataset['Aircaft_Operator'].value_counts()
most_common_operators = operator_counts.nlargest(2).index.tolist()

return most_common_operators
",list of string,"['USAAF', 'USAF']","['USAAF', 'USAF']"
What are the top 2 most common types of aircraft damage?,What are the two most frequent values present in the Aircaft_Damage_Type column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
damage_types = dataset['Aircaft_Damage_Type'].value_counts().nlargest(2).index.tolist()

return damage_types
",category,"['Damaged beyond repair', 'Substantial']","['Damaged beyond repair', 'Substantial']"
What are the 5 highest numbers of onboard passengers in incidents?,,,,ERROR,"[509.0, 503.0, 497.0, 451.0, 440.0]"
List the 3 highest numbers of onboard crew in incidents.,,,,ERROR,"[32.0, 31.0, 29.0]"
Identify the 4 highest numbers of total onboard occupants in incidents.,,,,ERROR,"[524.0, 521.0, 517.0, 469.0]"
What are the 6 highest numbers of ground casualties in incidents?,,,,ERROR,"[1600, 900, 237, 107, 88, 87]"
"Are there any properties with a price over 1,000,000?",,,,ERROR,True
Any property with more than 10 bedrooms?,Are there any properties in the dataset where the number of bedrooms exceeds 10?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
properties_with_bedrooms_gt_10 = db[db[""Habitaciones""] > 10]
result = len(properties_with_bedrooms_gt_10) > 0

return result
",bool,True,True
Are there properties with zero bathrooms?,How many properties in the dataset have a value of zero for the Baños column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
banos_zero_count = (db[db['Baños'] == 0].shape[0])

if banos_zero_count > 0:
return True
else:
return False
",bool,False,False
Has any property been listed for more than 100 days?,Are there any listings in the dataset where the value of the Duración column is greater than 100?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
duracion_greater_than_100 = db[db[""Duración""] > 100]
result = len(duracion_greater_than_100) > 0

return result
",bool,True,True
What's the highest price in the dataset?,What is the maximum value present in the Precio column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_precio = db[""Precio""].max()

return max_precio
",uint32,17000000,17000000.0
What's the total number of properties listed?,What is the sum of all values in the Precio column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
total_precio = db[""Precio""].sum()

return total_precio
",int64,11424716112,26026
What's the longest duration a property has been listed?,What is the maximum value present in the Duración column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_duration = db[""Duración""].max()

return max_duration
",uint16,2535,2535.0
What's the largest surface listed?,What is the maximum value present in the Superficie column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_superficie = db[""Superficie""].max()

return max_superficie
",uint32,5504,5504.0
What's the most common type of property listed?,What is the most frequent value in the Tipo column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
most_frequent_type = db['Tipo'].mode()[0]

return most_frequent_type
",category,Piso,Piso
Which advertiser has listed the most properties?,What is the value in the Anunciante column that appears most frequently in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
anunciante_counts = db['Anunciante'].value_counts()
most_frequent_anunciante = anunciante_counts.index[0]

return most_frequent_anunciante
",category,housell,housell
Which property has the highest price?,What is the value in the Referencia column corresponding to the maximum price?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_price_row = db.loc[db[""Precio""] == db[""Precio""].max()]
referencia_value = max_price_row[""Referencia""].iloc[0]

return referencia_value
",category,GM31-121816,GM31-121816
Which property has the largest surface area?,,,,ERROR,IF5563-FINCA VALLE LOZOYA
What are the five types of properties more frequently listed?,Return the top five most frequent values from the Tipo column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_five_tipos = db['Tipo'].value_counts().nlargest(5).index.tolist()

return top_five_tipos
",list of string,"['Piso', 'Chalet', 'Apartamento', 'Chalet adosado', 'Chalet unifamiliar']","['Piso', 'Chalet', 'Apartamento', 'Chalet adosado', 'Chalet unifamiliar']"
What are the 2 types of properties which are listed more frequently?,Identify the two most frequent values present in the Tipo column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
tipo_counts = db['Tipo'].value_counts()
most_frequent_types = ['\'{}\''.format(str(type)) for type in tipo_counts.head(2).index]

return most_frequent_types
",list of (category),"[""'Piso'"", ""'Chalet'""]","['Piso', 'Chalet']"
What are the 2 most common localities for properties listed?,Return a list containing the two most frequently occurring values in the Localidad column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
localidad_counts = db['Localidad'].value_counts()
most_common_localidades = localidad_counts.head(2).index.tolist()

return most_common_localidades
",list of (string),"['Madrid Capital', 'Torrejón de Ardoz']","['Madrid Capital', 'Torrejón de Ardoz']"
What are the 2 most common districts for properties listed?,Retrieve the two most frequently occurring values in the Distrito column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distrito_counts = db['Distrito'].value_counts()
most_frequent_distritos = distrito_counts.head(2).index.tolist()

return most_frequent_distritos
",list of (string),"['Centro', 'Salamanca']","['Centro', 'Salamanca']"
What are the 5 highest property prices listed?,Retrieve the top 5 highest values from the Precio column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_5_precios = db.nlargest(5, 'Precio')['Precio'].tolist()

return top_5_precios
",list of uint32,"[17000000, 13600000, 13250000, 13000000, 12000000]","[17000000.0, 13600000.0, 13250000.0, 13000000.0, 12000000.0]"
List the 3 longest durations properties have been listed.,Retrieve the top 3 highest values from the Duración column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
duracion_values = db[""Duración""].tolist()
top_3_duracion = sorted(duracion_values, reverse=True)[:3]

return top_3_duracion
",list of uint16,"[2535, 2534, 2285]","[2535.0, 2534.0, 2285.0]"
Identify the 4 largest surfaces listed.,Return the top 4 largest values from the Superficie column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_4_superficies = db.nlargest(4, 'Superficie')['Superficie'].tolist()

return top_4_superficies
",list of uint16,"[5504, 3957, 2974, 2927]","[5504.0, 3957.0, 2974.0, 2927.0]"
What are the 6 highest numbers of bedrooms in properties listed?,Retrieve a list containing the 6 largest values present in the Habitaciones column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
habitations = db[""Habitaciones""].tolist()
habitations.sort(reverse=True)
largest_6_habitations = habitations[:6]

return largest_6_habitations
",list of (uint8),"[20, 20, 20, 20, 20, 20]","[20, 20, 20, 20, 20, 20]"
Are there more than 2000 customers with a monthly charge higher than $80?,,,,ERROR,True
Do all customers have phone service?,Is every customer's PhoneService attribute equal to Yes?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
phone_service_yes = dataset[""PhoneService""] == ""Yes""
all_yes = phone_service_yes.all()

return all_yes
",bool,False,True
Are there any customers with no internet service?,"Do any customers have a value of ""No"" in the InternetService column?","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
internet_service_no = db[db[""InternetService""] == ""No""]
if len(internet_service_no) > 0:
return True
else:
return False
",bool,True,True
Are there any customers who are senior citizens and have dependents?,Do any customers have both SeniorCitizen attribute set to True and Dependents attribute not equal to No?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
senior_and_dependents = (dataset['SeniorCitizen'] == 1) & (dataset['Dependents'] != 'No')
any_customer = any(senior_and_dependents)

return any_customer
",bool,True,True
How many unique customers are there in the dataset?,What is the count of distinct values present in the customerID column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_customer_ids = db['customerID'].nunique()

return distinct_customer_ids
",int64,7043,7043
What's the highest monthly charge?,What is the maximum value in the MonthlyCharges column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_monthly_charges = db[""MonthlyCharges""].max()

return max_monthly_charges
",float64,118.75,118.75
What's the total number of customers?,How many unique customer IDs are present in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
unique_customer_ids = db['customerID'].nunique()

return unique_customer_ids
",int64,7043,7043
What's the longest tenure?,What is the maximum value in the tenure column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_tenure = db[""tenure""].max()

return max_tenure
",int64,72,72
What's the most common payment method?,Which value appears most frequently in the PaymentMethod column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
payment_method_counts = db['PaymentMethod'].value_counts()
most_frequent_payment_method = payment_method_counts.idxmax()

return most_frequent_payment_method
",string,Electronic check,Electronic check
What's the most common contract type?,Which contract type appears most frequently in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
contract_counts = db['Contract'].value_counts()
most_frequent_contract = contract_counts.idxmax()

return most_frequent_contract
",string,Month-to-month,Month-to-month
Which customer has the highest total charge?,What is the maximum value in the TotalCharges column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
answer = db[""TotalCharges""].max()

return answer
",float64,8684.8,30-11-2888
Which customer has the highest monthly charge?,What is the customerID of the customer with the maximum MonthlyCharges?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_charges_customer = db.loc[db[""MonthlyCharges""] == db[""MonthlyCharges""].max(), ""customerID""].iloc[0]

return max_charges_customer
",string,30-11-7568,30-11-7568
What are the top 3 most common internet services?,Can you list the three most frequent values present in the InternetService column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
internet_service_counts = db['InternetService'].value_counts()
top_3_services = internet_service_counts.nlargest(3).index.tolist()

return top_3_services[0]
",string,Fiber optic,"['Fiber optic', 'DSL', 'No']"
Name the 4 most common payment methods.,What are the four most frequent values present in the PaymentMethod column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
payment_method_counts = dataset['PaymentMethod'].value_counts()
most_frequent_methods = payment_method_counts.head(4).index.tolist()

return most_frequent_methods
",string,"['Electronic check', 'Mailed check', 'Bank transfer (automatic)', 'Credit card (automatic)']","['Electronic check', 'Mailed check', 'Bank transfer (automatic)', 'Credit card (automatic)']"
What are the 2 most common types of contract?,Identify the two contract types that appear most frequently in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
contract_counts = db['Contract'].value_counts()
top_two_contracts = contract_counts.head(2).index.tolist()

return top_two_contracts
",string,"['Month-to-month', 'Two year']","['Month-to-month', 'Two year']"
What are the 2 most common services for which customers have multiple lines?,Identify the two most frequently occurring service types listed in the MultipleLines column of the Telco customer dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
multiple_lines_counts = db['MultipleLines'].value_counts()
most_common_services = multiple_lines_counts.nlargest(2).index.tolist()

return most_common_services[0]
",string,No,"['No', 'Yes']"
What are the 5 highest total charges?,Retrieve the top 5 largest values from the TotalCharges column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_5_charges = db['TotalCharges'].nlargest(5).tolist()

return top_5_charges
",list of float64,"[8684.8, 8672.45, 8670.1, 8594.4, 8564.75]","[8684.8, 8672.45, 8670.1, 8594.4, 8564.75]"
What are the 4 highest monthly charges?,Retrieve the four largest values from the MonthlyCharges column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
largest_charges = db['MonthlyCharges'].nlargest(4).tolist()

return largest_charges
",list of float64,"[118.75, 118.65, 118.6, 118.6]","[118.75, 118.65, 118.6, 118.6]"
What are the 6 longest tenures?,Retrieve the tenure values corresponding to the 6 highest tenure entries in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
highest_tenure = db.nlargest(6, 'tenure')
tenure_values = highest_tenure['tenure'].tolist()

return tenure_values
",list of (uint8),"[72, 72, 72, 72, 72, 72]","[72, 72, 72, 72, 72, 72]"
What are the 3 shortest tenures?,Retrieve the tenure values corresponding to the 3 smallest tenure entries in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
tenure_values = db[""tenure""].nlargest(3).tolist()

return tenure_values
",list of (uint8),"[72, 72, 72]","[0, 0, 0]"
Is there a listing with a review score rating of 100?,Does any listing in the dataset have a review_scores_rating equal to 100?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
any_listing_with_max_review_score = (db[""review_scores_rating""] == 100).any()

return any_listing_with_max_review_score
",bool,True,True
Are there any hosts who have listed more than 10 properties?,Is there any host whose host_total_listings_count is greater than 10?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
hosts_with_high_listing_count = db[db[""host_total_listings_count""] > 10]
if len(hosts_with_high_listing_count) > 0:
return True
else:
return False
",bool,True,True
Are all listings instantly bookable?,Is the instant_bookable column value True for all listings?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
all_instant_bookable = db[""instant_bookable""] == 't'
is_true_for_all = all_instant_bookable.all()

return is_true_for_all
",bool,False,False
Is there a listing that requires a minimum of 365 nights?,Does any listing in the dataset have a minimum_nights value equal to 365?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
min_nights_365 = db[db[""minimum_nights""] == 365]
if len(min_nights_365) > 0:
return True
else:
return False
",bool,True,True
How many unique hosts are there in the dataset?,What is the count of distinct values present in the host_id column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_host_ids = db['host_id'].nunique()

return distinct_host_ids
",int64,26765,26765
What is the highest number of listings a single host has?,What is the maximum value found in the host_total_listings_count column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_listings = db[""host_total_listings_count""].max()

return max_listings
",float64,2739.0,2739.0
How many unique locations are listed by the hosts?,What is the count of distinct values present in the host_location column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_host_locations = db[""host_location""].nunique()

return distinct_host_locations
",int64,1316,1316
What is the average review score rating across all listings?,Calculate the mean of the review_scores_rating column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
mean_review_score = db[""review_scores_rating""].mean()

return mean_review_score
",float64,93.76718800000000,93.767188
What is the most common host location?,Which host location value appears most frequently in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
host_location_counts = db['host_location'].value_counts()
most_frequent_host_location = host_location_counts.idxmax()

return most_frequent_host_location
",string,"New York, New York, United States","New York, New York, United States"
What is the name of the listing with the most bedrooms?,Retrieve the name of the Airbnb listing that has the highest number of bedrooms.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_bedrooms_listing = db.loc[db[""bedrooms""] == db[""bedrooms""].max()]
name = max_bedrooms_listing[""name""].iloc[0]

return name
",string,"Walk to UN, Macy's & Empire State B","Walk to UN, Macy's & Empire State B"
Which location has the highest number of listings?,What is the city with the highest count in the neighbourhood column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
neighbourhood_counts = db['neighbourhood'].value_counts()
most_common_neighbourhood = neighbourhood_counts.index[0]

return most_common_neighbourhood
",string,Williamsburg,"New York, New York, United States"
What is the most common property type?,Which value appears most frequently in the property_type column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
value_counts = db['property_type'].value_counts()
most_frequent_value = value_counts.idxmax()

return most_frequent_value
",string,Entire apartment,Entire apartment
What are the top 6 unique host locations with the most listings?,Retrieve the six most frequent values in the host_location column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
most_frequent_locations = db['host_location'].value_counts().nlargest(6).index.tolist()

return most_frequent_locations
",list of string,"['New York, New York, United States', 'US', 'Brooklyn, New York, United States', 'Queens, New York, United States', 'Los Angeles, California, United States', 'Bronx, New York, United States']","['New York, New York, United States', 'US', 'Brooklyn, New York, United States', 'Queens, New York, United States', 'Los Angeles, California, United States', 'Bronx, New York, United States']"
What are the 2 unique host locations with the most listings?,Identify the two host locations that appear most frequently in the dataset and return them as a list.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
host_location_counts = dataset['host_location'].value_counts()
top_two_locations = host_location_counts.head(2).index.tolist()

return top_two_locations
",list of (string),"['New York, New York, United States', 'US']","['New York, New York, United States', 'US']"
List the 4 most common property types.,What are the top 4 most frequent values found in the property_type column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
property_type_counts = db['property_type'].value_counts()
top_4_property_types = property_type_counts.head(4).index.tolist()

return top_4_property_types
",list of string,"['Entire apartment', 'Private room in apartment', 'Private room in house', 'Private room in townhouse']","['Entire apartment', 'Private room in apartment', 'Entire condominium', 'Entire house']"
What are the 2 most common types of properties?.,Identify the two most frequent values present in the property_type column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
property_type_counts = db['property_type'].value_counts()
most_frequent_types = property_type_counts.head(2).index.tolist()

return most_frequent_types
",list of string,"['Entire apartment', 'Private room in apartment']","['Entire apartment', 'Private room in apartment']"
What are the top 3 highest review score ratings?,Retrieve the three largest values from the review_scores_rating column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_three_ratings = dataset['review_scores_rating'].nlargest(3).tolist()

return top_three_ratings
",list of float64,"[100.0, 100.0, 100.0]","[100, 100, 100]"
What are the 5 lowest number of minimum nights required?,Retrieve the 5 smallest values from the minimum_nights column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
smallest_minimum_nights = sorted(db['minimum_nights'].tolist())[:5]

return smallest_minimum_nights
",list of (uint16),"[1, 1, 1, 1, 1]","[1, 1, 1, 1, 1]"
What are the 4 highest unique number of bedrooms listed?,Retrieve the four most frequent unique values from the bedrooms column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
bedroom_counts = db['bedrooms'].value_counts()
top_four_bedrooms = bedroom_counts.nlargest(4).index.tolist()

return top_four_bedrooms
",list of (uint16),"[1.0, 2.0, 3.0, 4.0]","[21, 14, 13, 11]"
What are the 6 lowest review scores given because of locations?,Retrieve the six smallest values from the review_scores_location column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
smallest_locations = db['review_scores_location'].nsmallest(6).tolist()

return smallest_locations
",list of (float64),"[2.0, 2.0, 2.0, 2.0, 2.0, 2.0]","[2, 2, 2, 2, 2, 2]"
Was there a day when the minimum temperature was below zero and it didn't rain?,"On any date, was the minimum temperature less than zero and precipitation equal to zero?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
condition = (dataset['tmin'] < 0) & (dataset['prec'] == 0)
result = condition.any()

return result
",bool,True,True
Are there records where the solar radiation exceeds 10 but the maximum temperature was below 20?,Are there any records in the dataset where solar radiation is greater than 10 and maximum temperature is less than 20?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
condition = (dataset[""sol""] > 10) & (dataset[""tmax""] < 20)
result = condition.any()

return result
",bool,True,True
Did any day with maximum wind speed above 15 also have average wind speed below 5?,Are there any dates in the dataset where the maximum wind speed exceeds 15 and the average wind speed is less than 5?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
filtered_data = db[(db[""racha""] > 15) & (db[""velmedia""] < 5)]
if len(filtered_data) > 0:
return True
else:
return False
",bool,True,True
Were there days in the summer where the minimum temperature dropped below 10?,"During the summer season, were there any days with a minimum temperature less than 10?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
summer_data = dataset[dataset[""season""] == ""summer""]
min_temp_less_than_10 = (summer_data[""tmin""] < 10).any()

return min_temp_less_than_10
",bool,False,True
How many days had a maximum temperature above 30 degrees?,,,,ERROR,5500
"On average, what's the minimum temperature during winters?",Calculate the average value of the tmin column for rows where the season is winter.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
winter_data = db[db[""season""] == ""winter""]
average_tmin = winter_data[""tmin""].mean()

return average_tmin
",float64,,2.7196080000000000
How many unique days had solar radiation measurements?,What is the count of distinct values in the fecha column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_dates = db[""fecha""].nunique()

return distinct_dates
",int64,36858,28615
What's the highest wind speed ever recorded?,What is the maximum value in the racha column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_racha = db[""racha""].max()

return max_racha
",float64,32.2,32.2
On which weekday did the highest temperature ever occur?,What is the value of weekday_name corresponding to the row with the highest tmax?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_tmax_row = dataset.loc[dataset[""tmax""] == dataset[""tmax""].max()]
weekday_name = max_tmax_row[""weekday_name""].iloc[0]

return weekday_name
",string,Friday,Friday
In which season do we find the highest average solar radiation?,What is the season associated with the maximum average value of solar radiation?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_sol = db[""sol""].max()
season_at_max_sol = db[db[""sol""] == max_sol][""season""].iloc[0]

return season_at_max_sol
",string,Summer,Summer
Which month had the lowest average wind speed?,What is the name of the month with the minimum average wind speed?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
avg_wind_speed = db.groupby('month_name')['velmedia'].mean()
min_wind_speed_month = avg_wind_speed.idxmin()

return min_wind_speed_month
",string,October,October
On what date was the highest pressure ever recorded?,What is the date associated with the maximum value in the presMax column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_pres_date = db.loc[db[""presMax""] == db[""presMax""].max(), ""fecha""].iloc[0]

return max_pres_date
",datetime64[us],22-12-2016,22-12-2016
What are the top 3 months with the highest average maximum temperatures?,"Identify the three months that exhibit the highest average maximum temperatures, returning their names.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
avg_max_temps = dataset.groupby('month_name')['tmax'].mean().sort_values(ascending=False)
top_three_months = avg_max_temps.head(3).index.tolist()

return top_three_months
",list of (string),"['July', 'August', 'June']","['July', 'August', 'June']"
"Which are the 5 weekdays with the most rain, ranked from highest to lowest?","Retrieve the names of the top 5 weekdays with the highest precipitation values, sorted in descending order based on precipitation.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
weekday_precipitation = dataset.groupby('weekday_name')['prec'].mean().sort_values(ascending=False)
top_5_weekdays = weekday_precipitation.head(5).index.tolist()

return top_5_weekdays
",list of (string),"['Friday', 'Sunday', 'Thursday', 'Saturday', 'Wednesday']","['Friday', 'Sunday', 'Saturday', 'Thursday', 'Wednesday']"
"List the 4 seasons ranked by average solar radiation, from highest to lowest.",,,,ERROR,"['Summer', 'Spring', 'Autumn', 'Winter']"
Which 2 months recorded the lowest average minimum temperatures?,,,,ERROR,"['January', 'December']"
List the top 5 recorded maximum temperatures.,Retrieve the 5 highest values from the tmax column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
highest_tmax_values = db.nlargest(5, 'tmax')['tmax'].tolist()

return highest_tmax_values
",list of (float64),"[40.7, 40.6, 40.0, 40.0, 40.0]","[40.7, 40.6, 40.0, 40.0, 40.0]"
What are the 4 lowest wind speeds ever recorded?,Retrieve the four smallest values from the velmedia column in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
smallest_velmedia = db['velmedia'].nsmallest(4).tolist()

return smallest_velmedia
",list of float64,"[0.0, 0.0, 0.0, 0.0]","[0.0, 0.0, 0.0, 0.0]"
Rank the highest 3 solar radiation measurements.,Retrieve the top 3 largest values from the sol column in descending order.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_3_sol = db.sort_values(by='sol', ascending=False)['sol'].head(3).tolist()

return top_3_sol
",list of (float64),"[14.9, 14.8, 14.7]","[14.9, 14.8, 14.7]"
Which 6 days of the year (numbered from 1 to 365/366) had the highest average temperatures?,What are the 6 dayofyear values that correspond to the highest average tmed temperatures?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
avg_tmed = db.groupby('dayofyear')['tmed'].mean().reset_index()
top_6_days = avg_tmed.nlargest(6, 'tmed')['dayofyear'].tolist()

return top_6_days
",list of (uint16),"[209, 210, 208, 207, 211, 205]","[209, 210, 208, 207, 211, 205]"
"Are there records where the RETRINOIN_xRZI exceeds 10,000?","Are there any entries in the dataset where the value of the RETRINOIN_xRZI column is greater than 10,000?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
greater_than_10000 = dataset[dataset[""RETRINOIN_xRZI""] > 10000]

if len(greater_than_10000) > 0:
return True
else:
return False
",bool,True,True
Are there any female respondents who belong to the ESTE NUTS1 region?,Is there at least one respondent with SEXO equal to female and NUTS1 equal to ESTE?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
female_respondents = db[(db[""SEXO""] == ""female"") & (db[""NUTS1""] == ""ESTE"")]
if len(female_respondents) > 0:
return True
else:
return False
",bool,False,True
Do we have respondents who fall under both PRIVADO control and NACIONAL market?,Are there any respondents whose CONTROL attribute is PRIVADO and whose MERCADO attribute is NACIONAL?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
control_privado = db[db[""CONTROL""] == ""PRIVADO""]
mercado_nacional = control_privado[control_privado[""MERCADO""] == ""NACIONAL""]

if len(mercado_nacional) > 0:
return True
else:
return False
",bool,True,True
"Are there records with RETRINOIN_WwQk less than 5,000?",Does the dataset contain any records where the value in the RETRINOIN_WwQk column is less than 5000?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
less_than_5000 = db[db[""RETRINOIN_WwQk""] < 5000]
contains_records = len(less_than_5000) > 0

return contains_records
",bool,True,True
How many unique respondents belong to the ESTE NUTS1 region?,What is the count of distinct values in the RESPONSA column for rows where the NUTS1 region is ESTE NUTS1?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
df = db.copy()
este_nuts1_rows = df[df[""NUTS1""] == ""ESTE NUTS1""]
distinct_responsa = este_nuts1_rows[""RESPONSA""].nunique()

return distinct_responsa
",int64,0,58852
"On average, what's the RETRINOIN value for male respondents?",Calculate the mean of the RETRINOIN column for respondents whose SEXO is male.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
male_respondents = db[db[""SEXO""] == ""Male""]
mean_retrinoin = male_respondents[""RETRINOIN""].mean()

return mean_retrinoin
",float64,29370.243704000000,29370.243704000000
What's the highest value for RETRINOIN_ac1q in the dataset?,,,,ERROR,199496.34
How many unique clusters are present in the 'umap_cluster' column?,What is the number of distinct values found in the umap_cluster column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_values = db['umap_cluster'].nunique()

return distinct_values
",int64,73,73
Which 'ANOS2' category has the most number of respondents?,What is the most frequent value in the ANOS2 column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
most_frequent_value = db['ANOS2'].mode()[0]

return most_frequent_value
",string,DE 40 A 49,DE 40 A 49
In which 'NUTS1' region do we find the highest average RETRINOIN?,What is the value of NUTS1 that corresponds to the maximum average RETRINOIN?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
avg_retrinoin = db.groupby('NUTS1')['RETRINOIN'].mean()
max_nuts1 = avg_retrinoin.idxmax()

return max_nuts1
",string,COMUNIDAD DE MADRID,COMUNIDAD DE MADRID
Which 'MERCADO' category is the least common in the dataset?,What is the category value in the 'MERCADO' column that appears with the lowest frequency?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
mercado_counts = db['MERCADO'].value_counts()
least_frequent_category = mercado_counts.idxmin()

return least_frequent_category
",string,UNIÓN EUROPEA,UNIÓN EUROPEA
Which 'umap_cluster' is the most dominant in the dataset?,What is the most frequent value in the umap_cluster column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
most_frequent_cluster = db['umap_cluster'].mode()[0]

return most_frequent_cluster
",category,Cluster 1,Cluster 1
Which are the 2 least common age categories in the dataset?,What are the two most frequent values in the clusters_2 column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
value_counts = dataset['clusters_2'].value_counts()
most_frequent_values = value_counts.nlargest(2).index.tolist()

return most_frequent_values
",list of (category),"['Cluster 1', 'Cluster 2']","['MENOS 19 AÑOS', 'MÁS DE 59']"
Which are the 3 least common 'ANOS2' categories in the dataset?,What are the three most frequent values in the 'ANOS2' column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
anos2_counts = db['ANOS2'].value_counts()
top_three_anos2 = anos2_counts.nlargest(3).index.tolist()

return top_three_anos2
",list of (category),"['DE 40 A 49', 'DE 50 A 59', 'DE 30 A 39']","['MENOS 19 AÑOS', 'MÁS DE 59', 'DE 20 A 29']"
List the top 5 'NUTS1' regions by frequency.,What are the 5 most frequent values in the NUTS1 column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
nuts1_counts = db['NUTS1'].value_counts()
top_5_nuts1 = nuts1_counts.head(5).index.tolist()

return top_5_nuts1
",list of (string),"['ESTE', 'COMUNIDAD DE MADRID', 'NORESTE', 'SUR', 'CENTRO']","['ESTE', 'COMUNIDAD DE MADRID', 'NORESTE', 'SUR', 'CENTRO']"
Which 2 'umap_cluster' categories are the least represented?,Identify the two 'umap_cluster' categories that have the smallest number of occurrences in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
cluster_counts = db['umap_cluster'].value_counts()
sorted_clusters = cluster_counts.sort_values()
two_smallest_clusters = sorted_clusters.index[:2].tolist()

return two_smallest_clusters
",list of (category),"['Cluster 72', 'Cluster 71']","['Cluster 71', 'Cluster 73']"
List the top 5 recorded RETRINOIN values.,What are the 5 highest values present in the RETRINOIN column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_5_values = dataset['RETRINOIN'].nlargest(5).tolist()

return top_5_values
",list of (float64),"[4225998.36, 4153877.05, 4021902.63, 3903390.45, 2192967.2]","[4225998.36, 4153877.05, 4021902.63, 3903390.45, 2192967.2]"
What are the 4 lowest x values in the dataset?,Return a sorted list containing the four smallest values from the x column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
x_values = db[""x""].tolist()
sorted_x_values = sorted(x_values)[:4]

return sorted_x_values
",list of (float64),"[-23714.217, -23706.5, -23698.271, -23697.166]","[-23714.217, -23706.5, -23698.271, -23697.166]"
Rank the highest 3 y values in the dataset.,What are the three largest values in the y column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
y_values = db[""y""].tolist()
top_three = sorted(y_values, reverse=True)[:3]

return top_three
",list of (float64),"[28352.02, 28313.926, 28283.78]","[28352.02, 28313.926, 28283.78]"
What are the largest 2 y values in the dataset?.,Retrieve the two highest values from the column named 'y'.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
highest_values = db['y'].nlargest(2).tolist()

return highest_values
",list of (float64),"[28352.02, 28313.926]","[28352.02, 28313.926]"
Is the most visited URL related to 'no code data science'?,What is the category of the URL with the highest ranking? Is that category 'no code data science'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
highest_ranked_url = dataset.loc[dataset[""Ranking""] == dataset[""Ranking""].max()]
category = highest_ranked_url[""URLs""].iloc[0]

return category == 'no code data science'
",bool,False,True
Does any URL have a competition level of 'Low'?,Is there any entry in the dataset where the Competition column has the value 'Low'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
competition_low = (dataset[""Competition""] == ""Low"").any()

return competition_low
",bool,True,True
Are there any URLs with an average monthly searches above 1000?,,,,ERROR,False
Is the URL with the lowest ranking also the one with the highest monthly searches?,,,,ERROR,True
How many unique URLs are in the dataset?,What is the count of distinct values present in the URLs column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_urls = db['URLs'].nunique()

return distinct_urls
",int64,28,28
What is the lowest ranking value in the dataset?,What is the minimum value present in the Ranking column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_ranking = dataset[""Ranking""].min()

return min_ranking
",uint8,1,11
What is the minimum average monthly searches in the dataset?,What is the smallest value of average monthly searches found in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
smallest_avg_searches = db['Avg. monthly searches'].min()

return smallest_avg_searches
",float64,50,50
How many unique keywords are present in the dataset?,What is the number of distinct values found in the Keyword column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
distinct_keywords = dataset['Keyword'].nunique()

return distinct_keywords
",int64,6,6
What is the competition level of the highest-ranked URL?,What is the value of the Competition column for the URL with the maximum Ranking?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_rank_url = db.loc[db[""Ranking""] == db[""Ranking""].max()]
competition_value = max_rank_url[""Competition""].iloc[0]

return competition_value
",category,Low,Medium
What keyword has the highest average monthly searches?,Which keyword has the maximum value in the Avg. monthly searches column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_searches = dataset.loc[dataset[""Avg. monthly searches""] == dataset[""Avg. monthly searches""].max()]
keyword = max_searches[""Keyword""].iloc[0]

return keyword
",string,no code data science,no code data science
What is the competition level for the URL with the highest ranking?,What is the value of the competition column for the row with the maximum ranking?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_ranking_row = db.loc[db[""Ranking""] == db[""Ranking""].max()]
competition_value = max_ranking_row[""Competition""].iloc[0]

return competition_value
",category,Low,Low
What keyword is associated with the URL with the lowest ranking?,Identify the keyword corresponding to the URL with the minimum ranking value.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
min_ranking_url = db.loc[db[""Ranking""] == db[""Ranking""].min()]
keyword = min_ranking_url[""Keyword""].iloc[0]

return keyword
",string,no code data science,no code data science
What are the top 3 URLs with the highest average monthly searches?,,,,ERROR,"['https://www.obviously.ai/', 'https://venturebeat.com/2021/10/12/no-code-ai-startup-obviously-ai-raises-4-7m/', 'https://hbr.org/2021/11/how-no-code-platforms-could-disrupt-the-it-industry']"
List the bottom 2 competition levels of URLs with ranking better than 5.,"What are the two lowest values for the competition column, among URLs that have a ranking greater than 5?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_data = dataset[dataset[""Ranking""] > 5]
sorted_competition = filtered_data.groupby(""Competition"")[""Ranking""].count().sort_values()
two_lowest_competitions = sorted_competition.head(2).index.tolist()

return two_lowest_competitions
",list of string,"['Medium', 'Unknown']","['Medium', 'Unknown']"
Which are the 4 keywords associated with the URLs of lowest rankings?,What are the keywords corresponding to the URLs with the smallest Ranking values?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
smallest_ranking_urls = db[db[""Ranking""] == db[""Ranking""].min()]
keywords = smallest_ranking_urls[""Keyword""].tolist()

return keywords
",list of string,"['no code data science', 'no code data analytics', 'no code analytics', 'no code data science tools', 'no code analytics platform', 'no code predictive analytics']","['no code data science', 'no code data analytics', 'no code data science', 'no code data science']"
Enumerate the 3 URLs with the highest ranking.,What are the URLs associated with the top 3 highest Ranking values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_3_ranking = dataset.nlargest(3, 'Ranking')['URLs']
return ['\'{}\''.format(url) for url in top_3_ranking]
",list of string,"[""'https://www.nocodelytics.com/no-code-analytics'"", ""'https://www.akkio.com/post/the-complete-no-code-ai-guide-exploring-26-no-code-ai-tools'"", ""'https://medium.com/captech-corner/the-truth-about-automl-and-no-code-data-science-b73f2cf50c4e'""]","['https://www.obviously.ai/', 'https://www.obviously.ai/', 'https://venturebeat.com/2021/10/12/no-code-ai-startup-obviously-ai-raises-4-7m/']"
What are the lowest 4 rankings associated with the keyword 'no code data science'?,Retrieve the four smallest values from the Ranking column where the Keyword column equals 'no code data science'.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
filtered_data = db[db['Keyword'] == 'no code data science']
smallest_rankings = sorted(filtered_data['Ranking'])[:4]

return smallest_rankings
",list of (uint8),"[1, 2, 3, 4]","[10, 9, 8, 7]"
List the bottom 3 average monthly searches for URLs with medium competition.,"What are the three smallest values in the Avg. monthly searches column, considering only rows where Competition is medium?","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
filtered_data = db[db[""Competition""] == ""medium""].sort_values(by=""Avg. monthly searches"")
smallest_searches = filtered_data[""Avg. monthly searches""].head(3).tolist()

return smallest_searches
",list of (uint8),[],"[50, 50, 50]"
Provide the lowest 5 rankings of URLs with low competition (if any).,What are the 5 smallest values in the Ranking column for rows where Competition is low?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
competition_low = db[db['Competition'] == 'low']
smallest_rankings = competition_low['Ranking'].nlargest(5).tolist()

return smallest_rankings
",list of (uint8),[],"[11, 10, 10, 9, 9]"
Specify the bottom 2 average monthly searches for URLs with the highest rankings.,What are the 2 lowest average monthly search values among URLs that have the highest Ranking?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
highest_ranking_urls = db[db['Ranking'] == db['Ranking'].max()]
lowest_search_values = highest_ranking_urls.sort_values(by='Avg. monthly searches')['Avg. monthly searches'][:2].tolist()

return lowest_search_values
",list of (uint8),"[50, 50]","[50, 50]"
Is there any wine with a quality rating of 10?,Does any record in the dataset have a quality value equal to 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
quality_ten = (dataset[""quality""] == 10).any()

return quality_ten
",bool,False,False
Are there any wines with residual sugar above 15g/dm^3?,Is there any wine in the dataset where the residual sugar value is greater than 15?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
residual_sugar_greater_than_15 = dataset[dataset['residual sugar'] > 15]
result = len(residual_sugar_greater_than_15) > 0

return result
",bool,True,True
Is the highest alcohol content wine also the one with the highest quality rating?,,,,ERROR,False
Does any wine have a pH level below 2.5?,,,,ERROR,False
How many unique quality ratings are there in the dataset?,What is the number of distinct values present in the quality column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
distinct_quality_values = dataset['quality'].nunique()

return distinct_quality_values
",int64,6,6
What is the maximum fixed acidity level found in the dataset?,What is the largest value present in the fixed acidity column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
largest_fixed_acidity = db[""fixed acidity""].max()

return largest_fixed_acidity
",float64,15.9,15.9
What is the minimum volatile acidity level in the dataset?,What is the smallest value present in the volatile acidity column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
smallest_volatile_acidity = dataset['volatile acidity'].min()

return smallest_volatile_acidity
",float64,0.12,0.12
How many wines have free sulfur dioxide above 50 mg/dm^3?,What is the count of wines where the free sulfur dioxide value exceeds 50?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
count = len(dataset[dataset['free sulfur dioxide'] > 50])

return count
",int64,16,16
What is the quality rating of the wine with the highest alcohol content?,What is the quality value associated with the wine sample having the highest alcohol level?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
highest_alcohol_sample = dataset.loc[dataset[""alcohol""] == dataset[""alcohol""].max()]
quality = highest_alcohol_sample[""quality""].iloc[0]

return quality
",uint8,5,5
What is the quality rating of the wine with the highest fixed acidity?,What is the quality value corresponding to the wine having the maximum fixed acidity?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_fixed_acidity_wine = dataset.loc[dataset[""fixed acidity""] == dataset[""fixed acidity""].max()]
quality = max_fixed_acidity_wine[""quality""].iloc[0]

return quality
",uint8,5,5
What is the quality rating of the wine with the lowest volatile acidity?,What is the quality value corresponding to the row with the minimum volatile acidity?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_volatile_acidity_row = dataset.loc[dataset[""volatile acidity""] == dataset[""volatile acidity""].min()]
quality_value = min_volatile_acidity_row[""quality""].iloc[0]

return quality_value
",uint8,7,7
What is the quality rating of the wine with the highest pH level?,What is the quality value corresponding to the wine record that has the highest pH?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
highest_ph_record = db.loc[db[""pH""] == db[""pH""].max()]
quality_value = highest_ph_record[""quality""].iloc[0]

return quality_value
",uint8,6,6
List the quality ratings of the top 3 wines with the highest alcohol content.,Retrieve the quality ratings corresponding to the three wines having the largest alcohol values.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sorted_by_alcohol = dataset.sort_values(by='alcohol', ascending=False)
top_three_qualities = sorted_by_alcohol['quality'].head(3).tolist()

return top_three_qualities
",list of (uint8),"[5, 8, 6]","['5', '6', '6']"
Enumerate the quality ratings of the bottom 2 wines with the lowest residual sugar.,What are the quality values for the two wines that have the smallest residual sugar readings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sorted_by_residual_sugar = dataset.sort_values(by='residual sugar')
two_smallest_residual_sugar = sorted_by_residual_sugar.head(2)
quality_values = two_smallest_residual_sugar['quality'].tolist()

return quality_values
",list of (uint8),"[6, 6]","['6', '6']"
Which are the quality ratings of the top 5 wines with the highest density?,Retrieve the quality ratings corresponding to the five wines exhibiting the highest density values.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_5_density = dataset.nlargest(5, 'density')
quality_ratings = top_5_density['quality'].tolist()

return quality_ratings
",list of (uint8),"[6, 6, 7, 5, 5]","['6', '6', '7', '5', '5']"
List the quality ratings of the bottom 4 wines with the lowest pH level.,What are the quality ratings corresponding to the 4 wines having the smallest pH values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
df = dataset.copy()
df_sorted = df.sort_values(by='pH', ascending=True)
smallest_ph_wines = df_sorted.head(4)
quality_ratings = smallest_ph_wines['quality'].tolist()

return quality_ratings
",list of (uint8),"[4, 6, 6, 8]","['4', '6', '6', '8']"
What are the alcohol contents of the top 4 wines with the highest quality ratings?,Retrieve the alcohol values for the four wines exhibiting the highest quality ratings.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
highest_quality_wines = dataset.sort_values(by='quality', ascending=False).head(4)
alcohol_values = highest_quality_wines['alcohol'].tolist()

return alcohol_values
",list of float64,"[11.0, 10.0, 12.9, 12.5]","['12.8', '12.6', '12.9', '9.8']"
List the volatile acidity levels of the bottom 3 wines with the lowest quality ratings.,Retrieve the volatile acidity values for the three wines with the minimum quality ratings.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_quality_wines = dataset.sort_values('quality').head(3)
volatile_acidity_values = min_quality_wines['volatile acidity'].tolist()

return volatile_acidity_values
",list of float64,"[0.875, 0.44, 1.02]","['0.58', '0.61', '1.185']"
Enumerate the fixed acidity levels of the top 5 wines with the highest quality ratings.,What are the fixed acidity values for the five wines with the highest quality ratings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_five_quality = dataset.nlargest(5, 'quality')
fixed_acidity_values = top_five_quality['fixed acidity'].tolist()

return fixed_acidity_values
",list of (float64),"[7.9, 10.3, 5.6, 12.6, 11.3]","['7.9', '10.3', '5.6', '12.6', '11.3']"
Provide the residual sugar levels of the bottom 2 wines with the lowest quality ratings.,What are the residual sugar values for the two wines with the minimum quality ratings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_quality_wines = dataset.loc[dataset[""quality""] == dataset[""quality""].min()]
residual_sugar_values = min_quality_wines[""residual sugar""].tolist()

return residual_sugar_values
",list of float64,"[2.2, 2.1, 4.25, 1.5, 3.4, 2.1, 1.2, 2.1, 5.7, 1.8]","['2.2', '2.1']"
Is there any purchase with a total cost above 1000?,Are there any records in the dataset where the total amount is greater than 1000?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
total_greater_than_1000 = db[db[""Total""] > 1000]
result = len(total_greater_than_1000) > 0

return result
",bool,True,True
Are there any customers who made a purchase using cash?,Is there any record in the dataset where the payment method is cash?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
cash_payment = (dataset[""Payment""] == ""Cash"").any()

return cash_payment
",bool,True,True
Is the customer with the highest total purchase cost a 'Member'?,Does the customer with the maximum total purchase cost have a Customer type of 'Member'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_total_customer = dataset.loc[dataset[""Total""] == dataset[""Total""].max()]
is_member = max_total_customer[""Customer type""].str.contains('Member', case=False).bool()

return is_member
",bool,True,True
Does any customer with a rating strictly above 9 use 'Ewallet' as their payment method?,Is there any customer whose Rating is greater than 9 and Payment is equal to 'Ewallet'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
customer_filter = (dataset['Rating'] > 9) & (dataset['Payment'] == 'Ewallet')
result = customer_filter.any()

return result
",bool,True,True
How many unique branches are there in the dataset?,What is the count of distinct values present in the Branch column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
distinct_branches = dataset['Branch'].nunique()

return distinct_branches
",int64,3,3
What is the maximum quantity of products bought in a single purchase?,What is the highest value found in the Quantity column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
highest_quantity = dataset[""Quantity""].max()

return highest_quantity
",int64,10,10
What is the minimum total cost of a purchase in the dataset?,What is the smallest value present in the Total column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
smallest_total = dataset[""Total""].min()

return smallest_total
",float64,10.6785,10.6785
How many purchases were made in Yangon city?,What is the total number of invoices generated from the city Yangon?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
yangon_invoices = dataset[dataset[""City""] == ""Yangon""]
total_invoices = len(yangon_invoices)

return total_invoices
",int64,340,340
What is the payment method used for the purchase with the highest total cost?,Which payment type corresponds to the transaction with the largest total amount?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_total_transaction = dataset.loc[dataset[""Total""] == dataset[""Total""].max()]
payment_type = max_total_transaction[""Payment""].iloc[0]

return payment_type
",string,Credit card,Credit card
What is the product line of the purchase with the highest total cost?,Which product line corresponds to the purchase having the largest total cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_total_purchase = dataset.loc[dataset[""Total""] == dataset[""Total""].max()]
product_line = max_total_purchase[""Product line""].iloc[0]

return product_line
",string,Fashion accessories,Fashion accessories
What is the customer type of the purchase with the lowest total cost?,Which customer type corresponds to the transaction with the minimum total cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_total_transaction = dataset.loc[dataset[""Total""] == dataset[""Total""].min()]
customer_type = min_total_transaction[""Customer type""].iloc[0]

return customer_type
",category,Member,Member
What is the gender of the customer with the highest total purchase cost?,Can you identify the gender of the customer who has spent the most money in total?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
customer_spending = dataset.groupby('Gender')['Total'].sum()
max_spender_gender = customer_spending.idxmax()

return max_spender_gender
",string,Female,Female
List the payment methods of the top 3 purchases with the highest total cost.,What are the payment methods used for the three purchases with the largest total cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_three_purchases = dataset.nlargest(3, 'Total')['Payment']
return ['' + payment for payment in top_three_purchases]
",list of string,"['Credit card', 'Credit card', 'Ewallet']","['Credit card', 'Credit card', 'Ewallet']"
Enumerate the product lines of the bottom 2 purchases with the lowest total cost.,What are the product lines associated with the two transactions that have the smallest total cost values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sorted_transactions = dataset.sort_values(by='Total', ascending=True)
two_smallest_transactions = sorted_transactions.head(2)
product_lines = two_smallest_transactions['Product line'].tolist()

return product_lines
",list of string,"['Sports and travel', 'Fashion accessories']","['Sports and travel', 'Fashion accessories']"
Which are the customer types of the top 5 purchases with the highest total cost?,What are the customer types associated with the 5 invoices having the largest total cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sorted_invoices = dataset.sort_values(by='Total', ascending=False).head(5)
customer_types = sorted_invoices['Customer type'].tolist()

return customer_types
",list of string,"['Member', 'Normal', 'Member', 'Normal', 'Normal']","['Member', 'Normal', 'Member', 'Normal', 'Normal']"
List the genders of the bottom 4 purchases with the lowest total cost.,What are the genders corresponding to the 4 customers with the smallest total purchase amount?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sorted_df = dataset.sort_values(by='Total', ascending=True)
smallest_customers = sorted_df.head(4)
genders = smallest_customers['Gender'].tolist()

return genders
",list of string,"['Male', 'Female', 'Female', 'Male']","['Male', 'Female', 'Female', 'Male']"
What are the quantities of products bought in the top 4 purchases with the highest total cost?,"Retrieve the quantities of the top 4 products, ordered by their total cost in descending order.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
product_costs = dataset[['Product line', 'Total']].groupby('Product line')['Total'].sum().sort_values(ascending=False)
top_4_products = product_costs.head(4).index.tolist()

quantities = []
for product in top_4_products:
product_data = dataset[dataset['Product line'] == product]
total_quantity = product_data['Quantity'].sum()
quantities.append(total_quantity)

return quantities
",list of (uint8),"[np.uint64(952), np.uint64(920), np.uint64(971), np.uint64(902)]","[10, 10, 10, 10]"
List the unit prices of the bottom 3 purchases with the lowest total cost.,What are the unit prices corresponding to the three purchases having the smallest total cost values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sorted_df = dataset.sort_values(by='Total', ascending=True)
smallest_three_unit_prices = sorted_df['Unit price'].head(3).tolist()

return smallest_three_unit_prices
",list of float64,"[10.17, 12.09, 12.54]","[10.17, 12.09, 12.54]"
Enumerate the ratings of the top 5 purchases with the highest total cost.,What are the ratings corresponding to the top 5 products with the highest total cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_products = dataset.nlargest(5, 'Total')
ratings = top_products['Rating'].tolist()

return ratings
",list of float64,"[6.6, 8.7, 4.5, 8.0, 4.4]","[6.6, 8.7, 4.5, 8.0, 4.4]"
Provide the gross incomes of the bottom 2 purchases with the lowest total cost.,What are the gross incomes corresponding to the two lowest total costs in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sorted_by_total = dataset.sort_values(by='Total')
two_lowest_totals = sorted_by_total['Total'].head(2).tolist()
corresponding_gross_incomes = []
for total in two_lowest_totals:
gross_income = dataset[dataset['Total'] == total]['gross income'].values
if len(gross_income) > 0:
corresponding_gross_incomes.append(float(gross_income[0]))
else:
corresponding_gross_incomes.append(None)

return corresponding_gross_incomes
",list of (float64),"[0.5085, 0.6045]","[0.5085, 0.6045]"
Are there any individuals in the dataset who are above 60 years of age?,Does the dataset contain any entries where the Age is greater than 60?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
age_greater_than_60 = dataset[dataset[""Age""] > 60]
contains_entries = not age_greater_than_60.empty

return contains_entries
",bool,True,False
Does anyone have a Diabetes Pedigree Function score above 2.5?,Is there a record in the dataset where the DiabetesPedigreeFunction value is greater than 2.5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
diabetes_pedigree_greater_than_2_5 = dataset[dataset[""DiabetesPedigreeFunction""] > 2.5]
if len(diabetes_pedigree_greater_than_2_5) > 0:
return True
else:
return False
",bool,False,True
Does the person with the highest glucose level also have diabetes?,"Is the individual with the maximum Glucose value also marked as having diabetes, based on the Outcome column?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_glucose_individual = dataset.loc[dataset[""Glucose""] == dataset[""Glucose""].max()]
outcome_value = max_glucose_individual[""Outcome""].iloc[0]

if outcome_value == 1:
return True
else:
return False
",bool,True,True
Is there anyone who has zero pregnancies and is diabetic?,"Are there any individuals in the dataset with a value of zero for Pregnancies and a positive value for Outcome, indicating diabetes?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
zero_pregnancies = dataset[dataset['Pregnancies'] == 0]
positive_outcome = zero_pregnancies[zero_pregnancies['Outcome'] > 0]

if len(positive_outcome) > 0:
return True
else:
return False
",bool,True,True
What is the maximum number of pregnancies recorded in the dataset?,What is the largest value found in the Pregnancies column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
largest_pregnancies = db[""Pregnancies""].max()

return largest_pregnancies
",int64,17,17
What is the minimum blood pressure level recorded in the dataset?,What is the lowest value present in the BloodPressure column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
lowest_blood_pressure = db[""BloodPressure""].min()

return lowest_blood_pressure
",float64,0,0
What is the average BMI recorded in the dataset?,Calculate the mean value of the BMI column in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
mean_bmi = db[""BMI""].mean()

return mean_bmi
",float64,31.992578000000000,31.992578000000000
How many individuals have an insulin level above 150?,What is the count of individuals in the dataset whose Insulin value exceeds 150?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
insulin_count = dataset[dataset[""Insulin""] > 150].shape[0]

return insulin_count
",int64,153,187
What is the diabetes outcome for the person with the highest BMI?,What is the value of Outcome for the individual with the maximum BMI?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_bmi_individual = db.loc[db[""BMI""] == db[""BMI""].max()]
outcome_value = max_bmi_individual[""Outcome""].iloc[0]

return outcome_value
",uint8,1,1
What is the diabetes outcome for the person with the lowest blood pressure?,What is the DiabetesPedigreeFunction value corresponding to the individual with the minimum BloodPressure?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_blood_pressure_individual = dataset.loc[dataset[""BloodPressure""] == dataset[""BloodPressure""].min()]
diabetes_pedigree_function_value = min_blood_pressure_individual[""DiabetesPedigreeFunction""].iloc[0]

return diabetes_pedigree_function_value
",uint8,0.134,0
What is the diabetes outcome for the person with the highest insulin level?,What is the value of Outcome for the individual with the maximum Insulin level?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_insulin_individual = db.loc[db[""Insulin""] == db[""Insulin""].max()]
outcome_value = max_insulin_individual[""Outcome""].iloc[0]

return outcome_value
",uint8,1,1
What is the diabetes outcome for the person with the lowest glucose level?,What is the value of Outcome for the individual with the minimum Glucose?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_glucose_individual = dataset.loc[dataset[""Glucose""] == dataset[""Glucose""].min()]
outcome_value = min_glucose_individual[""Outcome""].iloc[0]

return outcome_value
",uint8,0,0
List the diabetes outcomes of the top 3 individuals with the highest number of pregnancies.,What are the diabetes outcomes corresponding to the three largest values in the Pregnancies column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
largest_pregnancies = db.nlargest(3, 'Pregnancies')
outcomes = largest_pregnancies['Outcome'].tolist()

return outcomes
",list of (uint8),"[1, 1, 1]","[1, 1, 1]"
List the diabetes outcomes of the bottom 2 individuals with the lowest BMI.,Retrieve the DiabetesPedigreeFunction values corresponding to the two individuals with the minimum BMI values.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
min_bmi_individuals = db.loc[db[""BMI""] == db[""BMI""].min()]
diabetes_pedigree_function_values = min_bmi_individuals[""DiabetesPedigreeFunction""].tolist()

return diabetes_pedigree_function_values
",list of (uint8),"[0.232, 0.305, 0.304, 0.102, 0.572, 1.731, 0.256, 0.174, 0.189, 0.64, 0.261]","[0, 0]"
List the diabetes outcomes of the top 5 individuals with the highest insulin levels.,Retrieve the DiabetesPedigreeFunction values for the five individuals with the maximum Insulin levels.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_five_insulin = dataset.nlargest(5, 'Insulin')
diabetes_pedigree_function_values = top_five_insulin['DiabetesPedigreeFunction'].tolist()

return diabetes_pedigree_function_values
",list of (uint8),"[0.398, 2.329, 0.427, 0.687, 0.702]","[1, 1, 1, 1, 1]"
List the diabetes outcomes of the bottom 4 individuals with the lowest blood pressure.,Retrieve the DiabetesPedigreeFunction values for the four individuals with the minimum BloodPressure values.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
min_bp = db.sort_values(by='BloodPressure')['DiabetesPedigreeFunction'].head(4).tolist()

return min_bp
",list of (uint8),"[0.187, 0.174, 0.209, 0.102]","[0, 0, 0, 0]"
What are the ages of the top 4 individuals with the highest number of pregnancies?,,,,ERROR,"[51, 67, 67, 67]"
List the BMI of the bottom 3 individuals with the lowest glucose levels.,Retrieve the BMI values corresponding to the three lowest Glucose readings in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
lowest_glucose = dataset.nlargest(3, 'Glucose')['BMI'].tolist()

return lowest_glucose
",list of (float64),"[42.9, 41.3, 30.5]","[32.0, 32.0, 32.0]"
Enumerate the blood pressure levels of the top 5 individuals with the highest Diabetes Pedigree Function scores.,What are the BloodPressure values for the 5 individuals with the largest DiabetesPedigreeFunction scores?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_5_diabetic = db.nlargest(5, 'DiabetesPedigreeFunction')
blood_pressure_values = top_5_diabetic['BloodPressure'].tolist()

return blood_pressure_values
",list of (uint8),"[78, 70, 40, 82, 66]","[0, 0, 0, 0, 0]"
Provide the glucose levels of the 2 individuals with the highest insulin levels.,What are the glucose levels corresponding to the two individuals with maximum insulin values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_insulin_individuals = dataset.nlargest(2, 'Insulin')
glucose_levels = max_insulin_individuals['Glucose'].tolist()

return glucose_levels
",list of (uint8),"[189, 197]","[189, 197]"
Are there any articles that have the material type 'Op-Ed'?,How many articles have the material_type equal to Op-Ed?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
op_ed_articles = db[db[""material_type""] == ""Op-Ed""]
num_op_ed_articles = len(op_ed_articles)

return num_op_ed_articles > 0
",bool,True,True
Does the article with the longest headline contain the keyword 'United States Politics and Government'?,Is the string 'United States Politics and Government' present in the headline of the article with the maximum length headline?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_len_headline = db.loc[db['headline'].str.len() == db['headline'].str.len().max(), 'headline'].iloc[0]
if 'United States Politics and Government' in max_len_headline:
return True
else:
return False
",bool,False,False
Is there any article published on '2021-01-05'?,Are there any entries in the dataset where the date is equal to '2021-01-05'?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
date_to_check = pd.to_datetime('2021-01-05')
filtered_dates = db[db['date'] == date_to_check]
if len(filtered_dates) > 0:
return True
else:
return False
",bool,False,True
Does any article contain more than 10 keywords?,,,,ERROR,True
How many unique material types are there in the dataset?,What is the count of distinct values present in the material_type column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_material_types = db[""material_type""].nunique()

return distinct_material_types
",int64,16,16
What is the longest length of a headline in the dataset?,,,,ERROR,147
How many articles were published on '2021-01-02'?,What is the count of articles with a date equal to '2021-01-02'?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
articles_on_date = db[db['date'] == '2021-01-02']
count = len(articles_on_date)

return count
",int64,56,52
What is the highest number of keywords associated with a single article?,,,,ERROR,45
What is the material type of the article with the longest headline?,Can you identify the material type corresponding to the article possessing the maximum length headline?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_headline_length = dataset[""headline""].str.len().max()
article_with_max_headline = dataset[dataset[""headline""].str.len() == max_headline_length]
material_type = article_with_max_headline[""material_type""].iloc[0]

return material_type
",string,Interactive Feature,News
What is the material type of the article with the shortest headline that is not news or video?,"Find the article with the minimum headline length, excluding news and video material types, and return its material type.","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
filtered_articles = db[~db['material_type'].isin(['news', 'video'])]
min_headline_length = filtered_articles['headline'].str.len().min()
article_with_min_length = filtered_articles[filtered_articles['headline'].str.len() == min_headline_length]

return article_with_min_length['material_type'].iloc[0]
",string,News,Slideshow
What is the material type of the non-editorial article with the most number of keywords?,,,,ERROR,News
What is the most common material amongst articles with the least number of keywords?,,,,ERROR,News
List the material types of the top 3 articles with the longest headlines.,What are the material types for the three articles with the maximum length headlines?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
headline_lengths = dataset['headline'].str.len()
top_3_indices = headline_lengths.nlargest(3).index.tolist()
material_types = [dataset.loc[i, 'material_type'] for i in top_3_indices]

return material_types
",list of string,"['Interactive Feature', 'News', 'News']","['News', 'News', 'News']"
List the material types of the bottom 2 articles with the shortest headlines that are not videos or slides.,,,,ERROR,"['News', 'News']"
List the material types of the top 5 articles with the most number of keywords.,,,,ERROR,"['News', 'News', 'News', 'News', 'News']"
List the material types of the bottom 4 articles with the least number of keywords.,What are the material types for the four articles sorted by the number of keywords in ascending order?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
article_keyword_counts = db.groupby('material_type')['keywords'].count().reset_index()
article_keyword_counts = article_keyword_counts.sort_values(by='keywords', ascending=True)
top_four_materials = article_keyword_counts['material_type'].head(4).tolist()

return top_four_materials
",list of string,"['Biography', ""Editors' Note"", 'News Analysis', 'Editorial']","['News', 'News', 'News', 'News']"
What are the lengths of the headlines of the top 4 articles with the most number of keywords?,,,,ERROR,"[86, 85, 84, 84]"
List the number of keywords in the bottom 3 articles with the shortest headlines.,,,,ERROR,"[1, 1, 1]"
Enumerate the lengths of the headlines of the top 5 articles with the longest headlines.,,,,ERROR,"[96, 96, 95, 95, 95]"
Provide the number of keywords in the bottom 2 articles with the least number of keywords.,,,,ERROR,"[1, 1]"
Is the 'USA' the most common entry in the 'Geographies' column?,,,,ERROR,False
Are there any participants who are unemployed with a bachelor's degree from Africa?,,,,ERROR,False
Do all participants recommend Python as the first programming language?,,,,ERROR,False
Are there more than 1000 participants who hope to become familiar with AWS in the next 2 years?,,,,ERROR,False
How many unique job titles are represented in the dataset?,,,,ERROR,14
What's the median of the average number of years participants have used machine learning methods?,,,,ERROR,1.5
How many participants are from the United Kingdom?,,,,ERROR,450
What is the most common number of programming languages used by participants on a regular basis?,,,,ERROR,2
What's the most common computing platform used for data science projects?,,,,ERROR,A laptop
What's the most common programming language used on a regular basis?,"What is the single most recommended programming language for aspiring data scientists to learn initially, according to the survey respondents?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
most_recommended = dataset[""What programming language would you recommend an aspiring data scientist to learn first?""].mode()[0]

return most_recommended
",string,Python,Python
Which country has the second highest number of participants?,,,,ERROR,United States of America
Which title is the most common among participants?,,,,ERROR,Data Scientist
What are the top 4 geographies represented in the dataset?,,,,ERROR,"['India', 'USA', 'Western Europe', 'China - Japan - Korea']"
Name the top 3 general segments of participants.,Can you list the three most frequent values present in the General Segments column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
import pandas as pd

dataset = db
segment_counts = dataset['General Segments'].value_counts()
top_3_segments = segment_counts.head(3).index.tolist()
answer = ', '.join([str(seg) for seg in top_3_segments])

return answer
",string,"['Analysts'], ['Data Scientists'], ['Academics']","['Analysts', 'Data Scientists', 'Academics']"
list the top 4 most common job titles.,,,,ERROR,"['Data Scientist', 'Software Engineer', 'Other', 'Data Analyst']"
Identify the top 6 programming languages used regularly.,,,,ERROR,"['Python', 'SQL', 'R', 'Javascript', 'C++', 'Java']"
Report the top 4 age ranges of participants by frequency,,,,ERROR,"['25-29', '30-34', '22-24', '35-39']"
list the highest average 3 years of machine learning experience.,,,,ERROR,"[19.83, 19.74, 19.68]"
Identify the 5 highest yearly compensations.,,,,ERROR,"[1000000, 1000000, 1000000, 1000000, 1000000]"
Report the 5 most common sizes of the company where participants work.,,,,ERROR,"['0-49 employees', '10,000 or more employees', '1000-9,999 employees', '50-249 employees', '250-999 employees']"
Are there more reviews with rating 5 from 'GB' than 'US'?,What is the count of reviews with a rating of 5 from country code ‘GB’ compared to the count of reviews with a rating of 5 from country code ‘US’? Is the count for ‘GB’ greater than that of ‘US’?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
gb_reviews = dataset[(dataset['country_code'] == 'GB') & (dataset['rating'] == 5)]
us_reviews = dataset[(dataset['country_code'] == 'US') & (dataset['rating'] == 5)]

gb_count = len(gb_reviews)
us_count = len(us_reviews)

return gb_count > us_count
",bool,True,True
Is the average rating for 'Wise' in 'GB' above 4?,"What is the average rating for Company ‘Wise’ in country_code ‘GB’, and is it greater than 4?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
gb_wise_ratings = dataset[(dataset['Company'] == 'Wise') & (dataset['country_code'] == 'GB')]
avg_rating = gb_wise_ratings['rating'].mean()
is_greater_than_4 = avg_rating > 4

return is_greater_than_4
",bool,True,True
Do any reviews originate from 'AO'?,Are there any records in the dataset where the Company column has a value of 'AO'?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
company_ao_exists = db[db[""Company""] == ""AO""].shape[0] > 0

return company_ao_exists
",bool,False,True
Did any reviews receive a rating of 1?,Are there any records in the dataset where the rating is equal to 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
records_with_rating_1 = dataset[dataset[""rating""] == 1]
if len(records_with_rating_1) > 0:
return True
else:
return False
",bool,True,True
What's the total number of reviews for 'Wise'?,What is the sum of all review ratings where the Company column equals 'Wise'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
wise_reviews = dataset[dataset[""Company""] == ""Wise""]
sum_ratings = wise_reviews[""rating""].sum()

return sum_ratings
",int64,17667,3840
How many unique countries gave 'Wise' a rating of 5?,What is the count of distinct country codes where the rating for ‘Wise’ is equal to 5?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
wise_ratings = db[db['Company'] == 'Wise']
country_codes = wise_ratings[wise_ratings['rating'] == 5]['country_code'].unique()
count = len(country_codes)

return count
",int64,121,120
What is the highest rating received?,What is the maximum value present in the rating column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_rating = db[""rating""].max()

return max_rating
",uint8,5,5
What's the average rating across all reviews?,Calculate the mean of the rating column in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
mean_rating = db[""rating""].mean()

return mean_rating
",float64,4.097756000000000,4.097756000000000
Which company received the most 5-star reviews?,What is the name of the company with the highest count of reviews having a rating of 5?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
company_ratings = db[db['rating'] == 5]
company_counts = company_ratings['Company'].value_counts()
top_company = company_counts.idxmax()

return top_company
",string,Wise,Wise
From which country did 'Wise' receive the most reviews?,What is the country code associated with the highest count of reviews for the company named 'Wise'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
wise_reviews = dataset[dataset[""Company""] == ""Wise""]
country_counts = wise_reviews['country_code'].value_counts()
most_common_country = country_counts.idxmax()

return most_common_country
",string,GB,GB
Which country had the lowest representation in the reviews?,What is the country with the minimum number of reviews?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
country_review_counts = dataset.groupby('country_code')['body'].count()
min_review_country = country_review_counts.idxmin()

return min_review_country
",string,AI,CW
Which company received the lowest rating?,What is the name of the company with the minimum rating value?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
min_rating_company = db.loc[db[""rating""] == db[""rating""].min(), ""Company""].iloc[0]

return min_rating_company
",string,Wise,N26
Which are the top 3 countries with the most 5-star reviews for 'Wise'?,,,,ERROR,"['GB', 'US', 'ES']"
Which are the 2 companies represented in the dataset?,What are the distinct values present in the Company column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_companies = db[""Company""].unique()
list_of_companies = ['' + str(company) for company in distinct_companies]
return list_of_companies
",list of (string),"['Wise', 'N26']","['Wise', 'N26']"
Which are the bottom 4 countries in terms of review count? If two or more have the same number order them alphabetically.,"Retrieve the country codes corresponding to the 4 countries with the lowest review counts, sorting alphabetically in case of ties.","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
country_counts = db['Company'].value_counts().sort_values()
lowest_countries = country_counts.head(4).index.tolist()

return lowest_countries
",list of (string),"['Wise', 'N26']","['CW', 'FO', 'KZ', 'NE']"
What are the 3 most common countries? If two or more have the same number order them alphabetically.,,,,ERROR,"['GB', 'DE', 'FR']"
What are the 3 most common ratings?,Retrieve the top 3 most frequent values present in the rating column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
rating_counts = db['rating'].value_counts()
top_3_ratings = rating_counts.head(3).index.tolist()

return top_3_ratings
",list of (uint8),"[5, 1, 4]","[5, 1, 4]"
What are the 2 least common ratings?,Identify the two rating values that appear fewest times in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
rating_counts = db['rating'].value_counts().sort_values()
min_count = rating_counts.iloc[0]
least_frequent_ratings = [rating for rating, count in rating_counts.items() if count == min_count]

return least_frequent_ratings[:2]
",list of (uint8),[3],"[3, 2]"
What are the best 4 unique ratings given to 'Wise'?,Retrieve the top 4 distinct values from the rating column where the Company column equals 'Wise'.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
wise_ratings = db[db['Company'] == 'Wise']['rating'].unique()
top_4_ratings = sorted(wise_ratings)[:4]

return top_4_ratings
",list of (uint8),"[np.uint8(1), np.uint8(2), np.uint8(3), np.uint8(4)]","[5, 4, 2, 1]"
What are the bottom 5 unique ratings given to 'N26'?,,,,ERROR,"[1, 2, 3, 4, 5]"
Is there any customer with a PhD education level?,Does any customer have Education level equal to PhD?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
education_phd = db[db[""Education""] == ""PhD""]
has_phd = len(education_phd) > 0

return has_phd
",bool,True,True
Do we have any customers who are married?,Are there any customers whose Marital_Status is married?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
married_customers = db[db[""Marital_Status""] == ""Married""]
if len(married_customers) > 0:
return True
else:
return False
",bool,True,True
Is there any customer with income higher than 100000?,Does any customer in the dataset have an Income value greater than 100000?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
income_greater_than_100000 = db[db[""Income""] > 100000]
has_customer_with_high_income = len(income_greater_than_100000) > 0

return has_customer_with_high_income
",bool,True,True
Has any customer made more than 10 web purchases?,Are there any customers in the dataset whose NumWebPurchases value is greater than 10?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
customers_with_high_web_purchases = db[db[""NumWebPurchases""] > 10]
are_there_any = len(customers_with_high_web_purchases) > 0

return are_there_any
",bool,True,True
How many customers do we have in the dataset?,What is the total number of unique customer IDs present in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
unique_customer_ids = db['ID'].nunique()

return unique_customer_ids
",int64,2240,2240
What's the average income of our customers?,Calculate the mean of the Income column in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
income_mean = db[""Income""].mean()

return income_mean
",float64,52247.25135400000,52247.25135400000
What's the maximum number of web purchases made by a customer?,What is the highest value present in the NumWebPurchases column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
highest_web_purchases = db[""NumWebPurchases""].max()

return highest_web_purchases
",uint8,27,27
What's the minimum recency of purchase among the customers?,What is the smallest value found in the Recency column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
smallest_recency = db[""Recency""].min()

return smallest_recency
",uint8,0,0
What's the most common education level among our customers?,Which education level appears most frequently in the Education column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
education_counts = db['Education'].value_counts()
most_frequent_education = education_counts.index[0]

return most_frequent_education
",string,Graduation,Graduation
What's the most common marital status among our customers?,Which marital status value appears most frequently in the Marital_Status column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
value_counts = db['Marital_Status'].value_counts()
most_frequent_marital_status = value_counts.idxmax()

return most_frequent_marital_status
",string,Married,Married
Who is the customer with the highest income?,What is the name or ID of the customer with the maximum income?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_income_customer = db.loc[db[""Income""] == db[""Income""].max()]
customer_id = max_income_customer[""ID""].astype(str).iloc[0]

return customer_id
",string,9432,9432
Who is the customer with the most recent purchase?,Which customer has the latest Dt_Customer value?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
latest_customer = db.loc[db[""Dt_Customer""] == db[""Dt_Customer""].max(), ""ID""].iloc[0]

return latest_customer
",string,7300,4047
Who are the 3 customers with the highest income?,,,,ERROR,"[9432, 1503, 1501]"
What are the 2 most common education levels among our customers?,Identify the two most frequent values present in the Education column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
education_counts = db['Education'].value_counts()
most_frequent_values = education_counts.nlargest(2).index.tolist()

return most_frequent_values
",list of string,"['Graduation', 'PhD']","['Graduation', 'PhD']"
What are the 3 most common marital statuses among our customers?,Identify the top 3 most frequent values present in the Marital_Status column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
marital_status_counts = db['Marital_Status'].value_counts()
top_3_marital_statuses = marital_status_counts.head(3).index.tolist()

return top_3_marital_statuses
",list of string,"['Married', 'Together', 'Single']","['Married', 'Together', 'Single']"
Who are the 3 customers with the most web purchases?,Retrieve the IDs of the top 3 customers based on the number of web purchases they have made.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_3_customers = db.nlargest(3, 'NumWebPurchases')
ids = top_3_customers['ID'].tolist()

return ids
",list of (uint16),"[5255, 4619, 10311]","[5255, 4619, 10311]"
What are the top 3 income values among our customers?,Retrieve the three highest values from the Income column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_three_incomes = db['Income'].nlargest(3).tolist()

return top_three_incomes
",list of (float64),"[666666.0, 162397.0, 160803.0]","[666666.0, 162397.0, 160803.0]"
What are the top 2 recency values among our customers?,Retrieve the two highest values from the Recency column in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
recency_values = db[""Recency""].tolist()
sorted_recency = sorted(recency_values, reverse=True)
top_two_recency = sorted_recency[:2]

return top_two_recency
",list of (uint8),"[99, 99]","[99, 99]"
What are the bottom 3 income values among our customers?,Retrieve the three smallest values from the Income column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
smallest_incomes = db['Income'].nsmallest(3).tolist()

return smallest_incomes
",list of float64,"[1730.0, 2447.0, 3502.0]","[1730.0, 2447.0, 3502.0]"
What are the bottom 2 recency values among our customers?,Retrieve the two smallest values from the Recency column in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
recency_values = db[""Recency""].tolist()
recency_values.sort()
smallest_two_values = recency_values[:2]

return smallest_two_values
",list of (uint8),"[0, 0]","[0, 0]"
Is there any customer with a high salary?,Are there any employees whose salary is categorized as high?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
high_salary_exists = dataset[dataset['salary'] == 'High'].shape[0] > 0

return high_salary_exists
",bool,False,True
Do we have any employees who suffered a work accident?,"Are there any employees whose Work Accident attribute is not equal to ""No""?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
work_accident_not_no = dataset[dataset[""Work Accident""] != ""No""]
has_work_accident = len(work_accident_not_no) > 0

return has_work_accident
",bool,True,True
Is there any employee with more than 100 hours per month on average?,Are there any employees whose Average Monthly Hours value is greater than 100?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
hours_gt_100 = dataset[dataset[""Average Monthly Hours""] > 100]
result = len(hours_gt_100) > 0

return result
",bool,True,True
Does any employee have a satisfaction level above 0.9?,Are there any employees whose satisfaction level is greater than 0.9?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
satisfaction_gt_09 = dataset[dataset[""Satisfaction Level""] > 0.9]
result = len(satisfaction_gt_09) > 0

return result
",bool,True,True
How many employees do we have in the dataset?,What is the total count of individuals present within the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
total_count = len(dataset)

return total_count
",int64,14999,14999
What's the median satisfaction level of our employees?,,,,ERROR,0.64
What's the highest number of projects for a given employee?,What is the maximum value found in the Number of Projects column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_projects = dataset['Number of Projects'].max()

return max_projects
",float64,7,7
What's the most common marital status among the employees?,Which marital status appears most frequently within the Marital_Status column of the Employee dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
marital_status_counts = dataset['Marital_Status'].value_counts()
most_frequent_marital_status = marital_status_counts.idxmax()

return most_frequent_marital_status
",string,Together,Together
What's the most common education level among our employees?,Which education level appears most frequently within the salary column of the Employee dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
salary_education_levels = dataset['salary'].unique()
value_counts = dataset['salary'].value_counts()
most_frequent_education_level = value_counts.idxmax()

return most_frequent_education_level
",string,low,Graduation
What's the most common marital status in the database?,Which marital status value appears most frequently within the Marital_Status column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
marital_status_counts = dataset['Marital_Status'].value_counts()
most_frequent_marital_status = marital_status_counts.idxmax()

return most_frequent_marital_status
",string,Together,Married
"Among the employees who have left the company in sales, what's the most common salary level?",What is the most frequent salary value for employees whose Left attribute is sales?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sales_employees = dataset[dataset['Left'] == 'Sales']
salary_counts = sales_employees['salary'].value_counts()
most_frequent_salary = salary_counts.idxmax()

return most_frequent_salary
",category,low,low
"Among the employees who have had a work accident in sales, what's the most common salary level?",What is the most frequent salary value for employees whose Work Accident attribute is not null and who belong to the Sales department?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sales_employees = dataset[dataset['Department'] == 'Sales']
valid_accident_employees = sales_employees[sales_employees['Work Accident'] != 'N/A']
salary_counts = valid_accident_employees['salary'].value_counts()
most_frequent_salary = salary_counts.index[0]

return most_frequent_salary
",category,low,low
What are the top 3 satisfaction levels?,Retrieve the three highest values from the Satisfaction Level column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
highest_satisfaction = db['Satisfaction Level'].nlargest(3).tolist()

return highest_satisfaction
",list of (float64),"[1.0, 1.0, 1.0]","[1, 1, 1]"
What are the top 2 most common Work Accident statuses among our employees?,Identify the two most frequent values present in the Work Accident column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
value_counts = dataset['Work Accident'].value_counts()
most_frequent_values = value_counts.nlargest(2).index.tolist()

return most_frequent_values
",list of (string),"['No', 'Yes']","['No', 'Yes']"
What are the top 3 most common marital statuses among our employees?,,,,ERROR,"['Together', 'Single', 'Married']"
What are the highest 3 years spent in the company? ,Retrieve the top three largest values from the Years in the Company column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_three_years = db['Years in the Company'].nlargest(3).tolist()

return top_three_years
",list of (uint8),"[10, 10, 10]","[10, 10, 10]"
What are the 3 departments with more 'medium' salary levels?,Can you provide a list containing the names of the top 3 departments that have the highest number of employees with salary level marked as ‘medium’?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
medium_salary_employees = db[db['salary'] == 'medium']
department_counts = medium_salary_employees['Department'].value_counts().nlargest(3).index.tolist()

return department_counts
",list of (string),"['sales', 'technical', 'support']","['sales', 'technical', 'support']"
"For the 2 employees with the top satisfaction levels who belong to the sales department, what are their salary levels?",Identify the salary levels of the two employees with the highest satisfaction level who work in the sales department.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sales_employees = dataset[dataset['Department'] == 'Sales']
sorted_sales_employees = sales_employees.sort_values('Satisfaction Level', ascending=False)
top_two_salaries = sorted_sales_employees['salary'].head(2).tolist()

return top_two_salaries
",list of (float64),[],"['low', 'low']"
What are the top 3 average monthly hours worked among the employees in the top 3 departments with the most employees?,"Find the top three departments with the largest number of employees. Then, for each of those three departments, calculate the average monthly hours worked by the employees in that department. Finally, return a list containing these three average monthly hour values.","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
department_counts = db['Department'].value_counts()
top_three_departments = department_counts.nlargest(3).index.tolist()

average_monthly_hours = []
for department in top_three_departments:
dept_data = db[db['Department'] == department]
avg_hours = dept_data['Average Monthly Hours'].mean()
average_monthly_hours.append(avg_hours)

return average_monthly_hours
",list of (float64),"[np.float64(200.91135265700484), np.float64(202.49742647058824), np.float64(200.75818752803949)]","[200.91135265700484, 202.49742647058824, 200.75818752803949]"
What are the lowest 2 satisfaction levels among the employees who have not had a work accident?,Identify the two smallest values from the Satisfaction Level column for employees whose Work Accident attribute is not Yes.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_employees = dataset[dataset['Work Accident'] != 'Yes']
smallest_satisfaction_levels = filtered_employees['Satisfaction Level'].nsmallest(2).tolist()

return smallest_satisfaction_levels
",list of float64,"[0.09, 0.09]","[0.09, 0.09]"
"Is there any country with a Ladder score above 7.5, a Generosity score above 0.2, and a Social support score above 0.7?",,,,ERROR,True
"Are there any countries in Western Europe with a Perceptions of corruption score above 0.5, a Ladder score above 7, and a Social support score above 0.7?",,,,ERROR,True
Are there any countries in Western Europe with a Perceptions of corruption score above 0.5?,Is there at least one country categorized as Western Europe with a perceived level of corruption greater than 0.5?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
western_europe_countries = ['Austria', 'Belgium', 'Denmark', 'Finland', 'France', 'Germany', 'Iceland', 'Ireland', 'Luxembourg', 'Netherlands', 'Norway', 'Portugal', 'Spain', 'Sweden', 'Switzerland', 'United Kingdom']
filtered_data = db[db['Country name'].isin(western_europe_countries)]
corruption_greater_than_05 = filtered_data[filtered_data['Perceptions of corruption'] > 0.5]

if not corruption_greater_than_05.empty:
return True
else:
return False
",bool,True,True
Is there any country with a Social support score below 0.5?,,,,ERROR,True
What's the average Ladder score among the countries in Western Europe with a Generosity score above 0.2 and a Social support score above 0.7?,,,,ERROR,7.222675000000000
What's the average Perceptions of corruption score among the countries in Sub-Saharan Africa with a Ladder score below 5 and a Social support score below 0.5?,Calculate the mean value of the Perceptions of corruption column for countries located in Sub-Saharan Africa that have a Ladder score less than 5 and a Social support score less than 0.5?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
import pandas as pd

df = db

sub_saharan_africa_countries = df[df['Country name'].str.contains('Sub-Saharan Africa')]
filtered_df = sub_saharan_africa_countries[(sub_saharan_africa_countries['Ladder score'] < 5) & (sub_saharan_africa_countries['Social support'] < 0.5)]

mean_corruption = filtered_df['Perceptions of corruption'].mean()

return mean_corruption
",float64,,0.7493710000
What's the maximum Generosity score among the countries?,What is the highest value in the Generosity column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
highest_generosity = dataset[""Generosity""].max()

return highest_generosity
",float64,0.560664000,0.560664000
What's the minimum Social support score among the countries?,What is the smallest value in the Social support column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
smallest_social_support = dataset[""Social support""].min()

return smallest_social_support
",float64,0.319460000,0.319460000
Which region has the highest number of countries with a Ladder score above 7 and a Generosity score above 0.2?,What is the name of the region that has the largest count of countries where both the Ladder score and Generosity score exceed 7.0 and 0.2 respectively?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
filtered_countries = db[(db['Ladder score'] > 7.0) & (db['Generosity'] > 0.2)]
region_counts = filtered_countries.groupby('Regional indicator').size().reset_index(name='count')
max_region = region_counts.loc[region_counts['count'].idxmax(), 'Regional indicator']

return max_region
",string,Western Europe,Western Europe
Which region accounts for the most countries with a Generosity score above 0.2?,What is the regional indicator that corresponds to the highest count of countries where the Generosity score exceeds 0.2?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
generosity_above_threshold = db[db['Generosity'] > 0.2]
regional_indicator_counts = generosity_above_threshold.groupby('Regional indicator').size().reset_index(name='count')
max_count_region = regional_indicator_counts.loc[regional_indicator_counts['count'].idxmax(), 'Regional indicator']

return max_count_region
",string,Western Europe,Western Europe
In which region are the majority of countries with a Perceptions of corruption score below 0.5 located?,What is the most frequent Regional indicator for countries where the Perceptions of corruption score is less than 0.5?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
filtered_data = db[db['Perceptions of corruption'] < 0.5]
regional_indicators = filtered_data['Regional indicator'].value_counts()
most_frequent_indicator = regional_indicators.idxmax()

return most_frequent_indicator
",string,Western Europe,Western Europe
In which region can you find the majority of countries with a Social support score above 0.7?,What is the regional indicator that appears most frequently among countries with a Social support score greater than 0.7?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
filtered_data = db[db['Social support'] > 0.7]
regional_indicators = filtered_data['Regional indicator'].value_counts()
most_frequent_indicator = regional_indicators.idxmax()

return most_frequent_indicator
",string,Western Europe,Western Europe
Can you name the three regions that have the most countries with a Ladder score above 7 and a Generosity score above 0.2?,,,,ERROR,['Western Europe']
What are the top 3 regions with the most countries with a Generosity score above 0.2?,"Identify the three regions that have the highest count of countries where the Generosity score is greater than 0.2, and return those region names.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
generosity_above_threshold = dataset[dataset['Generosity'] > 0.2]
region_counts = generosity_above_threshold['Regional indicator'].value_counts().nlargest(3).index.tolist()

return region_counts
",list of (category),"['Western Europe', 'Southeast Asia', 'Sub-Saharan Africa']","['Western Europe', 'Southeast Asia', 'Sub-Saharan Africa']"
Identify the three highest Ladder scores from countries in Western Europe that have a Generosity score above 0.2 and a Social support score above 0.7.,,,,ERROR,"[7.504499912, 7.448900223, 7.164500237]"
What are the top 3 Perceptions of corruption scores among the countries in Sub-Saharan Africa?,Retrieve the three highest values from the column named 'Perceptions of corruption' for rows where 'Regional indicator' is equal to 'Sub-Saharan Africa'.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
sub_saharan_africa = db[db['Regional indicator'] == 'Sub-Saharan Africa']
corruption_values = sub_saharan_africa['Perceptions of corruption'].tolist()
top_three = sorted(corruption_values, reverse=True)[:3]

return top_three
",list of (float64),"[0.891806662, 0.861874342, 0.861330688]","[0.891806662, 0.861874342, 0.861330688]"
What are the top 3 Generosity scores among the countries in Western Europe?,,,,ERROR,"[0.263732493, 0.246944219, 0.214965805]"
What are the top 3 Social support scores among the countries in Sub-Saharan Africa?,,,,ERROR,"[0.910357833, 0.852532268, 0.846880972]"
Which are the three lowest Ladder scores in Western Europe?,What are the three smallest values in the Ladder score column for rows where the Country name is located within Western Europe?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
western_europe_countries = ['Austria', 'Belgium', 'Denmark', 'Finland', 'France', 'Germany', 'Iceland', 'Ireland', 'Luxembourg', 'Netherlands', 'Norway', 'Portugal', 'Spain', 'Sweden', 'Switzerland', 'United Kingdom']
filtered_df = db[db['Country name'].isin(western_europe_countries)]
smallest_ladder_scores = filtered_df['Ladder score'].nsmallest(3).tolist()

return smallest_ladder_scores
",list of (float64),"[5.910900116, 6.400899887, 6.663799763]","[5.514999866, 5.53550005, 5.910900116]"
Which are the three lowest Perceptions of corruption scores in Sub-Saharan Africa?,"What are the three smallest values in the Perceptions of corruption column, restricted to rows where the Regional indicator is Sub-Saharan Africa?","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
sub_saharan_africa = db[db['Regional indicator'] == 'Sub-Saharan Africa']
corruption_values = sub_saharan_africa['Perceptions of corruption'].tolist()
smallest_three = sorted(corruption_values)[:3]

return smallest_three
",list of (float64),"[0.183541179, 0.606934547, 0.619799435]","[0.183541179, 0.606934547, 0.619799435]"
Is the song with the highest rank from 1965?,Does the song with the lowest rank value have a Year equal to 1965?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
lowest_rank_song = db.loc[db[""Rank""] == db[""Rank""].min()]
year_of_lowest_rank_song = lowest_rank_song[""Year""].iloc[0]

if year_of_lowest_rank_song == 1965:
return True
else:
return False
",bool,True,True
Does the song with the lowest rank contain the word 'love' in its lyrics?,Is there a song with the minimum rank value whose lyrics contain the substring 'love'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_rank_song = dataset.loc[dataset[""Rank""] == dataset[""Rank""].min()]
lyrics = min_rank_song[""Lyrics""].str.contains('love')

return lyrics.any()
",bool,True,True
Is the artist of the song with the highest rank the same as the artist of the song with the lowest rank?,Do the songs with the highest and lowest Rank values share the same Artist?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
highest_rank_song = dataset.loc[dataset[""Rank""] == dataset[""Rank""].max()]
lowest_rank_song = dataset.loc[dataset[""Rank""] == dataset[""Rank""].min()]

artist_highest_rank = highest_rank_song[""Artist""].iloc[0]
artist_lowest_rank = lowest_rank_song[""Artist""].iloc[0]

return artist_highest_rank == artist_lowest_rank
",bool,False,False
Are there songs without lyrics?,Are there any songs in the dataset where the Lyrics attribute is null or empty?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
null_or_empty_lyrics = db[db['Lyrics'].isnull() | (db['Lyrics'] == '')]
result = len(null_or_empty_lyrics) > 0

return result
",bool,True,True
How many songs were produced in 1965?,What is the count of songs that have a year value equal to 1965?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
songs_in_1965 = db[db[""Year""] == 1965]
count = len(songs_in_1965)

return count
",int64,100,100
In which year was the song with the highest rank produced?,What is the year associated with the song that has the minimum rank value?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
min_rank_song = db.loc[db[""Rank""] == db[""Rank""].min()]
year = min_rank_song[""Year""].iloc[0]

return year
",uint16,1965,1965
What's the rank of the song with the longest lyrics?,What is the Rank value corresponding to the song having the maximum length of Lyrics?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_lyrics_song = db.loc[db[""Lyrics""].str.len() == db[""Lyrics""].str.len().max()]
rank = max_lyrics_song[""Rank""].iloc[0]

return rank
",uint8,19,19
How many unique artists are there in the dataset?,What is the count of distinct values present in the Artist column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_artists = db[""Artist""].nunique()

return distinct_artists
",int64,2473,2473
Who is the artist of the song with the highest rank?,What is the artist associated with the song that has the lowest rank value?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
lowest_rank_song = db.loc[db[""Rank""] == db[""Rank""].min()]
artist = lowest_rank_song[""Artist""].iloc[0]

return artist
",string,sam the sham and the pharaohs,sam the sham and the pharaohs
What is the title of the song with the lowest rank?,,,,ERROR,how sweet it is to be loved by you
Which song's lyrics contain the word 'love' the most times?,Identify the song title from the dataset that has the highest occurrence of the word 'love' within its lyrics.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
import pandas as pd

# Count occurrences of ""love"" in each song's lyrics
db['love_count'] = db['Lyrics'].str.lower().str.count('love')

# Find the song with the highest occurrence of ""love""
max_love_song = db.loc[db['love_count'] == db['love_count'].max(), 'Song'].iloc[0]

return max_love_song
",string,the way you love me,the way you love me
What is the title of the top song produced in the earliest year?,What is the song title corresponding to the lowest year value in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
lowest_year = db[""Year""].min()
song_title = db[db[""Year""] == lowest_year][""Song""].iloc[0]

return song_title
",string,wooly bully,wooly bully
Who are the artists of the top 5 ranked songs?,What are the names of the artists associated with the songs holding the top 5 positions in the ranking?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_5_songs = dataset.head(5)
artists = top_5_songs['Artist'].tolist()

return artists
",list of string,"['sam the sham and the pharaohs', 'four tops', 'the rolling stones', 'we five', 'the righteous brothers']","['sam the sham and the pharaohs', 'ssgt barry sadler', 'the beach boys', 'the beatles', 'the beatles']"
What are the titles of the 3 songs with the shortest lyrics?,Return a list containing the titles of the top 3 songs with the minimum length lyrics.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
df = db
min_lyrics_length = df['Lyrics'].str.len().min()
top_3_songs = df[df['Lyrics'].str.len() == min_lyrics_length]['Song'].head(3).tolist()

return top_3_songs
",list of string,"['girl youll be a woman soon', 'papa dont preach']","['girl youll be a woman soon', 'papa dont preach', 'breathe']"
What are the top 4 songs by rank produced in the most recent year?,Retrieve the names of the four songs with the lowest rank values from the year with the highest value in the Year column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_year = db[""Year""].max()
songs_in_max_year = db[db[""Year""] == max_year]
songs_with_lowest_rank = songs_in_max_year.sort_values(by=""Rank"")[""Song""].head(4).tolist()

return songs_with_lowest_rank
",list of (string),"['uptown funk', 'thinking out loud', 'see you again', 'trap queen']","['uptown funk', 'thinking out loud', 'see you again', 'trap queen']"
Who are the artists of the bottom 5 ranked songs?,Retrieve the names of the artists corresponding to the songs with the 5 highest Rank values.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_5_songs = db.sort_values(by=""Rank"", ascending=True).head(5)
artists = top_5_songs[""Artist""].tolist()

return artists
",list of string,"['sam the sham and the pharaohs', 'elton john', 'prince', 'simon  garfunkel', 'adele']","['marvin gaye', 'wilson pickett', 'neil diamond', 'jerry butler', 'the beatles']"
What are the ranks of the top 3 songs with the most occurrences of the word 'love' in their lyrics?,Retrieve the ranks of the three songs having the highest love_count values in the Billboard dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_three_songs = dataset.nlargest(3, 'love_count')
ranks = top_three_songs['Rank'].tolist()

return ranks
",list of (uint8),"[64, 66, 41]","[64, 41, 28]"
What are the years of production of the bottom 4 ranked songs?,Retrieve the years corresponding to the songs with the lowest 4 ranks in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
lowest_four_ranks = db.nlargest(4, 'Rank')
years = lowest_four_ranks['Year'].tolist()

return years
",list of (uint16),"[1965, 1966, 1967, 1968]","[1965, 1966, 1967, 1968]"
What are the ranks of the 2 songs produced in the earliest year?,Retrieve the Rank values for the two songs that were released in the year with the lowest value in the Year column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
min_year = db[""Year""].min()
songs_in_min_year = db[db[""Year""] == min_year]
ranks = songs_in_min_year[""Rank""].tolist()

return ranks
",list of (uint8),"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]","[1, 2]"
What are the years of production of the top 5 songs with the longest lyrics?,,,,ERROR,"[1998, 2009, 2010, 2007, 2002]"
Is the song with the highest rank from 1965 by the Beatles?,,,,ERROR,False
Which artist has the song with the highest rank in 1965?,What is the name of the artist associated with the song that has the lowest rank value in the year 1965?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
df = db.copy()
song_1965 = df[df['Year'] == 1965]
lowest_rank_song = song_1965.loc[song_1965['Rank'].idxmin()]
artist_name = lowest_rank_song['Artist']

return artist_name
",string,sam the sham and the pharaohs,sam the sham and the pharaohs
Who are the artists of the top 3 songs in 1965?,,,,ERROR,"['sam the sham and the pharaohs', 'four tops', 'the beach boys']"
What are the years of production of the top 3 songs with the word 'love' in their lyrics by the Beatles?,Retrieve the years in which the top 3 Beatles songs containing the word 'love' in their lyrics were produced?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
beatles_songs = db[db['Artist'] == 'The Beatles']
love_songs = beatles_songs[beatles_songs['Lyrics'].str.contains('love', case=False)]
top_3_love_songs = love_songs.nlargest(3, 'Rank')
years = top_3_love_songs['Year'].tolist()

return years
",list of (uint16),[],"[1967, 1965, 1966]"
"Are there records where the 'count' exceeds 20,000?","Does the dataset contain any rows where the value in the 'count' column is greater than 20,000?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
count_greater_than_20000 = dataset[dataset[""count""] > 20000]
if len(count_greater_than_20000) > 0:
return True
else:
return False
",bool,True,True
Do we have any records originating from 'Jefferson'?,Are there any records where the name_origin column contains the value 'Jefferson'?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
jefferson_exists = db[db[""name_origin""] == ""Jefferson""].shape[0] > 0

return jefferson_exists
",bool,True,True
Are there destinations with the name 'Baldwin'?,Does the name_dest column contain the string 'Baldwin'?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
contains_baldwin = db['name_dest'].str.contains('Baldwin').any()

return contains_baldwin
",bool,True,True
Are there records where the latitude of the destination is greater than 60?,Does the dataset contain any entries where the lat_dest value is greater than 60?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
greater_than_60 = db[db[""lat_dest""] > 60]
if len(greater_than_60) > 0:
return True
else:
return False
",bool,True,True
How many unique destinations are there in the dataset?,What is the number of distinct values present in the name_dest column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_values = db['name_dest'].nunique()

return distinct_values
",int64,1905,3219
"On average, how many times is each origin-destination pair reported?",Calculate the mean of the count values grouped by unique combinations of origin and destination.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
grouped = db.groupby(['name_origin', 'name_dest'])['count'].mean()
answer = grouped.mean()

return answer
",float64,60.56884900000000,67.7453800000000
What's the highest count value in the dataset?,What is the maximum value of the count column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_count = db[""count""].max()

return max_count
",uint16,40580,40580
How many unique origin names are there in the dataset?,What is the number of distinct values present in the origin column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_origins = db['origin'].nunique()

return distinct_origins
",int64,3219,1904
From which origin do we have the highest 'count' recorded?,What is the value of the 'name_origin' category that corresponds to the maximum 'count' in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_count = dataset[""count""].max()
corresponding_name_origin = dataset.loc[dataset[""count""] == max_count, ""name_origin""].iloc[0]

return corresponding_name_origin
",string,,
To which destination do we find the highest 'count' reported?,What is the value of name_dest that corresponds to the maximum count?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_count_row = db[db['count'] == db['count'].max()]
name_dest_value = max_count_row['name_dest'].iloc[0]

return name_dest_value
",string,Los Angeles,Los Angeles
Which origin has the lowest latitude?,What is the minimum value of lat_origin among all origins?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
min_lat_origin = db[""lat_origin""].min()

return min_lat_origin
",float64,17.98805700,Guáanica
Which destination has the highest longitude?,What is the maximum value of lon_dest among all destinations?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_lon_dest = db[""lon_dest""].max()

return max_lon_dest
",float64,-065.68138300,Fajardo
What are the 3 origins with the highest average count?,,,,ERROR,"['Los Angeles', 'New York', 'San Francisco']"
Which are the 4 destinations with the lowest average count?,Identify the four destinations with the smallest average count value.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
avg_count = db.groupby('name_dest')['count'].mean().sort_values()
four_smallest = avg_count.head(4).index.tolist()

return four_smallest
",list of (string),"['Kalawao', 'Loving', 'Kenedy', 'Wheatland']","['Kalawao', 'Loving', 'Kenedy', 'Wheatland']"
List the 5 origins with the highest average latitude values.,What are the top 5 name_origin values when ordered by their corresponding average lat_origin?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
avg_lat = db.groupby('name_origin')['lat_origin'].mean().sort_values(ascending=False).head(5)
top_origins = list(avg_lat.index)

return top_origins
",list of (string),"['North Slope', 'Northwest Arctic', 'Yukon-Koyukuk', 'Nome', 'Fairbanks North Star']","['North Slope', 'Northwest Arctic', 'Yukon-Koyukuk', 'Nome', 'Fairbanks North Star']"
Which 2 origins have the lowest non-null average longitude values?,,,,ERROR,"['Aleutians West', 'Nome']"
List the highest 5 count values.,What are the 5 largest values in the count column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
largest_counts = db['count'].nlargest(5).tolist()
return largest_counts
",list of (uint16),"[40580, 39899, 38430, 28524, 24452]","[40580, 39899, 38430, 28524, 24452]"
What are the 3 highest latitude values for destinations?,Retrieve the top 3 largest values from the lat_dest column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_3_lat_dest = db['lat_dest'].nlargest(3).tolist()

return top_3_lat_dest
",list of float64,"[69.42718361, 69.42718361, 69.42718361]","[69.42718361, 69.42718361, 69.42718361]"
Rank the lowest 4 longitude values for origins.,What are the four smallest values in the origin longitude column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
origin_longitudes = db[""lon_origin""].tolist()
origin_longitudes.sort()
smallest_four = origin_longitudes[:4]

return smallest_four
",list of (float64),"[-159.7370692, -156.967295, -156.967295, -156.967295]","[-167.08526, -167.08526, -167.08526, -167.08526]"
Which 6 destination IDs have the highest average counts?,What are the 6 destination IDs associated with the largest average count values?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
avg_count = db.groupby('name_dest')['count'].mean().sort_values(ascending=False)
top_6_destinations = avg_count.head(6).index.tolist()
destination_ids = [db[db['name_dest'] == dest]['dest'].iloc[0] for dest in top_6_destinations]

return destination_ids
",list of (uint32),"[np.uint32(6037), np.uint32(36061), np.uint32(6071), np.uint32(6085), np.uint32(13145), np.uint32(36081)]","[6037, 36061, 48201, 6059, 6071, 6085]"
Are there talks with more than a million views?,Is there any talk in the dataset with a view count greater than 1000000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
view_count_greater_than_million = dataset[dataset[""views""] > 1000000]
if len(view_count_greater_than_million) > 0:
return True
else:
return False
",bool,True,True
Is there a talk by 'Elon Musk'?,Does the title column contain the string 'Elon Musk'?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
contains_elon = db[""title""].str.contains(""Elon Musk"").any()

return contains_elon
",bool,False,True
Are there any TEDx events included?,Does the dataset contain any entries where the event category has a TEDx value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
tedx_exists = dataset[dataset[""event""] == ""TEDx""].shape[0] > 0

return tedx_exists
",bool,False,True
Are there talks available in more than 10 languages?,,,,ERROR,True
How many unique speakers are there in the dataset?,What is the count of distinct values present in the all_speakers column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_speakers = db[""all_speakers""].nunique()

return distinct_speakers
",int64,3306,3274
What's the average number of views for the talks?,Calculate the mean of the views column in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
mean_views = db[""views""].mean()

return mean_views
",float64,2148005.5737830000,2148005.5737830000
What's the maximum duration of a talk (in seconds)?,What is the highest value in the duration column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
highest_duration = db[""duration""].max()

return highest_duration
",uint16,3922,3922
How many talks have more than 500 comments?,What is the count of talks where the comments value exceeds 500?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
filtered_talks = db[db[""comments""] > 500]
count = len(filtered_talks)

return count
",int64,186,186
Which event has the highest average views?,What is the event name associated with the highest average views across all talks?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
avg_views_per_event = db.groupby('event')['views'].mean().reset_index()
max_avg_views_event = avg_views_per_event.loc[avg_views_per_event['views'].idxmax()]

return max_avg_views_event['event']
",string,TEDxPuget Sound,TEDxPuget Sound
Which speaker's talk has the most comments?,Return the speaker name associated with the talk that has the highest number of comments.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
talk_with_highest_comments = db.loc[db[""comments""] == db[""comments""].max()]
speaker_name = talk_with_highest_comments[""speaker_1""].iloc[0]

return speaker_name
",string,Richard Dawkins,Richard Dawkins
Which talk's title has the least views?,What is the title of the talk with the minimum number of views?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
min_views_talk = db.loc[db[""views""] == db[""views""].min(), ""title""].iloc[0]

return min_views_talk
",string,Por qué necesitamos proteger el alta mar,Por qué necesitamos proteger el alta mar
In which event was the longest talk held?,What is the name of the event that contains a talk with the maximum duration?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_duration = db[""duration""].max()
talk_with_max_duration = db[db[""duration""] == max_duration]
event_name = talk_with_max_duration[""event""].iloc[0]

return event_name
",string,Countdown,Countdown
Which are the top 4 events with the highest average number of comments?,What are the titles of the four events that have the largest average number of comments?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
avg_comments_per_event = dataset.groupby('event')['comments'].mean().sort_values(ascending=False).head(4)
titles = avg_comments_per_event.index.tolist()

return titles
",list of (string),"['TEDxPuget Sound', 'TEDxHouston', 'TEDxFiDiWomen', 'TEDxUW']","['TEDxPuget Sound', 'TEDxHouston', 'TEDxFiDiWomen', 'TEDxUW']"
List the top 3 most frequent speakers in the dataset. If two have the same count go by alphabetical order. ,,,,ERROR,"['Alex Gendler', 'Iseult Gillespie', 'Emma Bryce']"
Which 5 events have the shortest average talk durations?,What are the titles of the 5 events with the smallest average talk duration?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
avg_duration_per_event = db.groupby('event')['duration'].mean().sort_values()
smallest_5_events = avg_duration_per_event.head(5).index.tolist()
titles = db[db['event'].isin(smallest_5_events)]['title'].tolist()

return titles
",list of (string),"['How to use a paper towel', 'Dance, tiny robots!', 'How the button changed fashion', 'The genius of the London Tube Map', 'Why the pencil is perfect', 'How the progress bar keeps you sane', 'How the jump rope got its rhythm', 'The 3,000-year history of the hoodie', 'The hidden ways stairs shape your life', 'How the hyperlink changed everything', 'Why working from home is good for business', '8 lessons on building a company people enjoy working for', '3 psychological tricks to help you save money', 'Why you should bring your whole self to work', '7 common questions about workplace romance', 'How to make applying for jobs less painful', 'This is the side hustle revolution', 'This is what makes employees happy at work', 'How one team turned a sprint project into a marathon success', '3 things new parents should consider before going back to work', ""How to know if it's time to change careers\t"", '5 ways to create stronger connections', '6 ways to improve your relationship with money', 'How to make faster decisions', 'The secret to giving great feedback', 'How burnout makes us less creative', 'How to embrace emotions at work', 'The function and fashion of eyeglasses', 'How the compass unlocked the world', 'Why pasta comes in all shapes and sizes', 'Why 1.5 billion people eat with chopsticks', 'The power of the Afro pick', 'Why books are here to stay', 'The evolution of the coffee cup lid', 'How surfboards connect us to nature', 'How can we control the coronavirus pandemic?']","['TEDxConcorde', 'Small Thing Big Idea', 'The TED Interview', 'TEDxConcordiaUPortland', 'The Way We Work']"
List 2 events with the most number of talks.,What are the names of the top 2 events that have the highest number of talks associated with them?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
event_counts = dataset['event'].value_counts().nlargest(2).index.tolist()

return event_counts
",list of (string),"['TED-Ed', 'TED2018']","['TED-Ed', 'TED2018']"
What are the top 4 most viewed talks' view counts?,Retrieve the view counts for the four talks with the highest number of views.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_four_views = dataset.nlargest(4, 'views')['views'].tolist()

return top_four_views
",list of (uint32),"[65051954, 57074270, 56932551, 49730580]","[65051954, 57074270, 56932551, 49730580]"
List the 3 shortest talk durations in the dataset.,What are the three smallest values in the talk duration column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
smallest_durations = sorted(db['duration'].tolist())[:3]

return smallest_durations
",list of (uint16),"[60, 78, 78]","[60, 78, 78]"
What are the 5 highest number of comments?,Retrieve the 5 largest values from the comments column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
largest_comments = db['comments'].nlargest(5).tolist()

return largest_comments
",list of (float64),"[6449.0, 4931.0, 3424.0, 3006.0, 2984.0]","[6449.0, 4931.0, 3424.0, 3006.0, 2984.0]"
List the view counts of the 6 least viewed talks.,"What are the view counts for the talks sorted in ascending order based on their views, and return the first 6 entries?","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
sorted_talks = db.sort_values(by='views')
first_six_views = sorted_talks['views'].head(6).tolist()

return first_six_views
",list of uint32,"[0, 0, 0, 0, 0, 0]","[0, 0, 0, 0, 0, 0]"
Is it true that the oldest person in the dataset has a stroke?,,,,ERROR,True
Do all smokers have hypertension?,,,,ERROR,False
Are all people with heart diseases married?,Is every individual identified as having heart disease also marked as ever married?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
heart_disease_patients = db[db[""heart_disease""] == 1]
ever_married_patients = heart_disease_patients[heart_disease_patients[""ever_married""] == ""yes""]

if len(heart_disease_patients) == 0:
return True  # If no one has heart disease, the statement is vacuously true.
elif len(ever_married_patients) == len(heart_disease_patients):
return True
else:
return False
",bool,False,False
Is the average glucose level higher for males than females?,Calculate the average glucose level for males and females separately. Is the average glucose level of males greater than that of females?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
male_glucose = db[db[""gender""] == ""Male""][""avg_glucose_level""].mean()
female_glucose = db[db[""gender""] == ""Female""][""avg_glucose_level""].mean()

is_male_greater = male_glucose > female_glucose

return is_male_greater
",bool,True,True
How many people in the dataset have a stroke?,What is the total count of individuals whose stroke attribute is equal to 1?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
stroke_count = db[db[""stroke""] == 1].shape[0]

return stroke_count
",int64,249,249
What is the average age of people who smoke?,Calculate the mean of the age column for individuals whose smoking status is specified in the smoking_status column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
age_smoking = db[db[""smoking_status""] != 'Never']
mean_age = age_smoking['age'].mean()

return mean_age
",float64,44.195796000000000,47.09632400000000
What is the highest glucose level recorded in the dataset?,What is the maximum value in the avg_glucose_level column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_avg_glucose = db[""avg_glucose_level""].max()

return max_avg_glucose
",float64,271.74,271.74
How many unique 'work_type' categories are there in the dataset?,What is the number of distinct values present in the work_type column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_work_types = db[""work_type""].nunique()

return distinct_work_types
",int64,5,5
What is the most common work type among stroke patients?,Which work type appears most frequently in the work_type column for patients with stroke?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
stroke_patients = dataset[dataset[""stroke""] == 1]
work_type_counts = stroke_patients[""work_type""].value_counts()
most_frequent_work_type = work_type_counts.idxmax()

return most_frequent_work_type
",string,Private,Private
What is the smoking status of the youngest person in the dataset?,Retrieve the value of smoking_status for the individual with the minimum age in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
min_age_individual = db.loc[db[""age""] == db[""age""].min()]
smoking_status = min_age_individual[""smoking_status""].iloc[0]

return smoking_status
",string,Unknown,Unknown
What is the residence type of the person with the highest BMI?,What is the value of Residence_type for the individual with the maximum BMI?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_bmi_individual = db.loc[db[""bmi""] == db[""bmi""].max()]
residence_type = max_bmi_individual[""Residence_type""].iloc[0]

return residence_type
",string,Rural,Rural
What is the gender of the person with the lowest glucose level?,Can you identify the gender of the individual who has the minimum avg_glucose_level?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
min_glucose_individual = db.loc[db[""avg_glucose_level""] == db[""avg_glucose_level""].min()]
gender = min_glucose_individual[""gender""].iloc[0]

return gender
",category,Female,Female
What are the top 3 work types among people with heart diseases?,Retrieve the three most frequent values present in the work_type column for individuals identified as having heart disease.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
heart_disease_individuals = db[db[""heart_disease""] == 1]
work_type_counts = heart_disease_individuals[""work_type""].value_counts()
most_frequent_work_types = work_type_counts.head(3).index.tolist()

return most_frequent_work_types
",string,"['Private', 'Self-employed', 'Govt_job']","['Private', 'Self-employed', 'Govt_job']"
What are the 5 most common smoking statuses among people with a stroke?,Identify the top 5 most frequent values in the smoking_status column for rows where stroke is equal to 1.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
stroke_patients = dataset[dataset['stroke'] == 1]
smoking_status_counts = stroke_patients['smoking_status'].value_counts()
top_5_smoking_statuses = smoking_status_counts.head(5).index.tolist()

return top_5_smoking_statuses
",string,"['never smoked', 'formerly smoked', 'Unknown', 'smokes']","['never smoked', 'formerly smoked', 'Unknown', 'smokes']"
What are the top 2 residence types of people with hypertension?,Identify the two most frequent values in the Residence_type column for individuals who have hypertension.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
hypertension_patients = db[db[""hypertension""] == 1]
residence_type_counts = hypertension_patients[""Residence_type""].value_counts()
most_frequent_residences = residence_type_counts.head(2).index.tolist()

return most_frequent_residences
",list of (string),"['Rural', 'Urban']","['Rural', 'Urban']"
What are the top 2 work types among people who have never married?,Identify the two most frequent work types for individuals whose marital status is never married.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
never_married = db[db[""ever_married""] == ""never married""]
work_type_counts = never_married[""work_type""].value_counts()
most_frequent_work_types = work_type_counts.head(2).index.tolist()

return most_frequent_work_types
",list of string,"['Private', 'Self-employed']","['Private', 'children']"
What are the oldest 5 ages of people with strokes?,Retrieve the top 5 highest values from the age column for individuals who have experienced a stroke.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
stroke_patients = db[db[""stroke""] == 1]
top_5_ages = stroke_patients['age'].nlargest(5).tolist()

return top_5_ages
",list of (float64),"[82.0, 82.0, 82.0, 82.0, 82.0]","[82.0, 82.0, 82.0, 82.0, 82.0]"
What are the 3 lowest BMIs among people who smoke?,Retrieve the three smallest values from the bmi column for all rows where smoking_status is not null.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
smoking_status_not_null = dataset[dataset[""smoking_status""].notna()]
smallest_bmi_values = smoking_status_not_null['bmi'].nsmallest(3).tolist()

return smallest_bmi_values
",list of float64,"[10.3, 11.3, 11.5]","[15.7, 16.7, 16.7]"
What are the top 4 glucose levels of people who have heart diseases?,Retrieve the four highest values from the avg_glucose_level column for individuals identified as having heart disease.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
heart_disease_individuals = dataset[dataset[""heart_disease""] == 1]
top_four_glucose_levels = heart_disease_individuals.nlargest(4, 'avg_glucose_level')['avg_glucose_level'].tolist()

return top_four_glucose_levels
",list of float64,"[271.74, 254.63, 254.6, 252.72]","[271.74, 254.63, 254.6, 252.72]"
What are the 6 highest ages of people who have never married?,"Retrieve the top 6 largest values from the age column, considering only individuals whose ever_married attribute is not married.","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
not_married = db[db[""ever_married""] != ""Married""]
top_6_ages = not_married['age'].nlargest(6).tolist()

return top_6_ages
",list of (float64),"[82.0, 82.0, 82.0, 82.0, 82.0, 82.0]","[82.0, 82.0, 82.0, 82.0, 82.0, 82.0]"
Are there any reflections with more than 10 sentences?,Is there any reflection in the dataset where the number of sentences is greater than 10?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
sentences_gt_10 = db[db[""num_sentence""] > 10]
exists = not sentences_gt_10.empty

return exists
",bool,True,True
Is there a reflection from 'USA' with over 5 sentences?,Are there any records where the country is 'USA' and the number of sentences in the cleaned_hm field is greater than 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_records = dataset[(dataset['country'] == 'USA') & (dataset['num_sentence'] > 5)]
if len(filtered_records) > 0:
return True
else:
return False
",bool,True,True
Are there any reflections categorized as 'affection'?,Does the dataset contain any rows where the ground_truth_category is equal to 'affection'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
contains_affection = ('affection' in dataset['ground_truth_category'].unique())

return contains_affection
",bool,True,True
Are there any married individuals who reflected on 'exercise'?,Do any individuals with marital status other than unmarried reflect on the topic of 'exercise'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
married_individuals = dataset[(dataset['marital'] != 'unmarried')]
exercise_reflection = married_individuals[married_individuals['reflection_period'] == 'exercise']

return len(exercise_reflection) > 0
",bool,False,True
How many unique reflection periods are there?,What is the number of distinct values present in the reflection_period column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_values = db[""reflection_period""].nunique()

return distinct_values
",int64,2,2
"On average, how many sentences are there in the reflections?",What is the mean value of the num_sentence column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
mean_num_sentence = dataset[""num_sentence""].mean()

return mean_num_sentence
",float64,1.3407670000000000,1.3407670000000000
What's the highest age of an individual in the dataset?,What is the maximum value found in the age column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_age = db[""age""].max()

return max_age
",float64,233.0,233.0
How many reflections are from 'IND'?,What is the count of reflections where the country attribute equals 'IND'?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
filtered_reflections = db[db['country'] == 'IND']
count = len(filtered_reflections)

return count
",int64,16729,16729
Which country has the highest average number of sentences in their reflections?,Calculate the average of num_sentence for each country and identify the country with the highest calculated average.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
country_avg = db.groupby('country')['num_sentence'].mean()
highest_avg_country = country_avg.idxmax()
average_num_sentence = country_avg.max()

return average_num_sentence
",float64,8.333333000000000,UKR
Which gender has the most reflections categorized as 'affection'?,What is the gender that appears most frequently in the dataset for reflections where the ground truth category is 'affection'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
affection_reflections = dataset[dataset[""ground_truth_category""] == ""affection""]
gender_counts = affection_reflections[""gender""].value_counts()
most_frequent_gender = gender_counts.idxmax()

return most_frequent_gender
",string,m,f
From which country is the oldest individual who reflected?,What is the country of origin for the person with the highest age value?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
oldest_person = db.loc[db[""age""] == db[""age""].max()]
country = oldest_person[""country""].iloc[0]

return country
",string,USA,USA
Which marital status has the most reflections on 'bonding'?,What is the most frequent marital status category when considering the 'bonding' aspect as reflected in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
marital_counts = db['marital'].value_counts()
most_frequent_marital = marital_counts.idxmax()

return most_frequent_marital
",string,single,single
Which are the top 3 countries with the highest average number of sentences in their reflections?,What are the names of the three countries where the average number of sentences in reflections is the greatest?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
country_avg_sentences = db.groupby('country')['num_sentence'].mean().reset_index()
top_3_countries = country_avg_sentences.nlargest(3, 'num_sentence')['country'].tolist()

return top_3_countries
",list of (string),"['UKR', 'CRI', 'HKG']","['UKR', 'CRI', 'HKG']"
List the 4 most common predicted categories in the dataset.,What are the top 4 most frequent values present in the predicted_category column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
predicted_categories = db[""predicted_category""].value_counts().nlargest(4).index.tolist()

return predicted_categories
",list of string,"['affection', 'achievement', 'enjoy_the_moment', 'bonding']","['affection', 'achievement', 'enjoy_the_moment', 'bonding']"
Which 5 countries have the youngest average age of reflectors?,What are the names of the top 5 countries with the lowest average age among individuals present in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
avg_age_by_country = db.groupby('country')['age'].mean().sort_values()
top_5_countries = avg_age_by_country.head(5).index.tolist()

return top_5_countries
",list of string,"['KAZ', 'ALB', 'LKA', 'SLV', 'MAR']","['KAZ', 'ALB', 'LKA', 'MAR', 'SLV']"
List 2 genders with the most number of reflections.,What are the two most frequent values in the gender column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
gender_counts = db['gender'].value_counts()
most_frequent_genders = gender_counts.nlargest(2).index.tolist()

return most_frequent_genders
",list of (string),"['m', 'f']","['m', 'f']"
What are the lowest 4 number of sentences?,Retrieve the 4 smallest values from the num_sentence column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
smallest_num_sentences = db[""num_sentence""].nsmallest(4).tolist()

return smallest_num_sentences
",list of (uint8),"[1, 1, 1, 1]","[1, 1, 1, 1]"
List the 3 highest ages in the dataset.,What are the three largest values present in the age column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
age_values = db[""age""].tolist()
top_three_ages = sorted(age_values, reverse=True)[:3]

return top_three_ages
",list of (float64),"[233.0, 233.0, 233.0]","[233.0, 233.0, 233.0]"
Which are the highest 5 number of sentences?,Retrieve the 5 rows with the highest values in the num_sentence column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_5_sentences = db.nlargest(5, 'num_sentence')['num_sentence'].tolist()

return top_5_sentences
",list of (uint8),"[69, 60, 58, 56, 53]","[69, 60, 58, 56, 53, 51]"
List the age of the 6 youngest individuals in the dataset.,What are the ages corresponding to the six smallest values in the age column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
ages = db[""age""].nlargest(6).tolist()

return ages
",list of (float64),"[233.0, 233.0, 233.0, 233.0, 233.0, 233.0]","[2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0]"
Is it true that the youngest participant has met their match?,"Considering the youngest participant, is their 'met' attribute equal to 1?","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
youngest_participant = db.loc[db[""age""] == db[""age""].min()]
met_value = youngest_participant[""met""].iloc[0]

return met_value == 1
",bool,False,False
Do all people who got a match have the same race as their partner?,"For all instances where the match attribute is equal to 1, is the race of the person and their partner the same?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
matches = dataset[dataset[""match""] == 1]
same_race = matches[""race""] == matches[""race_o""]
result = same_race.all()

return result
",bool,False,False
Are all participants who expected more than 5 matches male?,"Considering participants who anticipated more than 5 matches, is their gender consistently male?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_participants = dataset[dataset[""expected_num_matches""] > 5]
genders = filtered_participants[""gender""].unique()
is_consistently_male = ('Male' in genders) and (len(genders) == 1)

return is_consistently_male
",bool,False,True
Is the average age of participants who got a match higher than those who didn't?,"Calculate the average age of participants where match is 1, and also calculate the average age of those where match is 0. Then, determine if the first average is greater than the second one.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
avg_age_match_1 = dataset[dataset[""match""] == 1][""age""].mean()
avg_age_match_0 = dataset[dataset[""match""] == 0][""age""].mean()

is_greater = avg_age_match_1 > avg_age_match_0

return is_greater
",bool,False,False
How many participants had a match?,What is the total count of participants where the match column has a value of 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
match_count = dataset[dataset[""match""] == 1].shape[0]

return match_count
",int64,1380,1380
What is the average age of participants who have the same race as their partner?,"Calculate the mean age of participants where their race is identical to that of their partner, as indicated by the samerace attribute being equal to 1.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
mean_age = dataset[dataset[""samerace""] == 1][""age""].mean()

return mean_age
",float64,26.390237000000000,26.390237000000000
What is the highest number of matches expected by any participant in the dataset?,What is the maximum value present in the expected_num_matches column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_expected_num_matches = dataset[""expected_num_matches""].max()

return max_expected_num_matches
",float64,18.0,18.0
How many unique 'race' categories are there in the dataset?,What is the cardinality of unique values present in the 'race' column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
unique_races = db['race'].nunique()
return unique_races
",int64,5,5
What is the most common race among participants who got a match?,What is the most frequent value in the race column for participants where the match column has a value of 1?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
filtered_df = db[db[""match""] == 1]
most_frequent_race = filtered_df[""race""].mode()[0]

return most_frequent_race
",string,european/caucasian-american,european/caucasian-american
What is the gender of the youngest participant in the dataset?,What is the gender value associated with the participant having the minimum age in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_age_participant = dataset.loc[dataset[""age""] == dataset[""age""].min()]
gender = min_age_participant[""gender""].iloc[0]

return gender
",string,male,male
What is the race of the participant with the highest number of expected matches?,What is the value of the race attribute for the participant who has the highest expected number of matches?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_matches_participant = dataset.loc[dataset[""expected_num_matches""] == dataset[""expected_num_matches""].max()]
race = max_matches_participant[""race""].iloc[0]

return race
",string,other,other
What is the wave of the participant with the youngest age?,What is the value of wave for the participant who has the minimum age?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
min_age_participant = db.loc[db[""age""] == db[""age""].min()]
wave_value = min_age_participant[""wave""].iloc[0]

return wave_value
",uint8,5,5
What are the top 3 waves among people who got a match?,Retrieve the top 3 distinct values of the wave column for individuals where the match column has a value greater than zero.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_data = dataset[dataset[""match""] > 0]
distinct_wave_values = filtered_data[""wave""].unique()
top_3_waves = distinct_wave_values[:3]

return list(top_3_waves)
",list of (uint8),"[np.uint8(1), np.uint8(2), np.uint8(3)]","[21, 4, 11]"
What are the 5 most common races among people who expected more than 5 matches?,Identify the top 5 most frequently occurring race categories among individuals whose expected number of matches is greater than 5.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_data = dataset[dataset[""expected_num_matches""] > 5]
race_counts = filtered_data['race'].value_counts()
top_5_races = race_counts.head(5).index.tolist()

return top_5_races
",list of string,"['european/caucasian-american', 'asian/pacific islander/asian-american', 'black/african american', 'latino/hispanic american', 'other']","['european/caucasian-american', 'asian/pacific islander/asian-american', 'black/african american', 'latino/hispanic american', 'other']"
What are the top 4 waves of people who have the same race as their partner?,"Retrieve the top 4 wave numbers where individuals share the same race as their partner, according to the samerace attribute.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_data = dataset[dataset['samerace'] == 1]
top_waves = filtered_data['wave'].nlargest(4).tolist()

return top_waves
",list of (uint8),"[21, 21, 21, 21]","[15, 9, 21, 11]"
What are the top 2 genders among people who expected no match?,Identify the two most frequent gender values among individuals who have a value of 0 in the expected_num_matches column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_data = dataset[dataset[""expected_num_matches""] == 0]
gender_counts = filtered_data['gender'].value_counts()
top_two_genders = gender_counts.head(2).index.tolist()

return top_two_genders
",list of string,"['female', 'male']","['female', 'male']"
What are the top 5 ages of participants who got a match?,Retrieve the five highest age values from participants where the match attribute is equal to 1.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
filtered_df = db[db[""match""] == 1]
sorted_age = filtered_df.sort_values(by=""age"", ascending=False)
top_five_ages = sorted_age[""age""].head(5).tolist()

return top_five_ages
",list of (float64),"[42.0, 42.0, 42.0, 42.0, 39.0]","[42.0, 42.0, 42.0, 42.0, 39.0]"
What are the 3 lowest numbers of matches expected by people who got a match?,What are the three smallest values in the dataset column representing the expected number of matches?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
smallest_values = dataset['expected_num_matches'].nsmallest(3).tolist()

return smallest_values
",float64,"[0.0, 0.0, 0.0]","[0.0, 0.0, 0.0]"
What are the top 4 ages of people who have the same race as their partner?,Retrieve the four highest distinct age values from individuals where their race is identical to that of their partner.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
ages = dataset[dataset['samerace'] == 1]['age'].unique()
sorted_ages = sorted(ages, reverse=True)[:4]

return sorted_ages
",list of (float64),"[np.float64(nan), np.float64(55.0), np.float64(42.0), np.float64(39.0)]","[55.0, 55.0, 55.0, 42.0]"
What are the 6 youngest ages of participants who expected no match?,Retrieve the six smallest values from the age column for participants whose expected number of matches is zero.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
subset = dataset[dataset[""expected_num_matches""] == 0]
smallest_ages = subset[""age""].nsmallest(n=6).tolist()

return smallest_ages
",list of float64,"[18.0, 18.0, 18.0, 18.0, 18.0, 18.0]","[18.0, 18.0, 18.0, 18.0, 18.0, 18.0]"
Are there any tweets with more than 10 retweets?,Is there any row in the table where the retweet_count is greater than 10?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
retweet_gt_10 = db[db[""retweet_count""] > 10]
if len(retweet_gt_10) > 0:
return True
else:
return False
",bool,True,True
Is there a negative sentiment tweet from 'United' airline?,Does the dataset contain a tweet with airline as 'United' and airline_sentiment as negative?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
united_negative = db[(db['airline'] == 'United') & (db['airline_sentiment'] == 'negative')]
if len(united_negative) > 0:
return True
else:
return False
",bool,True,True
Are there any tweets categorized with 'Late Flight' as the negative reason?,Is there any tweet in the dataset where the negativereason column has the value 'Late Flight'?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
negative_reasons = db[""negativereason""].unique()
if 'Late Flight' in negative_reasons:
return True
else:
return False
",bool,True,True
Are there any tweets from 'Eastern Time (US & Canada)' timezone with positive sentiment?,Do any tweets with a timezone of 'Eastern Time (US & Canada)' have an airline sentiment category that is positive?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
eastern_time_tweets = db[db['user_timezone'] == 'Eastern Time (US & Canada)']
positive_sentiment = eastern_time_tweets[eastern_time_tweets['airline_sentiment'] == 'positive']

if len(positive_sentiment) > 0:
return True
else:
return False
",bool,True,True
How many unique user timezones are there in the dataset?,What is the count of distinct values present in the user_timezone column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_timezones = db[""user_timezone""].nunique()

return distinct_timezones
",int64,85,85
"On average, what is the sentiment confidence of the tweets?",Calculate the mean of the airline sentiment confidence scores in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
mean_sentiment_confidence = db[""airline_sentiment_confidence""].mean()

return mean_sentiment_confidence
",float64,0.9001690000000000,0.9001690000000000
What's the maximum number of retweets a tweet has received?,What is the largest value present in the retweet_count column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
largest_retweet_count = db[""retweet_count""].max()

return largest_retweet_count
",int64,44,44
How many tweets are from 'Virgin America' airline?,What is the count of tweets where the airline column has the value 'Virgin America'?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
virgin_america_tweets = db[db[""airline""] == ""Virgin America""]
count = len(virgin_america_tweets)

return count
",int64,504,504
Which airline has the highest average sentiment confidence?,What is the maximum value of average sentiment confidence across all airlines?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
average_sentiment_confidence = db.groupby('airline')['airline_sentiment_confidence'].mean()
max_avg_confidence = average_sentiment_confidence.max()

return max_avg_confidence
",float64,0.9215780000000000,US Airways
Which negative reason is most commonly associated with 'American' airline?,What is the most frequent value in the negativereason column for rows where the airline column equals 'American'?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
american_airlines = db[db[""airline""] == ""American""]
most_frequent_reason = american_airlines[""negativereason""].mode()[0]

return most_frequent_reason
",string,Customer Service Issue,Customer Service Issue
From which timezone is the tweet with the highest sentiment confidence?,What is the value of the user_timezone column for the tweet that has the maximum airline_sentiment_confidence?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_confidence_tweet = db.loc[db[""airline_sentiment_confidence""] == db[""airline_sentiment_confidence""].max()]
user_timezone = max_confidence_tweet[""user_timezone""].iloc[0]

return user_timezone
",string,Eastern Time (US & Canada),Eastern Time (US & Canada)
Which airline has the most tweets with negative sentiment?,,,,ERROR,United
Which are the top 3 airlines with the highest average sentiment confidence?,Can you provide the names of the three airlines that exhibit the highest average airline sentiment confidence scores?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
avg_sentiment = db.groupby('airline')['airline_sentiment_confidence'].mean().sort_values(ascending=False)
top_3_airlines = avg_sentiment.head(3).index.tolist()

return top_3_airlines
",list of (category),"['US Airways', 'American', 'United']","['US Airways', 'American', 'United']"
List the 3 most common negative reasons in the dataset.,What are the top 3 most frequent values present in the negativereason column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_3_reasons = db['negativereason'].value_counts().nlargest(3).index.tolist()

return top_3_reasons
",list of (category),"['Customer Service Issue', 'Late Flight', ""Can't Tell""]","['Customer Service Issue', 'Late Flight', 'Can't Tell']"
Which 3 user timezones have the most number of tweets?,Find the top 3 most frequent values in the user_timezone column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_3_timezones = db['user_timezone'].value_counts().nlargest(3).index.tolist()

return top_3_timezones
",list of (category),"['Eastern Time (US & Canada)', 'Central Time (US & Canada)', 'Pacific Time (US & Canada)']","['Eastern Time (US & Canada)', 'Central Time (US & Canada)', 'Pacific Time (US & Canada)']"
List the 2 airlines with the least number of tweets in the dataset.,,,,ERROR,"['Virgin America', 'Delta']"
What are the top 4 tweet IDs with the lowest sentiment confidence?,,,,ERROR,"[570306133677760513, 570301031407624196, 570300817074462722, 570300767074181121]"
List the 3 highest retweet counts in the dataset.,What are the top 3 largest values in the retweet_count column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_3_retweet_counts = db['retweet_count'].nlargest(3).tolist()

return top_3_retweet_counts
",list of (uint8),"[44, 32, 31]","[44, 32, 31]"
What are the 2 lowest values for sentiment confidence?,Retrieve the two smallest values from the column named airline_sentiment_confidence.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
smallest_values = db.sort_values(by=""airline_sentiment_confidence"")[""airline_sentiment_confidence""].head(2).tolist()

return smallest_values
",list of float64,"[0.335, 0.3353]","[0.335, 0.335]"
List the 6 highest sentiment confidence values.,What are the six largest values present in the airline sentiment confidence column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
airline_sentiment_confidence_values = db[""airline_sentiment_confidence""].tolist()
sorted_values = sorted(airline_sentiment_confidence_values, reverse=True)
largest_six_values = sorted_values[:6]

return largest_six_values
",list of float64,"[1.0, 1.0, 1.0, 1.0, 1.0, 1.0]","[1.0, 1.0, 1.0, 1.0, 1.0, 1.0]"
Is it true that the student with the highest number of absences is from a rural area?,Is the student with the maximum number of absences having address as rural?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_absences_student = dataset.loc[dataset[""absences""] == dataset[""absences""].max()]
address_of_max_absences_student = max_absences_student[""address""].iloc[0]

if address_of_max_absences_student == ""rural"":
return True
else:
return False
",bool,False,True
Are all students who are in a romantic relationship older than 17?,,,,ERROR,False
Is the average final grade (G3) of students who consume a lot of alcohol (Dalc > 2) lower than those who don't?,Calculate the average G3 for students with Dalc greater than 2 and the average G3 for those with Dalc less than or equal to 2. Is the average G3 of the group with higher alcohol consumption lower than that of the other group?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
avg_g3_high_dalc = dataset[dataset['Dalc'] > 2]['G3'].mean()
avg_g3_low_dalc = dataset[dataset['Dalc'] <= 2]['G3'].mean()

is_lower = avg_g3_high_dalc < avg_g3_low_dalc

return is_lower
",bool,True,True
Do all students who have both parents at home (Pstatus = 'T') have more than 3 free time after school (freetime > 3)?,"For all students where the Pstatus is equal to 'T', is their freetime greater than 3?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
pstatus_t_students = dataset[dataset[""Pstatus""] == ""T""]
freetime_greater_than_3 = pstatus_t_students[""freetime""] > 3
result = freetime_greater_than_3.all()

return result
",bool,False,False
How many students have their mother's education (Medu) level above 3?,What is the count of students whose Medu value is greater than 3?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
count = dataset[dataset[""Medu""] > 3].shape[0]

return count
",int64,131,131
What is the average age of students who want to take higher education (higher = 'yes')?,Calculate the mean value of the age column for students whose higher education attribute is equal to 'yes'.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
higher_education_students = dataset[dataset['higher'] == 'yes']
mean_age = higher_education_students['age'].mean()

return mean_age
",float64,16.634667000000000,16.634667000000000
What is the highest number of absences among students?,What is the maximum value present in the absences column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_absences = dataset[""absences""].max()

return max_absences
",uint8,75,75
How many unique schools are there in the dataset?,What is the count of distinct values present in the school column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_schools = db['school'].nunique()

return distinct_schools
",int64,2,2
What is the most common mother's job among students who want to take higher education?,,,,ERROR,other
What is the gender of the student with the highest final grade (G3)?,Can you identify the sex of the student who achieved the highest score in G3?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
highest_g3_student = dataset.loc[dataset[""G3""] == dataset[""G3""].max()]
sex_of_highest_g3_student = highest_g3_student[""sex""].iloc[0]

return sex_of_highest_g3_student
",category,M,M
What is the school of the student with the highest number of absences?,Which school does the student with the maximum number of absences attend?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
student_with_max_absences = dataset.loc[dataset[""absences""] == dataset[""absences""].max()]
school_name = student_with_max_absences[""school""].iloc[0]

return school_name
",category,GP,GP
What is the family size of the student with the highest final grade (G3)?,What is the famsize value for the student who has the maximum G3 score?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_g3_student = dataset.loc[dataset[""G3""] == dataset[""G3""].max()]
famsize_value = max_g3_student[""famsize""].iloc[0]

return famsize_value
",category,GT3,GT3
What are the top 3 reasons for choosing a school among students who want to take higher education?,Identify the three most frequent values in the reason column for students who have higher education set to yes.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
students_with_higher = dataset[dataset[""higher""] == ""yes""]
reason_values = students_with_higher[""reason""].value_counts()
top_three_reasons = reason_values.head(3).index.tolist()

return top_three_reasons
",list of (category),"['course', 'home', 'reputation']","['course', 'home', 'reputation']"
What are the 5 most common mother's jobs among students with a final grade above 10?,Identify the top 5 most frequent values in the Mjob column for students whose G3 value is greater than 10.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_data = dataset[dataset['G3'] > 10]
top_5_mjobs = filtered_data['Mjob'].value_counts().nlargest(5).index.tolist()

return top_5_mjobs
",category,"['other', 'services', 'teacher', 'health', 'at_home']","['other', 'services', 'teacher', 'health', 'at_home']"
What are the top 4 schools among students with absences above 10?,Retrieve the names of the top 4 schools based on their frequency among students whose absences exceed 10.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
absences_gt_10 = dataset[dataset['absences'] > 10]
school_counts = absences_gt_10['school'].value_counts()
top_4_schools = school_counts.head(4).index.tolist()

return top_4_schools
",category,"['GP', 'MS']","['GP', 'MS']"
What are the top 2 family relations among students with a final grade below 10?,Identify the two most frequent values in the famsrel column for students whose G3 value is less than 10.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_data = dataset[dataset['G3'] < 10]
famsrel_values = filtered_data['famrel'].value_counts()
most_common_values = famsrel_values.head(2).index.tolist()

return most_common_values
",list of (category),"[4, 5]","[4, 5]"
What are the top 5 ages of students who want to take higher education?,,,,ERROR,"[16, 17, 15, 18, 19]"
What are the 3 lowest final grades of students who have more than 10 absences?,Retrieve the three smallest values from the G3 column for students whose absences exceed 10.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
filtered_df = db[db['absences'] > 10]
smallest_three = filtered_df['G3'].nlargest(3).tolist()

return smallest_three
",list of (uint8),"[18, 18, 17]","[4, 14, 17]"
What are the top 4 ages of students whose mother's education level is above 3?,Retrieve the four highest age values from the dataset for students whose Medu attribute is greater than 3.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_data = dataset[dataset['Medu'] > 3]
sorted_ages = sorted(filtered_data['age'], reverse=True)
top_four_ages = sorted_ages[:4]

return top_four_ages
",list of (uint8),"[20, 19, 19, 19]","[15, 16, 18, 17]"
What are the 6 lowest final grades of students who don't want to take higher education?,Retrieve the six smallest values from the G3 column for students whose higher education attribute is set to No.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
no_higher = db[db['higher'] == 'No']
smallest_g3 = no_higher['G3'].nlargest(6).tolist()

return smallest_g3
",list of (uint8),[],"[8, 10, 12, 9, 7, 13]"
Is it true that the oldest company (based on approval year) is from an urban (UrbanRural=1) area?,Is there a company with the largest ApprovalFY value where UrbanRural is equal to 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_approval_fy = dataset['ApprovalFY'].max()
filtered_data = dataset[(dataset['ApprovalFY'] == max_approval_fy) & (dataset['UrbanRural'] == 1)]
if not filtered_data.empty:
return True
else:
return False
",bool,True,False
Are all companies with more than 10 employees located in an urban (UrbanRural=1) area?,Is it true that every company with a NoEmp value greater than 10 also has an UrbanRural value equal to 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
companies_with_noemp_greater_than_10 = dataset[dataset[""NoEmp""] > 10]
urban_rural_values = companies_with_noemp_greater_than_10[""UrbanRural""]
are_all_urban_rural_equal_to_1 = (urban_rural_values == 1).all()

return are_all_urban_rural_equal_to_1
",bool,False,False
"Are all companies with a default amount greater than $250,000 in the food sector?","Is it true that every company in the food sector with a default amount exceeding 250,000 is present in the dataset?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
food_sector_defaults = dataset[(dataset[""Sector""] == ""Food"") & (dataset[""default_amount""] > 250000)]
if len(food_sector_defaults) == 0:
return True
else:
return True
",bool,True,False
Is the average number of retained jobs higher for companies located in urban (UrbanRural=1) areas than those in rural (UrbanRural=0) areas?,"Calculate the average of RetainedJob for companies where UrbanRural is 1, and calculate the average of RetainedJob for companies where UrbanRural is 0. Is the average retained job count higher for urban areas compared to rural areas?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
urban_retained_job = dataset[dataset[""UrbanRural""] == 1][""RetainedJob""].mean()
rural_retained_job = dataset[dataset[""UrbanRural""] == 0][""RetainedJob""].mean()

return urban_retained_job > rural_retained_job
",bool,True,True
How many companies have a franchise code of 1?,What is the count of records where FranchiseCode equals 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
franchise_code_1_count = dataset[dataset[""FranchiseCode""] == 1].shape[0]

return franchise_code_1_count
",int64,57340,57340
What is the average disbursement gross for companies in the retail sector?,"Calculate the mean of the DisbursementGross column, considering only those rows where the Sector column is equal to retail.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
retail_sector = dataset[dataset[""Sector""] == ""retail""]
mean_disbursement_gross = retail_sector[""DisbursementGross""].mean()

return mean_disbursement_gross
",float64,,164636.4123070000
What is the highest approval year in the dataset?,What is the maximum value present in ApprovalFY column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_approval_fy = dataset[""ApprovalFY""].max()

return max_approval_fy
",uint16,2010,2010
How many unique sectors are there in the dataset?,What is the count of distinct values present in the Sector column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
distinct_sector_count = dataset['Sector'].nunique()

return distinct_sector_count
",int64,20,20
What is the most common sector among companies with a franchise code of 1?,Which sector value appears most frequently in the dataset for companies whose FranchiseCode is equal to 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
franchise_code_1_companies = dataset[dataset['FranchiseCode'] == 1]
sector_counts = franchise_code_1_companies['Sector'].value_counts()
most_frequent_sector = sector_counts.idxmax()

return most_frequent_sector
",string,Retail trade,Retail trade
What is the state of the company with the highest disbursement gross?,Which state has a company with the maximum disbursement gross value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_disbursement = dataset['DisbursementGross'].max()
company_with_max_disbursement = dataset[dataset['DisbursementGross'] == max_disbursement]
state = company_with_max_disbursement['State'].iloc[0]

return state
",category,ME,ME
What is the bank for the company with the highest default amount?,Which bank issued the loan with the largest default amount?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_default_loan = dataset.loc[dataset[""default_amount""] == dataset[""default_amount""].max()]
bank_name = max_default_loan[""Bank""].iloc[0]

return bank_name
",category,COMMUNITY BANK & TRUST,COMMUNITY BANK & TRUST
What is the sector of the company with the most number of employees?,Which value appears most frequently in the Sector column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sector_counts = dataset['Sector'].value_counts()
most_frequent_sector = sector_counts.idxmax()

return most_frequent_sector
",category,Retail trade,Health care and social assistance
What are the top 3 sectors among companies with a franchise code of 1?,Identify the three most frequent sector values among companies whose FranchiseCode is equal to 1.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sector_values = dataset[dataset['FranchiseCode'] == 1]['Sector'].value_counts().nlargest(3).index.tolist()

return sector_values
",list of (category),"['Retail trade', 'Other services (except public administration)', 'Manufacturing']","['Retail trade', 'Other services (except public administration)', 'Manufacturing']"
What are the 5 most common banks among companies with an approval year earlier than 2000?,Identify the top 5 most frequent values in the Bank column for rows where ApprovalFY is less than 2000.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_data = dataset[dataset[""ApprovalFY""] < 2000]
top_5_banks = filtered_data['Bank'].value_counts().nlargest(5).index.tolist()

return top_5_banks
",category,"['WELLS FARGO BANK NATL ASSOC', 'BANK OF AMERICA NATL ASSOC', 'U.S. BANK NATIONAL ASSOCIATION', 'JPMORGAN CHASE BANK NATL ASSOC', 'PNC BANK, NATIONAL ASSOCIATION']","['WELLS FARGO BANK NATL ASSOC', 'BANK OF AMERICA NATL ASSOC', 'U.S. BANK NATIONAL ASSOCIATION', 'JPMORGAN CHASE BANK NATL ASSOC', 'PNC BANK, NATIONAL ASSOCIATION']"
"What are the top 4 states among companies with a disbursement gross greater than $1,000,000?",Return a list containing the names of the top 4 states based on the number of companies with a DisbursementGross value exceeding one million.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
companies_over_million = dataset[dataset[""DisbursementGross""] > 1000000]
state_counts = companies_over_million['State'].value_counts().nlargest(4).index.tolist()

return state_counts
",list of (category),"['CA', 'TX', 'FL', 'AZ']","['CA', 'TX', 'FL', 'AZ']"
"What are the top 2 sectors among companies with a default amount greater than $500,000?",Identify the two most frequent values in the Sector column for companies where the default_amount is strictly greater than 500000.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_data = dataset[dataset['default_amount'] > 500000]
sector_counts = filtered_data['Sector'].value_counts()
most_frequent_sectors = sector_counts.head(2).index.tolist()

return most_frequent_sectors
",list of (category),"['Retail trade', 'Accommodation and food services']","['Retail trade', 'Accommodation and food services']"
What are the top 5 approval years for companies in the retail sector?,"Retrieve the 5 highest values from the ApprovalFY column, considering only companies whose Sector is retail.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
retail_companies = dataset[dataset[""Sector""] == ""retail""]
top_5_approval_fy = retail_companies['ApprovalFY'].nlargest(5).tolist()

return top_5_approval_fy
",list of (uint16),[],"[2005, 2004, 2006, 2007, 2003]"
What are the 3 highest disbursement gross for companies with a franchise code of 1?,Retrieve the top 3 values from the DisbursementGross column for records where FranchiseCode is equal to 1.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
filtered_data = db[db['FranchiseCode'] == 1]
top_3_disbursement = filtered_data['DisbursementGross'].nlargest(3).tolist()

return top_3_disbursement
",list of (uint32),"[5294366, 4656672, 4000048]","[50000.0, 100000.0, 10000.0]"
What are the top 4 approval years for companies in the state of CA?,Return the 4 highest values for ApprovalFY where State is CA.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
ca_loans = db[db[""State""] == ""CA""].sort_values(""ApprovalFY"", ascending=False)
top_4_approval_fy = ca_loans[""ApprovalFY""].head(4).tolist()

return top_4_approval_fy
",list of (uint16),"[2010, 2010, 2010, 2010]","[2007, 2004, 2006, 2003]"
What are the 6 highest default amounts among companies in the state of NY?,,,,ERROR,"[0.0, 50000.0, 25000.0, 100000.0, 35000.0, 10000.0]"
Is it true that the oldest movie (based on year) in the drama genre is from the USA?,Find the movie with the maximum year value that belongs to the drama genre. Is the country of this movie USA?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
drama_movies = dataset[dataset[""genre""] == ""Drama""].sort_values(""year"", ascending=False)
top_movie = drama_movies.iloc[0]

if top_movie[""country""] == ""USA"":
return True
else:
return False
",bool,False,False
"Are all movies from the USA, with more than 80 minutes duration in the drama genre, in English?","For movies originating from the USA, with a duration exceeding 80 minutes and classified as drama, is the language attribute English?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
usa_movies = dataset[(dataset['country'] == 'USA') & (dataset['duration'] > 80) & (dataset['genre'] == 'Drama')]
is_english = usa_movies['language'].eq('English').any()

return is_english
",bool,True,False
Are all movies with votes greater than 90 from the USA in English?,,,,ERROR,True
Is the average duration of English language movies from the USA longer than those from non-USA countries?,Calculate the average duration of movies where the country is USA and calculate the average duration of movies where the country is not USA. Is the first average greater than the second?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
usa_movies = dataset[dataset[""country""] == ""USA""]
non_usa_movies = dataset[dataset[""country""] != ""USA""]

avg_duration_usa = usa_movies[""duration""].mean() if len(usa_movies) > 0 else 0
avg_duration_non_usa = non_usa_movies[""duration""].mean() if len(non_usa_movies) > 0 else 0

is_first_greater = avg_duration_usa > avg_duration_non_usa

return is_first_greater
",bool,False,False
"How many movies from the USA, in the drama genre, have a metascore of 100?","What is the count of movies originating from the USA and categorized as drama, possessing a metascore equal to 100?","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
usa_drama_metascore_100 = db[(db['country'] == 'USA') & (db['genre'] == 'Drama') & (db['metascore'] == 100)]
count = len(usa_drama_metascore_100)

return count
",int64,1,6
"What is the average duration for movies in the drama genre, from the USA, in English?","Calculate the mean of the duration column, considering only movies where the genre is drama, country is USA and language is English.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_movies = dataset[(dataset['genre'] == 'Drama') & (dataset['country'] == 'USA') & (dataset['language'] == 'English')]
mean_duration = filtered_movies['duration'].mean()

return mean_duration
",float64,94.53737900000000,96.07927000000000
What is the latest year for English language movies from the USA in the dataset?,Find the maximum value in the year column for movies where the country is USA and language is English.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
usa_english_movies = db[(db['country'] == 'USA') & (db['language'] == 'English')]
max_year = usa_english_movies['year'].max()

return max_year
",float64,2020.0,2020.0
How many unique languages are there in the dataset for movies from the USA?,,,,ERROR,650
What is the most common genre among English language movies from the USA with a metascore of 100?,"Identify the genre that appears most frequently in movies originating from the USA, are in English, and possess a metascore of exactly 100.","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
usa_movies = db[(db['country'] == 'USA') & (db['language'] == 'English') & (db['metascore'] == 100)]
genre_counts = usa_movies['genre'].value_counts()
most_frequent_genre = genre_counts.index[0]

return most_frequent_genre
",string,"Mystery, Thriller","Adventure, Family, Fantasy"
What is the country of the English language movie with the longest duration?,Identify the country associated with the movie that has the maximum duration and is primarily in English.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
english_movies = db[db['language'] == 'English']
max_duration = english_movies['duration'].max()
movie_with_max_duration = english_movies[english_movies['duration'] == max_duration]
country = movie_with_max_duration['country'].iloc[0]

return country
",string,UK,Argentina
What is the language of the movie from the USA with the highest metascore?,Identify the language of the movie originating from the USA that has the maximum metascore value.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
usa_movies = db[db[""country""] == ""USA""].sort_values(by=""metascore"", ascending=False)
language = usa_movies[""language""].iloc[0]

return language
",string,English,English
What is the genre of the English language movie from the USA with the most votes?,Which genre corresponds to the movie that has the highest number of votes and was produced in the USA?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
usa_movies = dataset[dataset[""country""] == ""USA""]
max_votes_movie = usa_movies.loc[usa_movies[""votes""] == usa_movies[""votes""].max()]
genre = max_votes_movie[""genre""].iloc[0]

return genre
",string,Drama,Drama
What are the top 3 genres among English language movies from the USA with a metascore of 100?,Retrieve the three most frequent genres for movies originating from the USA that have a metascore equal to 100.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
usa_movies = db[(db['country'] == 'USA') & (db['metascore'] == 100)]
genres = usa_movies['genre'].str.split(',')
all_genres = []
for genre_list in genres:
for genre in genre_list:
all_genres.append(genre.strip())

genre_counts = {}
for genre in all_genres:
if genre in genre_counts:
genre_counts[genre] += 1
else:
genre_counts[genre] = 1

sorted_genres = sorted(genre_counts.items(), key=lambda item: item[1], reverse=True)
top_3_genres = [genre for genre, count in sorted_genres[:3]]

return top_3_genres
",list of (string),"['Drama', 'Mystery', 'Romance']","['Adventure, Family, Fantasy', 'Drama, Mystery', 'Drama, Romance, War']"
What are the 5 most common countries among English language movies with a year earlier than 2000?,"Identify the top 5 countries that appear most frequently in movies released before the year 2000, where the movie's language is English.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
movies_before_2000 = dataset[dataset[""year""] < 2000]
english_movies = movies_before_2000[movies_before_2000[""language""] == ""English""]
country_counts = english_movies[""country""].value_counts()
top_5_countries = country_counts.head(5).index.tolist()

return top_5_countries
",list of (string),"['USA', 'UK', 'Canada', 'UK, USA', 'Australia']","['USA', 'UK', 'Canada', 'UK, USA', 'Australia']"
What are the top 4 languages among movies from the USA with a duration greater than 180 minutes?,Retrieve the four most frequent languages spoken in movies originating from the USA that have a duration exceeding 180 minutes.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
usa_movies = db[(db['country'] == 'USA') & (db['duration'] > 180)]
languages = usa_movies['language'].value_counts().nlargest(4).index.tolist()

return languages
",list of (string),"['English', 'English, Spanish', 'English, French', 'English, Mandarin']","['English', 'English, Spanish', 'English, Russian', 'English, Hungarian']"
What are the top 2 genres among English language movies from the USA with a metascore greater than 90?,"Identify the two most frequent genres for movies originating from the USA and released in English, that also have a metascore exceeding 90.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
usa_english_movies = dataset[(dataset['country'] == 'USA') & (dataset['language'] == 'English') & (dataset['metascore'] > 90)]
genre_counts = usa_english_movies['genre'].value_counts()
top_two_genres = genre_counts.head(2).index.tolist()

return top_two_genres
",list of (string),"['Drama', 'Comedy, Drama']","['Drama', 'Crime, Drama']"
What are the top 5 years for English language movies from the USA in the drama genre?,"Can you provide a sorted list containing the years, limited to the top 5, for movies that are both English language and originate from the USA, specifically within the drama genre?","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
filtered_movies = db[((db['language'] == 'English') & (db['country'] == 'USA') & (db['genre'] == 'Drama'))]
years = sorted(list(filtered_movies['year'].astype(str).unique()))[:5]

return years
",list of (string),"['1914.0', '1915.0', '1916.0', '1917.0', '1918.0']","[2017.0, 2016.0, 2015.0, 2013.0, 2018.0]"
What are the 3 longest durations for English language movies from the USA with a metascore of 100?,"Retrieve the three highest values for duration among movies originating from the USA, spoken in English, and possessing a metascore equal to 100.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_movies = dataset[
(dataset['country'] == 'USA') & 
(dataset['language'] == 'English') & 
(dataset['metascore'] == 100)
]

sorted_movies = filtered_movies.sort_values('duration', ascending=False)

top_three_durations = sorted_movies['duration'].head(3).tolist()

return top_three_durations
",list of (uint16),"[128, 112, 102]","[102, 119, 112]"
What are the four years with more English language movies from the USA?,"Return a sorted list containing the four highest values for the year column, considering only movies where the country is USA and the language is English.","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
usa_english_movies = db[(db['country'] == 'USA') & (db['language'] == 'English')]
sorted_years = sorted(usa_english_movies['year'].tolist(), reverse=True)
top_four_years = sorted_years[:4]

return top_four_years
",list of (float64),"[2020.0, 2020.0, 2020.0, 2020.0]","[2017.0, 2016.0, 2018.0, 2013.0]"
Can you show the 6 highest metascores among English language movies from the USA?,What are the 6 largest values in the metascore column for movies where the country is USA and language is English?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
filtered_movies = dataset[(dataset['country'] == 'USA') & (dataset['language'] == 'English')]
largest_metascores = filtered_movies['metascore'].nlargest(6).tolist()

return largest_metascores
",list of (float64),"[100.0, 100.0, 100.0, 100.0, 99.0, 99.0]","[49.0, 55.0, 57.0, 48.0, 54.0, 52.0]"
Is it true that the song with the lowest popularity in the dataset is longer than 300000 ms?,Does the song with the minimum popularity value have a duration greater than 300000 milliseconds?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_popularity_song = dataset.loc[dataset[""popularity""] == dataset[""popularity""].min()]
duration = min_popularity_song[""duration_ms""].iloc[0]

if duration > 300000:
return True
else:
return False
",bool,False,True
Did any song released in the year 2020 in the dataset achieve the maximum popularity?,Is there any song with a release year of 2020 that has the highest popularity score in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
songs_2020 = dataset[dataset[""release_year""] == 2020]
if songs_2020.empty:
return False
max_popularity = dataset[""popularity""].max()
highest_popularity_songs = dataset[dataset[""popularity""] == max_popularity]
is_song_from_2020 = not highest_popularity_songs.empty and any(row[""release_year""] == 2020 for index, row in highest_popularity_songs.iterrows())

return is_song_from_2020
",bool,True,False
Does the song with the longest duration also have the highest energy?,Is the song with the maximum duration_ms also having the highest energy value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_duration_song = dataset.loc[dataset[""duration_ms""] == dataset[""duration_ms""].max()]
highest_energy_song = dataset.loc[dataset[""energy""] == dataset[""energy""].max()]

return max_duration_song['id'].isin(highest_energy_song['id']).bool()
",bool,False,False
Does the song with the highest energy also have the highest popularity?,,,,ERROR,False
How many unique artists are there in the dataset?,What is the count of distinct values present in the name column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_names = db['name'].nunique()

return distinct_names
",int64,20444,13056
What's the average song duration in the dataset?,,,,ERROR,228998.0798100000
What's the maximum popularity score in the dataset?,,,,ERROR,94
How many songs were released in the year with the most releases?,What is the maximum number of songs released in any single year?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_songs_released = dataset[""release_year""].value_counts().max()

return max_songs_released
",int64,489,489
Who is the artist with the highest popularity score?,What is the name of the artist with the maximum popularity score?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_popularity_artist = dataset.loc[dataset[""popularity""] == dataset[""popularity""].max(), ""name""].iloc[0]

return max_popularity_artist
",string,Heartbreak Anniversary,['Giveon']
In which month was the most popular song released?,What is the value of release_month corresponding to the song with the highest popularity?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
most_popular_song = dataset.loc[dataset[""popularity""] == dataset[""popularity""].max()]
release_month_value = most_popular_song[""release_month""].iloc[0]

return str(release_month_value)
",string,3.0,3.0
What's the name of the longest song?,Could you provide the name of the song with the maximum duration in milliseconds?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_duration_song = dataset.loc[dataset[""duration_ms""] == dataset[""duration_ms""].max(), ""name""].iloc[0]

return max_duration_song
",string,Monster Tunes Yearmix 2011 - Mixed by Mark Eteson,Monster Tunes Yearmix 2011 - Mixed by Mark Eteson
What's the name of the song with the most energy?,Can you return the name of the song that has the highest energy value?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_energy_song = db.loc[db[""energy""] == db[""energy""].max()]
song_name = max_energy_song[""name""].iloc[0]

return song_name
",string,Marathon (Mix Cut) - Simon O'Shine Mix,Marathon (Mix Cut) - Simon O'Shine Mix
What are the the 2 shortest songs in the dataset?,Could you return the names of the two songs with the smallest duration_ms values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sorted_songs = dataset.sort_values(by='duration_ms')
two_shortest_songs = sorted_songs['name'].head(2).tolist()

return two_shortest_songs
",list of (string),"['Rhapsody on a Theme of Paganini, Op. 43: Introduction - Allegro vivace', 'Intro']","['Rhapsody on a Theme of Paganini, Op. 43: Introduction - Allegro vivace', 'Intro']"
What are the names of the top 3 most popular songs?,Can you provide a list containing the names of the three songs with the highest popularity values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_three_songs = dataset.nlargest(3, 'popularity')['name'].tolist()

return top_three_songs
",list of string,"['Heartbreak Anniversary', 'Good Days', 'Paradise (feat. Dermot Kennedy)']","[Heartbreak Anniversary, Good Days, Paradise (feat. Dermot Kennedy)]"
What are the top 3 artists who released songs with the longest durations?,Identify the names of the three artists whose songs have the maximum duration_ms values in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_duration = dataset['duration_ms'].max()
songs_with_max_duration = dataset[dataset['duration_ms'] == max_duration]
artists_list = songs_with_max_duration['artists'].tolist()

return artists_list[:3]
",list of (string),"[array(['Mark Eteson'], dtype=object)]","['Mark Eteson', 'Various Artists', 'Serge Reggiani']"
What are the names of the top 2 songs with the most energy?,Can you provide a list containing the names of the two songs that have the highest energy values in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
highest_energy_songs = db.nlargest(2, 'energy')
names = highest_energy_songs['name'].tolist()

return names
",list of string,"[""Marathon (Mix Cut) - Simon O'Shine Mix"", 'Applause; Martha Tilton Returns to Stage - Live']","[Marathon (Mix Cut) - Simon O'Shine Mix, Applause; Martha Tilton Returns to Stage - Live]"
What are the top 5 most popular scores?,Retrieve the 5 highest values from the popularity column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
highest_popularity = dataset['popularity'].nlargest(5).tolist()

return highest_popularity
",list of (uint8),"[94, 93, 92, 88, 87]","[0, 35, 23, 1, 26]"
What are the 3 longest song durations?,Retrieve the three highest values from the duration_ms column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_three_durations = dataset['duration_ms'].nlargest(3).tolist()

return top_three_durations
",list of (float64),"[4792587.0, 4658245.0, 4585640.0]","[4792587.0, 4658245.0, 4585640.0]"
What are the 4 latest release years in the dataset?,Retrieve the four most recent values from the release_year column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
recent_years = dataset['release_year'].tail(4).tolist()

return recent_years
",list of (uint16),"[1994, 2001, 1985, 1994]","[2021, 2021, 2021, 2021]"
What are the top 3 energy scores in the dataset?,Retrieve the three highest values from the energy column in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_three_energies = db.nlargest(3, 'energy')['energy'].tolist()

return top_three_energies
",list of (float64),"[1.0, 1.0, 1.0]","[1.0, 1.0, 1.0]"
Is it true that the athlete with the lowest ID is older than 30 years?,Find the athlete with the minimum ID and check if their age is less than or equal to 30.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_id_athlete = dataset.loc[dataset[""ID""] == dataset[""ID""].min()]
age = min_id_athlete[""Age""].iloc[0]

return age <= 30
",bool,True,True
Did any athlete from the team with the most participants win two gold medals?,"Is there an athlete affiliated with the team that has the highest count of athletes, who also secured exactly two gold medals?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
team_counts = dataset['Team'].value_counts()
max_team = team_counts.idxmax()

athletes_in_max_team = dataset[dataset['Team'] == max_team]
gold_medal_count = athletes_in_max_team[athletes_in_max_team['Medal'] == 'Gold'].shape[0]

if gold_medal_count == 2:
return True
else:
return False
",bool,False,False
Does the athlete with the highest weight also participate in the sport with the most athletes?,Is there an athlete with the maximum weight who also participates in a sport that has the highest number of athletes?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_weight_athlete = db.loc[db[""Weight""] == db[""Weight""].max()]
sport_counts = db['Sport'].value_counts()
most_popular_sport = sport_counts.idxmax()

sports_of_max_weight_athletes = max_weight_athlete['Sport'].unique()

return most_popular_sport in sports_of_max_weight_athletes
",bool,False,False
Does the athlete with the highest height also have a medal?,,,,ERROR,False
How many unique teams are there in the dataset?,What is the number of distinct values present in the Team column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
distinct_teams = db[""Team""].nunique()

return distinct_teams
",int64,1184,230
What's the average age of athletes in the dataset?,Calculate the mean of the Age column in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
mean_age = dataset[""Age""].mean()

return mean_age
",float64,25.556898000000000,25.556898000000000
What's the maximum weight of athletes in the dataset?,What is the largest value present in the Weight column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
largest_weight = db[""Weight""].max()

return largest_weight
",float64,214.0,214.0
How many athletes participated in the year with the most participants?,What is the maximum number of athletes participating in any single year?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
athletes_per_year = db.groupby('Year')['ID'].count()
max_athletes = athletes_per_year.max()

return max_athletes
",int64,16413,2536
Who is the athlete with the highest weight?,Can you provide the name of the athlete who has the maximum weight value?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_weight_athlete = db.loc[db[""Weight""] == db[""Weight""].max(), ""Name""]
return max_weight_athlete.iloc[0]
",string,"Ricardo Blas, Jr.",Ricardo Blas Jr.
In which city did the athlete with the highest height participate?,What is the city value corresponding to the athlete with the maximum height?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_height_athlete = dataset.loc[dataset[""Height""] == dataset[""Height""].max()]
city_value = max_height_athlete[""City""].iloc[0]

return city_value
",string,Sydney,London
What's the name of the athlete who participated in the most number of games?,Can you return the Name of the athlete with the highest count in the Games column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
games_counts = db['Games'].value_counts()
most_frequent_game = games_counts.idxmax()
athlete_names = db[db['Games'] == most_frequent_game]['Name'].unique().tolist()

if len(athlete_names) > 0:
return athlete_names[0]
else:
return None
",string,Jyri Tapani Aalto,Robert Tait McKenzie
What's the sport of the athlete with the most medals?,Which sport does the athlete with the highest number of medals participate in?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
medal_counts = db.groupby('Sport')['Medal'].count().reset_index()
max_medals_sport = medal_counts.loc[medal_counts['Medal'].max() == medal_counts['Medal'], 'Sport'].iloc[0]

return max_medals_sport
",string,Athletics,Art Competitions
What are the top 5 most common team names in the dataset?,Retrieve the 5 most frequent values present in the Team column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
team_counts = db['Team'].value_counts()
most_frequent_teams = team_counts.head(5).index.tolist()

return most_frequent_teams
",list of string,"['United States', 'France', 'Great Britain', 'Italy', 'Germany']","[United States, France, Great Britain, Italy, Germany]"
What are the names of the top 3 athletes with the highest weights?,Retrieve the names of the three athletes with the largest weight values from the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
athletes_sorted_by_weight = db.sort_values(by='Weight', ascending=False)
top_three_athletes = athletes_sorted_by_weight.head(3)['Name'].tolist()

return top_three_athletes
",list of string,"['Ricardo Blas, Jr.', 'Ricardo Blas, Jr.', 'Aytami Ruano Vega']","[Ricardo Blas Jr., Shinichi Shinohara, Emmanuel Yarborough]"
What are the 4 most common cities of participation?,Return a list containing the top 4 most frequent values in the City column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
city_counts = dataset['City'].value_counts()
top_4_cities = city_counts.head(4).index.tolist()

return top_4_cities
",list of string,"['London', 'Athina', 'Sydney', 'Atlanta']","[London, Athina, Sydney, Atlanta]"
What are the names of the top 2 athletes who participated in the most number of games?,Can you return a list containing the names of the two athletes with the highest number of games participated in?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
athletes_sorted = db.sort_values(by='Games', ascending=False)
top_two_athletes = athletes_sorted.head(2)['Name'].tolist()

return top_two_athletes
",list of string,"['Carl Galle', 'John Mary Pius Boland']","[Robert Tait McKenzie, Heikki Ilmari Savolainen]"
What are the top five most common ages of athletes?,Retrieve the five most frequent values present in the Age column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
age_counts = dataset['Age'].value_counts()
most_frequent_ages = age_counts.nlargest(5).index.tolist()

return most_frequent_ages
",list of (float64),"[23.0, 24.0, 22.0, 25.0, 21.0]","[23.0, 24.0, 22.0, 25.0, 21.0]"
What are the three highest weights of athletes?,Retrieve the top three largest values from the Weight column in the dataset.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_three_weights = db['Weight'].nlargest(3).tolist()

return top_three_weights
",list of (float64),"[214.0, 214.0, 198.0]","[214.0, 198.0, 190.0]"
What are the 4 most common years of participation?,Return a list containing the four most frequent values present in the Year column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
year_counts = db['Year'].value_counts()
most_frequent_years = year_counts.nlargest(4).index.tolist()

return most_frequent_years
",list of (uint16),"[1992, 1988, 2000, 1996]","[1992, 1988, 2000, 1996]"
What are the three most common heights of athletes?,Return a list containing the three most frequent values present in the Height column.,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
height_counts = db['Height'].value_counts()
top_three_heights = height_counts.head(3).index.tolist()

return top_three_heights
",list of (float64),"[180.0, 170.0, 178.0]","[180.0, 170.0, 178.0]"
Does the dataset contain customers who are under the age of 18?,Are there any customers in the dataset whose customer_age is less than 18?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
customers_under_18 = dataset[dataset[""customer_age""] < 18]
result = len(customers_under_18) > 0

return result
",bool,False,False
Are there any customers with a total transaction amount of zero?,Is there any customer whose total transaction amount is equal to zero?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
is_zero_transaction = (db[""total_trans_amt""] == 0).any()

return is_zero_transaction
",bool,False,False
"Does the dataset include customers with a credit limit exceeding $50,000?",Are there any customers in the dataset whose credit limit is greater than 50000.0?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
credit_limit_greater_than_50000 = db[db[""credit_limit""] > 50000.0]
if len(credit_limit_greater_than_50000) > 0:
return True
else:
return False
",bool,False,False
Are there any customers in the dataset who are inactive for more than 12 months?,Is there any customer whose months_inactive_12_mon value is greater than 12?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
inactive_customers = db[db[""months_inactive_12_mon""] > 12]
if len(inactive_customers) > 0:
return True
else:
return False
",bool,False,False
What is the highest credit limit in the dataset?,What is the maximum value present in the credit_limit column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
answer = db[""credit_limit""].max()
return answer
",float64,34516.0,34516.0
What is the maximum total transaction amount recorded?,What is the largest value in the total_trans_amt column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
largest_total_trans_amt = dataset[""total_trans_amt""].max()

return largest_total_trans_amt
",float64,18484,18484
What is the largest total revolving balance in the dataset?,What is the maximum value found in the total revolving bal column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
answer = db[""total_revolving_bal""].max()
return answer
",float64,2517,2517
What is the highest customer age in the dataset?,What is the maximum value of the customer_age column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
max_age = db[""customer_age""].max()

return max_age
",float64,73,73
What is the most common level of education among the customers?,Which education level appears most frequently in the education_level column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
education_counts = db['education_level'].value_counts()
most_frequent_education = education_counts.idxmax()

return most_frequent_education
",string,Graduate,Graduate
What is the most common income category of the customers?,Which income category appears most frequently within the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
income_category_counts = db['income_category'].value_counts()
most_frequent_income_category = income_category_counts.idxmax()

return most_frequent_income_category
",string,Less than $40K,Less than $40K
Which gender is most represented among the customers?,What is the most frequent value in the gender column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
most_frequent_gender = db['gender'].mode()[0]

return most_frequent_gender
",string,F,F
What is the most common attrition flag value?,Which attrition flag value appears most frequently in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
attrition_counts = db['attrition_flag'].value_counts()
most_frequent_attrition = attrition_counts.idxmax()

return str(most_frequent_attrition)
",string,0,0
What are the top 3 most common education levels among the customers?,Can you provide a ranked list of the three most frequent values present in the education_level column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
education_level_counts = db['education_level'].value_counts()
top_three_education_levels = education_level_counts.nlargest(3).index.tolist()

return top_three_education_levels
",list of string,"['Graduate', 'High School', 'Unknown']","['Graduate', 'High School', 'Unknown']"
Which are 4 most frequent income categories?,What are the top 4 most common values present in income_category column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
top_4_income_categories = db['income_category'].value_counts().nlargest(4).index.tolist()

return top_4_income_categories
",list of string,"['Less than $40K', '$40K - $60K', '$80K - $120K', '$60K - $80K']","['Less than $40K', '$40K - $60K', '$80K - $120K', '$60K - $80K']"
Which are the top 3 most frequent income categories?,What are the three income categories that appear most often in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
income_counts = dataset['income_category'].value_counts()
top_three_categories = income_counts.nlargest(3).index.tolist()

return top_three_categories
",list of string,"['Less than $40K', '$40K - $60K', '$80K - $120K']","['Less than $40K', '$40K - $60K', '$80K - $120K']"
Which are the two most frequent income categories?,What are the two most common values found in the income_category column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
income_category_counts = db['income_category'].value_counts()
most_common_values = income_category_counts.head(2).index.tolist()

return most_common_values
",list of string,"['Less than $40K', '$40K - $60K']","['Less than $40K', '$40K - $60K']"
How old are the 5 oldest customers in the dataset?,What are the customer ages corresponding to the 5 largest values in the customer_age column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
ages = db['customer_age'].tolist()
ages.sort(reverse=True)
top_5_ages = ages[:5]

return top_5_ages
",list of (float64),"[73, 70, 68, 67, 67]","[73, 70, 68, 67, 67]"
What are the five customer IDs with the highest credit limit?,"Return a list containing the five smallest values from the credit_limit column, corresponding to customer IDs.","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
smallest_credit_limits = db.nlargest(5, 'credit_limit')['id'].tolist()

return smallest_credit_limits
",list of (uint16),"[6142, 8479, 1571, 6788, 2933]","[34516.0, 34516.0, 34516.0, 34516.0, 34516.0]"
Who are the 6 customers with the highest total transaction amount?,Retrieve the customer IDs of the top 6 customers based on their total transaction amount.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_6_customers = dataset.nlargest(6, 'total_trans_amt')['id'].tolist()

return top_6_customers
",list of (string),"[9667, 6883, 5578, 4026, 5500, 1160]","[18484, 17744, 17634, 17498, 17437, 17350]"
Who are the six customer ids with the highest total revolving balance?,,,,ERROR,"[2517, 2517, 2517, 2517, 2517, 2517]"
"Are there any job positions available in 'New York, NY'?","Do any jobs have a location of 'New York, NY'?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
new_york_jobs = dataset[dataset['Location'] == 'New York, NY']
if len(new_york_jobs) > 0:
return True
else:
return False
",bool,True,True
Are there any job listings from companies founded before 1900?,Is there at least one job listing where the founded year is less than 1900?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
founded_before_1900 = dataset[dataset[""Founded""] < 1900]
if len(founded_before_1900) > 0:
return True
else:
return False
",bool,True,True
Are there any job listings that require Python skills?,Is there at least one job listing where the python_yn column is equal to 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
has_python = dataset[dataset[""python_yn""] == 1]
if len(has_python) > 0:
return True
else:
return False
",bool,True,True
Is there a job listing for a 'Data Engineer' role?,Does any row in the dataset have a 'Job Title' that is equal to 'Data Engineer'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
data_engineer_exists = dataset['Job Title'].isin(['Data Engineer']).any()

return data_engineer_exists
",bool,True,True
How many unique job titles are listed?,,,,ERROR,264
"On average, how old are the companies that have job listings?",Calculate the mean of the age column for companies that have job listings in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
mean_age = dataset[""age""].mean()

return mean_age
",float64,46.591644000000000,46.591644000000000
What's the highest rating a company has received?,What is the maximum value present in the Rating column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_rating = dataset[""Rating""].max()

return max_rating
",float64,5.0,5.0
How many job listings are there from 'Government' type of ownership?,What is the count of job listings where the 'Type of ownership' column has a value equal to 'Government'?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
government_jobs = db[db['Type of ownership'] == 'Government']
count = len(government_jobs)

return count
",int64,15,15
Which job title has the highest average salary?,,,,ERROR,"Director II, Data Science - GRM Actuarial"
Which state has the most number of job listings?,What is the value of job_state with the highest count in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
job_state_counts = dataset['job_state'].value_counts()
most_frequent_job_state = job_state_counts.index[0]

return most_frequent_job_state
",category, CA, CA
From which sector is the job listing with the highest salary?,What is the value of the Sector column for the job listing that has the highest avg_salary?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
highest_avg_salary_job = db.loc[db[""avg_salary""] == db[""avg_salary""].max()]
sector_value = highest_avg_salary_job[""Sector""].iloc[0]

return sector_value
",string,Insurance,Insurance
Which company size has the most job listings?,What is the most frequent value present in the Size column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
size_counts = dataset['Size'].value_counts()
most_frequent_size = size_counts.idxmax()

return most_frequent_size
",category,1001 to 5000 employees,1001 to 5000 employees
Which are the top 3 sectors with the most job listings?,Return a list containing the names of the three sectors that have the highest count of job listings in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sector_counts = dataset['Sector'].value_counts()
top_3_sectors = sector_counts.nlargest(3).index.tolist()

return top_3_sectors
",list of (category),"['Information Technology', 'Biotech & Pharmaceuticals', 'Business Services']","['Information Technology', 'Biotech & Pharmaceuticals', 'Business Services']"
List the 4 most common industries in the dataset.,What are the top 4 most frequent values present in the Industry column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
industry_counts = db['Industry'].value_counts()
top_4_industries = industry_counts.head(4).index.tolist()

return top_4_industries
",list of (string),"['Biotech & Pharmaceuticals', 'Insurance Carriers', 'Computer Hardware & Software', 'IT Services']","['Biotech & Pharmaceuticals', 'Insurance Carriers', 'Computer Hardware & Software', 'IT Services']"
Which 5 states have the most number of job listings?,Return a list containing the names of the top 5 job_state values when sorted by the count of occurrences in descending order.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
job_state_counts = dataset['job_state'].value_counts()
top_5_job_states = job_state_counts.head(5).index.tolist()

return top_5_job_states
",list of (category),"[' CA', ' MA', ' NY', ' VA', ' IL']","[' CA', ' MA', ' NY', ' VA', ' IL']"
List the 3 company sizes with the least number of job listings.,Retrieve the three company sizes that have the fewest job listings in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
company_size_counts = dataset['Size'].value_counts()
sorted_sizes = company_size_counts.sort_values(ascending=True).index.tolist()

return sorted_sizes[:3]
",list of (category),"['-1', 'Unknown', '1 to 50 employees']","['-1', '1 to 50 employees', 'Unknown']"
What are the top 4 average salaries for job titles in the dataset?,"Retrieve the four highest average salaries from the dataset, along with their corresponding job titles.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_salaries = dataset.nlargest(4, 'avg_salary')[['Job Title', 'avg_salary']]
answer = top_salaries['avg_salary'].tolist()

return answer
",list of (float64),"[254.0, 254.0, 254.0, 237.5]","[254.0, 232.5, 225.0, 205.0]"
List the year the 3 oldest companies that have job listings were founded.,Retrieve the Founded year for the three companies with the highest age values from the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sorted_companies = dataset.sort_values(by='age', ascending=False).head(3)
founded_years = sorted_companies['Founded'].tolist()

return founded_years
",list of (int16),"[1744, 1781, 1781]","[1744, 1781, 1781]"
Which are the highest 3 ratings given?,What are the three largest values present in the Rating column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_three_ratings = dataset['Rating'].nlargest(3).tolist()

return top_three_ratings
",list of (float64),"[5.0, 5.0, 5.0]","[5.0, 5.0, 5.0]"
List the average salaries of the 6 most recent companies.,Calculate the mean of the avg_salary column for the 6 companies with the largest Founded values.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sorted_companies = dataset.sort_values(by='Founded', ascending=False)
top_6_companies = sorted_companies.head(6)
mean_avg_salary = top_6_companies['avg_salary'].mean()

return mean_avg_salary
",float64,107.75,"[78.0, 88.5, 110.0, 40.5, 132.5, 20.5]"
Are there any authors in the dataset who have more followers than people they are following?,,,,ERROR,True
Is there any tweet in the dataset that has more replies<gx:number> than retweets<gx:number>?,,,,ERROR,True
Are there any verified users who have tweeted in a language other than English?,,,,ERROR,True
Does the dataset contain any tweets that include image links?,,,,ERROR,True
How many unique authors are present in the dataset?,,,,ERROR,1
What is the highest number of retweets<gx:number> a single tweet has received?,,,,ERROR,117386
What is the average number of favorites per tweet?,,,,ERROR,5081.805590000000
What's the total number of tweets from verified users?,,,,ERROR,3220
Which author has the most tweets in the dataset?,,,,ERROR,3131144855
Which language is most commonly used in the tweets?,,,,ERROR,en
What is the most common source of tweets?,,,,ERROR,"<a href=""http://twitter.com/download/iphone"" rel=""nofollow"">Twitter for iPhone</a>"
"Which type of tweet (e.g., original, retweet, quote) is most common in the dataset?",,,,ERROR,original
Who are the top three authors (by ID) with the most followers?,,,,ERROR,"[3131144855, 3131144855, 3131144855]"
What are the top five most frequently mentioned names in the tweets?,,,,ERROR,"['G7', 'foreignoffice', 'UN', 'Conservatives', 'COP26']"
List the top four most commonly used languages in the tweets.,,,,ERROR,"['en', 'und', 'fr', 'es']"
What are the highest three numbers of followers count present in the dataset?,,,,ERROR,"[3543402, 3543402, 3543402]"
What are the bottom four numbers of favorites count?,,,,ERROR,"[7, 7, 8, 9]"
List the top six numbers of retweets.,,,,ERROR,"[117386, 53527, 35698, 31449, 24824, 19982]"
What are the bottom five numbers of replies?,,,,ERROR,"[2, 2, 3, 3, 4]"
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
,,,,,
