Question,Rewritten Question,Code,Answer Type,Generated Answer,Expected Answer
Is the person with the highest net worth self-made?,Does the individual with the greatest final worth have the self made attribute marked as True?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_worth_individual = dataset.loc[dataset[""finalWorth""] == dataset[""finalWorth""].max()]
    is_self_made = max_worth_individual[""selfMade""].bool()
    return is_self_made
",bool,True,True
Does the youngest billionaire identify as male?,Is the gender of the youngest billionaire recorded as male?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    youngest_billionaire = dataset.loc[dataset[""age""] == dataset[""age""].min()]
    is_male = youngest_billionaire[""gender""].iloc[0] == ""male""
    return is_male
",bool,False,True
Is the city with the most billionaires in the United States?,Does the city with the highest count of billionaires belong to the United States?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    city_counts = dataset['city'].value_counts()
    top_city = city_counts.idxmax()
    top_city_country = dataset[dataset['city'] == top_city]['country'].iloc[0]
    is_us = (top_city_country == 'United States')
    
    return is_us
",bool,True,True
Is there a non-self-made billionaire in the top 5 ranks?,"Among the top 5 ranked billionaires, is there at least one individual with selfMade attribute set to False?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5 = dataset[dataset[""rank""] <= 5]
    has_non_self_made = (top_5[""selfMade""] == False).any()
    
    return has_non_self_made
",bool,True,True
Does the oldest billionaire have a philanthropy score of 5?,Is the philanthropy score of the billionaire with the highest age equal to 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_age_individual = dataset.loc[dataset[""age""] == dataset[""age""].max()]
    philanthropy_score = max_age_individual[""philanthropyScore""].values[0]
    is_equal_to_5 = (philanthropy_score == 5)
    
    return is_equal_to_5
",bool,False,False
What is the age of the youngest billionaire?,What is the minimum age value among all billionaires in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_age = dataset[""age""].min()
    return min_age
",float64,19.0,19.0
How many billionaires are there from the 'Technology' category?,What is the count of billionaires whose category is 'Technology'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    tech_billionaires_count = dataset[dataset['category'] == 'Technology'].shape[0]
    return tech_billionaires_count
",int64,343,343
What's the total worth of billionaires in the 'Automotive' category?,What is the sum of finalWorth for all billionaires whose category is 'Automotive'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    automotive_billionaires = dataset[dataset['category'] == 'Automotive']
    sum_final_worth = automotive_billionaires['finalWorth'].sum()
    
    return sum_final_worth
",float64,583600,583600
How many billionaires have a philanthropy score above 3?,What is the count of billionaires with philanthropy score greater than 3?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = len(dataset[dataset[""philanthropyScore""] > 3])
    return count
",int64,25,25
What's the rank of the wealthiest non-self-made billionaire?,What is the rank value of the billionaire with the highest final worth who has self made attribute set to False?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    non_self_made = dataset[dataset[""selfMade""] == False]
    max_worth_non_self_made = non_self_made.loc[non_self_made[""finalWorth""] == non_self_made[""finalWorth""].max()]
    rank_value = max_worth_non_self_made[""rank""].iloc[0]
    
    return rank_value
",uint16,3,3
Which category does the richest billionaire belong to?,What is the category of the billionaire with the highest final worth?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_worth_individual = dataset.loc[dataset[""finalWorth""] == dataset[""finalWorth""].max()]
    category = max_worth_individual[""category""].iloc[0]
    
    return category",category,Automotive,Automotive
What's the country of origin of the oldest billionaire?,From which country does the billionaire with the highest age come from?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_age_individual = dataset.loc[dataset[""age""] == dataset[""age""].max()]
    country = max_age_individual[""country""].iloc[0]
    
    return country",string,United States,United States
What's the gender of the billionaire with the highest philanthropy score?,What is the gender value of the individual who has the maximum philanthropy score in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_philanthropy_individual = dataset.loc[dataset[""philanthropyScore""] == dataset[""philanthropyScore""].max()]
    gender_value = max_philanthropy_individual[""gender""].iloc[0]
    
    return gender_value
",string,M,M
What's the source of wealth for the youngest billionaire?,What is the source of wealth for the billionaire with the minimum age?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_age_individual = dataset.loc[dataset[""age""] == dataset[""age""].min()]
    source_of_wealth = min_age_individual[""source""].iloc[0]
    
    return source_of_wealth",string,drugstores,drugstores
What is the title of the billionaire with the lowest rank?,What is the title of the individual who has the smallest rank value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_rank_individual = dataset.loc[dataset[""rank""] == dataset[""rank""].min()]
    title = min_rank_individual[""title""].iloc[0]
    
    return title
",string,CEO,
List the top 3 countries with the most billionaires.,What are the names of the top 3 countries with the highest number of billionaires?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    country_counts = dataset['country'].value_counts().head(3)
    top_countries = country_counts.index.tolist()
    return top_countries",list of string,"['United States', 'China', 'India']","['United States', 'China', 'India']"
List the top 2 most common sources of wealth for billionaires.,What are the two most frequently occurring values in the source column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    source_counts = dataset['source'].value_counts()
    top_two_sources = source_counts.head(2).index.tolist()
    return top_two_sources",list of string,"['real estate', 'investments']","['real estate', 'investments']"
List the 4 cities where the four youngest billionaires live.,What are the names of the 4 cities where the billionaires with the lowest age values reside?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_by_age = dataset.sort_values(by='age', ascending=True)
    youngest_billionaires = sorted_by_age.head(4)
    cities = youngest_billionaires['city'].tolist()
    
    return cities
",list of string,"[nan, 'Oslo', 'Jiaozuo', 'Los Angeles']","['', 'Los Angeles', 'Jiaozuo', 'Oslo']"
List the 4 categories with the fewest billionaires.,What are the 4 least common categories among the billionaires in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    category_counts = dataset['category'].value_counts().nsmallest(4)
    least_common_categories = category_counts.index.tolist()
    
    return least_common_categories
",list of string,"['Gambling & Casinos', 'Sports', 'Logistics', 'Telecom']","['Telecom', 'Logistics', 'Sports', 'Gambling & Casinos']"
List the 2 countries with the least number of billionaires. If there are more than two with the same number take the first two alphabetically.,"Return the names of the two countries that have the smallest count of billionaires, selecting the first two alphabetically in case of ties.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    country_counts = dataset['country'].value_counts().sort_values()
    min_count = country_counts.min()
    smallest_countries = country_counts[country_counts == min_count].index.sort_values()[:2].tolist()
    return smallest_countries",list of string,"['Colombia', 'Eswatini (Swaziland)']","['Algeria', 'Andorra']"
List the top 5 ranks of billionaires who are not self-made.,What are the ranks of the top 5 billionaires where selfMade is False?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    non_self_made = dataset[dataset[""selfMade""] == False]
    top_5_non_self_made = non_self_made.sort_values(by=""rank"").head(5)
    ranks = top_5_non_self_made[""rank""].tolist()
    
    return ranks
",list of (uint16),"[3, 10, 14, 16, 18]","[3, 10, 14, 16, 18]"
List the youngest 3 ages of billionaires who have a philanthropy score of 5.,What are the three smallest ages of billionaires with a philanthropy score equal to 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    philanthropists = dataset[dataset['philanthropyScore'] == 5]
    sorted_ages = philanthropists['age'].sort_values().head(3)
    smallest_ages = sorted_ages.tolist()
    
    return smallest_ages
",list of float64,"[48.0, 83.0, 83.0]","[48.0, 83.0, 83.0]"
List the highest 6 final worth values of billionaires in the 'Technology' category.,What are the top 6 final worth values for billionaires whose category is 'Technology'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    tech_billionaires = dataset[dataset['category'] == 'Technology']
    top_6_values = tech_billionaires.nlargest(6, 'finalWorth')['finalWorth'].tolist()
    return top_6_values
",list of int64,"[171000, 129000, 111000, 107000, 106000, 91400]","[171000, 129000, 111000, 107000, 106000, 91400]"
List the top 4 ranks of female billionaires.,What are the rank values of the top 4 female billionaires in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    female_billionaires = dataset[dataset[""gender""] == ""female""]
    top_4_female = female_billionaires.nsmallest(4, ""rank"")
    ranks = top_4_female[""rank""].tolist()
    
    return ranks",list of int64,[],"[14, 18, 21, 30]"
List the top 2 final worth values of billionaires in the 'Automotive' category.,What are the two highest final worth values among billionaires categorized under 'Automotive'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    automotive_billionaires = dataset[dataset['category'] == 'Automotive']
    top_two_worth = automotive_billionaires.nlargest(2, 'finalWorth')['finalWorth'].tolist()
    return top_two_worth",list of (uint32),"[219000, 44800]","[219000, 44800]"
Did any children below the age of 18 survive?,Were there any survivors with age less than 18?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    young_survivors = dataset[(dataset['Age'] < 18) & (dataset['Survived'] == True)]
    has_young_survivors = not young_survivors.empty
    
    return has_young_survivors",bool,True,True
Were there any passengers who paid a fare of more than $500?,Are there any passengers with a fare value greater than 500?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_fare = (dataset[""Fare""] > 500).any()
    return has_high_fare",bool,True,True
Is every passenger's name unique?,Are all passenger names in the dataset distinct with no duplicates?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_names = dataset['Name'].nunique()
    total_passengers = len(dataset)
    all_names_distinct = unique_names == total_passengers
    
    return all_names_distinct
",bool,True,True
Were there any female passengers in the 3rd class who survived?,Did any female passengers in Pclass 3 have Survived set to True?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    female_pclass3 = dataset[(dataset['Sex'] == 'female') & (dataset['Pclass'] == 3)]
    any_survived = female_pclass3['Survived'].any()
    
    return any_survived",bool,True,True
How many unique passenger classes are present in the dataset?,What is the count of distinct passenger classes in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_pclass_count = dataset[""Pclass""].nunique()
    return distinct_pclass_count
",int64,3,3
What's the maximum age of the passengers?,What is the highest age value among all passengers in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_age = dataset[""Age""].max()
    return max_age",float64,80.0,80.0
How many passengers boarded without any siblings or spouses?,What is the count of passengers who had zero siblings or spouses aboard?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = len(dataset[dataset[""Siblings_Spouses Aboard""] == 0])
    return count
",int64,604,604
"On average, how much fare did the passengers pay?",What is the average fare paid by the passengers?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_fare = dataset[""Fare""].mean()
    return average_fare",float64,32.30542000000000,32.31
Which passenger class has the highest number of survivors?,What is the passenger class (Pclass) with the maximum count of survivors (Survived = True)?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    survivors = dataset[dataset['Survived'] == True]
    class_counts = survivors['Pclass'].value_counts()
    max_class = class_counts.idxmax()
    
    return max_class
",int64,1,1
What's the most common gender among the survivors?,Which gender value appears most frequently among the survivors in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    survivors = dataset[dataset[""Survived""] == True]
    gender_counts = survivors[""Sex""].value_counts()
    most_frequent_gender = gender_counts.idxmax()
    
    return most_frequent_gender",string,female,female
"Among those who survived, which fare range was the most common: (0-50, 50-100, 100-150, 150+)?","What is the most frequent fare range (0-50, 50-100, 100-150, 150+) among the survivors?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    survivors = dataset[dataset['Survived'] == True]
    fare_bins = [0, 50, 100, 150, float('inf')]
    fare_labels = ['0-50', '50-100', '100-150', '150+']
    survivors['fare_range'] = pd.cut(survivors['Fare'], bins=fare_bins, labels=fare_labels)
    most_frequent_range = survivors['fare_range'].value_counts().idxmax()
    
    return most_frequent_range",string,0.0-50,0.0-50
"What's the most common age range among passengers: (0-18, 18-30, 30-50, 50+)?","Which age range (0-18, 18-30, 30-50, 50+) has the highest number of passengers?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    bins = [0, 18, 30, 50, float('inf')]
    labels = ['0-18', '18-30', '30-50', '50+']
    dataset['age_range'] = pd.cut(dataset['Age'], bins=bins, labels=labels, right=False)
    age_counts = dataset['age_range'].value_counts()
    max_age_range = age_counts.idxmax()
    
    return max_age_range",string,18.0-30,18.0-30
Name the top 3 passenger classes by survival rate.,What are the top 3 passenger classes when ordered by survival rate?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    survival_rates = dataset.groupby('Pclass')['Survived'].mean().sort_values(ascending=False)
    top_classes = survival_rates.head(3).index.tolist()
    top_classes_str = [str(cls) for cls in top_classes]
    
    return top_classes_str",list of string,"['1', '2', '3']","[1, 2, 3]"
"Could you list the 3 fare ranges present in the dataset with the least survivors: (0-50, 50-100, 100-150, 150+)?","What are the 3 fare ranges (0-50, 50-100, 100-150, 150+) that have the lowest number of survivors?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Create fare ranges
    bins = [0, 50, 100, 150, float('inf')]
    labels = ['0-50', '50-100', '100-150', '150+']
    dataset['fare_range'] = pd.cut(dataset['Fare'], bins=bins, labels=labels, right=False)
    
    # Filter survivors and count by fare range
    survivors = dataset[dataset['Survived'] == True]
    fare_counts = survivors['fare_range'].value_counts().sort_values()
    
    # Get the 3 fare ranges with lowest survivor counts
    lowest_fare_ranges = fare_counts.head(3).index.tolist()
    
    return lowest_fare_ranges",list of (string),"['100-150', '150+', '50-100']","['50-100', '150+', '100-150']"
"What are the top 4 age ranges ('30-50', '18-30', '0-18', '50+') with the highest number of survivors?","Which 4 age ranges ('30-50', '18-30', '0-18', '50+') have the highest count of survivors?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    survivors = dataset[dataset['Survived'] == True]
    age_range_counts = survivors['age_range'].value_counts()
    top_4_age_ranges = age_range_counts.nlargest(4).index.tolist()
    
    return top_4_age_ranges
",list of string,"['30-50', '18-30', '0-18', '50+']","['30-50', '18-30', '0-18', '50+']"
What are the top 2 genders by average fare paid?,Which two genders have the highest average fare values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_fare_by_gender = dataset.groupby('Sex')['Fare'].mean().sort_values(ascending=False)
    top_two_genders = avg_fare_by_gender.head(2).index.tolist()
    
    return top_two_genders",list of string,"['female', 'male']","['female', 'male']"
What are the oldest 3 ages among the survivors?,Return the top 3 highest ages from the passengers who survived.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    survived_passengers = dataset[dataset[""Survived""] == True]
    top_ages = survived_passengers[""Age""].nlargest(3).tolist()
    return top_ages
",list of (float64),"[80.0, 63.0, 63.0]","[80, 63, 63]"
Which are the top 4 fares paid by survivors?,What are the four highest fare amounts paid by passengers who survived?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    survived_passengers = dataset[dataset[""Survived""] == True]
    top_fares = survived_passengers.nlargest(4, ""Fare"")[""Fare""].tolist()
    return top_fares",list of float64,"[512.3292, 512.3292, 512.3292, 263.0]","[512.329, 512.329, 512.329, 263]"
Could you list the youngest 3 ages among the survivors?,What are the three smallest ages present in the data for individuals who survived?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    survivors = dataset[dataset[""Survived""] == True]
    smallest_ages = survivors[""Age""].nsmallest(3).tolist()
    return smallest_ages
",list of (float64),"[1.0, 1.0, 1.0]","[1, 1, 1]"
Which are the lowest 4 fares among those who didn't survive?,What are the four smallest fare values for passengers who did not survive?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    non_survivors = dataset[dataset[""Survived""] == False]
    sorted_fares = non_survivors[""Fare""].sort_values().head(4)
    smallest_fares = sorted_fares.tolist()
    
    return smallest_fares
",list of (float64),"[0.0, 0.0, 0.0, 0.0]","[0, 0, 0, 0]"
Is the average age of the respondents above 30?,Is the mean value of the age column greater than 30?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_age = dataset[""What is your age? 👶🏻👵🏻""].mean()
    is_greater_than_30 = mean_age > 30
    return is_greater_than_30
",bool,True,True
Are there more single individuals than married ones in the dataset?,Is the count of individuals with civil status 'single' greater than those with civil status 'married' in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    single_count = dataset[dataset[""What is your civil status? 💍""] == ""single""].shape[0]
    married_count = dataset[dataset[""What is your civil status? 💍""] == ""married""].shape[0]
    is_single_greater = single_count > married_count
    return is_single_greater
",bool,False,True
Do the majority of respondents have a height greater than 170 cm?,Is the count of respondents with height greater than 170 cm more than half of the total respondents?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_respondents = len(dataset)
    tall_respondents = len(dataset[dataset[""What's your height? in cm 📏""] > 170])
    is_more_than_half = tall_respondents > (total_respondents / 2)
    
    return is_more_than_half
",bool,True,True
Is the most frequent hair color black?,Is the mode of the hair color column equal to black?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    hair_color_mode = dataset[""What is your hair color? 👩🦰👱🏽""].mode()[0]
    is_black = (hair_color_mode == ""black"")
    
    return is_black
",bool,False,False
How many unique nationalities are present in the dataset?,What is the count of distinct nationalities in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_nationalities_count = dataset[""What's your nationality?""].nunique()
    return distinct_nationalities_count
",int64,13,13
What is the average gross annual salary?,Calculate the mean value of the gross annual salary in euros.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_salary = dataset[""Gross annual salary (in euros) 💸""].mean()
    return mean_salary",float64,56332.81720400000,56332.81720400000
How many respondents wear glasses all the time?,What is the count of respondents who wear glasses all the time according to the 'How often do you wear glasses?' column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    glasses_count = dataset[dataset[""How often do you wear glasses? 👓""] == ""All the time""].shape[0]
    return glasses_count
",int64,0,98
What's the median age of the respondents?,What is the median value of the age column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    median_age = dataset[""What is your age? 👶🏻👵🏻""].median()
    return median_age
",float64,33.0,33.0
What is the most common level of studies achieved?,What is the mode value of the maximum level of studies achieved among the respondents?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mode_studies = dataset[""What is the maximum level of studies you have achieved? 🎓""].mode()[0]
    return mode_studies
",string,Master,Master
Which body complexity has the least number of respondents?,Which body complexity category has the smallest count of respondents?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    body_complexity_counts = dataset[""What is your body complexity? 🏋️""].value_counts()
    smallest_category = body_complexity_counts.idxmin()
    
    return smallest_category",string,Very thin,Very thin
What's the most frequent eye color?,Which eye color appears most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    eye_color_counts = dataset[""What is your eye color? 👁️""].value_counts()
    most_frequent_eye_color = eye_color_counts.idxmax()
    
    return most_frequent_eye_color",string,Brown,Brown
Which sexual orientation has the highest representation?,What is the most frequently occurring sexual orientation in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_orientation = dataset[""What's your sexual orientation?""].mode()[0]
    return most_frequent_orientation
",string,Heterosexual,Heterosexual
List the top 3 most common areas of knowledge.,What are the three most frequently occurring values in the 'What area of knowledge is closer to you?' column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_areas = dataset['What area of knowledge is closer to you?'].value_counts().head(3).index.tolist()
    return top_areas
",list of string,"[array(['Computer Science'], dtype=object), array(['Business'], dtype=object), array(['Enginering & Architecture'], dtype=object)]","['Computer Science', 'Business', 'Enginering & Architecture']"
List the bottom 3 hair lengths in terms of frequency.,What are the three least common hair length categories in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    hair_length_counts = dataset[""How long is your hair? 💇🏻♀️💇🏽♂️""].value_counts()
    least_common_hair_lengths = hair_length_counts.nsmallest(3).index.tolist()
    return least_common_hair_lengths
",list of (string),"['Bald', 'Long', 'Medium']","['Medium', 'Long', 'Bald']"
Name the top 5 civil statuses represented in the dataset.,What are the 5 most common civil status categories in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    civil_status_counts = dataset[""What is your civil status? 💍""].value_counts()
    top_5_civil_status = civil_status_counts.head(5).index.tolist()
    return top_5_civil_status",list of string,"['Single', 'Married', 'In a Relationship', 'In a Relationship Cohabiting', 'Divorced']","['Single', 'Married', 'In a Relationship', 'In a Relationship Cohabiting', 'Divorced']"
What are the 4 least common hair colors?,Retrieve the four hair colors that appear least frequently in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    hair_color_counts = dataset[""What is your hair color? 👩🦰👱🏽""].value_counts()
    least_common_hair_colors = hair_color_counts.nsmallest(4).index.tolist()
    return least_common_hair_colors",list of (string),"['Blue', 'White', 'Other', 'Red']","['Red', 'Other', 'White', 'Blue']"
What are the top 4 maximum gross annual salaries?,Retrieve the four highest values from the Gross annual salary column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_salaries = dataset[""Gross annual salary (in euros) 💸""].nlargest(4).tolist()
    return top_salaries
",list of float64,"[500000.0, 360000.0, 300000.0, 300000.0]","[500000.0, 360000.0, 300000.0, 300000.0]"
Name the 3 happiness values for the 3 unhappiest people in the happiness scale.,What are the happiness scale values for the three individuals with the lowest happiness scores?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_data = dataset.sort_values(by=""Happiness scale"")
    lowest_happiness = sorted_data[""Happiness scale""].head(3).tolist()
    return lowest_happiness
",list of (uint8),"[2, 2, 2]","[2, 2, 2]"
What are the 5 highest ages present in the dataset?,Retrieve the top 5 highest values from the 'What is your age? 👶🏻👵🏻' column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_ages = dataset['What is your age? 👶🏻👵🏻'].nlargest(5).tolist()
    return top_ages
",list of (uint8),"[65, 62, 60, 60, 59]","[65, 62, 60, 60, 59]"
List the bottom 6 skin tone values based on frequency.,What are the 6 least frequent skin tone values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    skin_tone_counts = dataset['What is your skin tone?'].value_counts().nsmallest(6)
    least_frequent_skin_tones = skin_tone_counts.index.tolist()
    return least_frequent_skin_tones
",list of uint8,"[8, 7, 0, 6, 1, 2]","[2, 1, 6, 0, 7, 8]"
Are there any trips with a total distance greater than 30 miles?,Does the dataset contain any records where the trip distance exceeds 30 miles?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_long_trip = (dataset[""trip_distance""] > 30).any()
    return has_long_trip",bool,False,False
Were there any trips that cost more than $100 in total?,Are there any records where the total_amount exceeds 100 dollars?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_records = (dataset[""total_amount""] > 100).any()
    return has_records
",bool,False,False
Is there any trip with more than 6 passengers?,Are there any records in the dataset where the passenger count exceeds 6?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_records = (dataset[""passenger_count""] > 6).any()
    return has_records",bool,False,False
Did all the trips use a payment type of either 1 or 2?,Are all the trips in the dataset paid using payment type 1 or 2?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_payment_types = dataset[""payment_type""].unique()
    all_valid = all(pt in {1, 2} for pt in unique_payment_types)
    
    return all_valid
",bool,False,False
What is the maximum fare amount charged for a trip?,What is the highest value in the fare_amount column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_fare = dataset[""fare_amount""].max()
    return max_fare
",float64,75.25,75.25
How many unique pickup locations are in the dataset?,What is the count of distinct PULocationID values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_pulocation_count = dataset[""PULocationID""].nunique()
    return distinct_pulocation_count
",int64,96,96
What is the average tip amount given by passengers?,Calculate the mean of the tip amount column for all passengers.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_tip_amount = dataset[""tip_amount""].mean()
    return mean_tip_amount
",float64,2.7366810000000000,2.74
How many trips took place in the airport area?,What is the count of trips where the pickup or dropoff location is in the airport area?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    airport_trips = dataset[(dataset['PULocationID'] == 1) | (dataset['DOLocationID'] == 1)]
    count = len(airport_trips)
    
    return count",int64,0,99807
Which payment type is the most common in the dataset?,What is the payment type that occurs most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    payment_type_counts = dataset[""payment_type""].value_counts()
    most_frequent_payment_type = payment_type_counts.idxmax()
    
    return most_frequent_payment_type",uint8,1,1
Which vendor has the most trips recorded?,What is the VendorID with the highest count of trips in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    vendor_counts = dataset['VendorID'].value_counts()
    max_vendor = vendor_counts.idxmax()
    return str(max_vendor)
",string,2,2
What is the most common drop-off location?,Which drop-off location ID appears most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_dropoff = dataset[""DOLocationID""].mode()[0]
    return most_frequent_dropoff",uint16,236,236
On which date did the first recorded trip occur?,What is the earliest pickup datetime recorded in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    earliest_pickup = dataset[""tpep_pickup_datetime""].min()
    return earliest_pickup","datetime64[us, UTC]",31-01-2023 23:52,31-01-2023
Which are the top 2 most frequent pickup locations?,What are the two most common PULocationID values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_locations = dataset['PULocationID'].value_counts().nlargest(2).index.tolist()
    return top_locations
",list of (uint16),"[161, 237]","[161, 237]"
Name the 4 most common rate codes used.,What are the top 4 rate codes that appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_rate_codes = dataset['RatecodeID'].value_counts().head(4).index.tolist()
    return top_rate_codes
",list of uint8,"[1, 2, 5, 4]","[1, 2, 5, 4]"
list the 2 most frequent store and forward flags.,What are the top 2 most common values in the store_and_fwd_flag column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_values = dataset[""store_and_fwd_flag""].value_counts().head(2).index.tolist()
    return top_values",list of string,"['N', 'Y']","['N', 'Y']"
Identify the top 4 payment types used by frequency,What are the 4 most frequently occurring payment types in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    payment_counts = dataset['payment_type'].value_counts().head(4)
    top_payment_types = payment_counts.index.tolist()
    top_payment_types = [str(payment) for payment in top_payment_types]
    
    return top_payment_types",list of (string),"['1', '2', '4', '3']","[1, 2, 4, 3]"
Report the 4 highest toll amounts paid.,What are the top 4 toll amounts paid in descending order?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_tolls = dataset.nlargest(4, 'tolls_amount')['tolls_amount'].tolist()
    return top_tolls
",list of (float64),"[0, 0, 0, 0]","[0, 0, 0, 0]"
list the top 3 longest trip distances,What are the 3 highest values in the trip distance column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_distances = dataset[""trip_distance""].nlargest(3).tolist()
    return top_distances
",list of float64,"[19.83, 19.74, 19.68]","[19.83, 19.74, 19.68]"
Identify the 5 largest total amounts paid for trips.,What are the top 5 highest values in the total_amount column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_amounts = dataset.nlargest(5, 'total_amount')['total_amount'].tolist()
    return top_5_amounts
",list of float64,"[80.0, 80.0, 80.0, 80.0, 79.55]","[80.0, 80.0, 80.0, 80.0, 80.0]"
Report the 6 highest fare amounts charged.,"What are the top 6 values in the fare_amount column, ordered from highest to lowest?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_fares = dataset['fare_amount'].sort_values(ascending=False).head(6).tolist()
    return top_fares",list of float64,"[75.25, 74.4, 73.0, 73.0, 73.0, 73.0]","[75.25, 74.4, 73.0, 73.0, 73.0, 73.0]"
Are there any complaints made in Brooklyn?,Does the dataset contain any records where the borough is Brooklyn?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_brooklyn = (dataset['borough'] == 'Brooklyn').any()
    return has_brooklyn
",bool,False,True
Do any complaints have 'Dog' as a descriptor?,Are there any complaints where the descriptor field contains the word 'Dog'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_dog_complaints = dataset['descriptor'].str.contains('Dog', case=False, na=False).any()
    return has_dog_complaints",bool,True,True
Were there any complaints raised in April?,Are there any records in the dataset where the complaint was raised in the month of April?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_april_complaints = (dataset['month_name'] == 'April').any()
    return has_april_complaints",bool,True,True
Is the Mayor's office of special enforcement one of the agencies handling complaints?,Does the agency_name column contain 'Mayor's office of special enforcement' for any complaint records?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    contains_agency = (dataset[""agency_name""] == ""Mayor's office of special enforcement"").any()
    return contains_agency
",bool,False,True
How many complaints have been made in Queens?,What is the total count of complaints recorded in the borough of Queens?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    queens_complaints = dataset[dataset[""borough""] == ""Queens""]
    total_count = len(queens_complaints)
    
    return total_count
",int64,0,23110
What's the total number of unique agencies handling complaints?,How many distinct agencies are there in the agency column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_agencies = dataset[""agency""].nunique()
    return distinct_agencies
",int64,22,22
How many complaints were raised at midnight?,What is the count of complaints where the hour is 0?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = dataset[dataset['hour'] == 0].shape[0]
    return count
",int64,14811,14811
How many unique descriptors are present in the dataset?,What is the count of distinct values in the descriptor column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_count = dataset[""descriptor""].nunique()
    return distinct_count
",int64,1131,1131
Which borough has the most complaints?,What is the name of the borough with the highest number of complaints?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    borough_counts = dataset[""borough""].value_counts()
    top_borough = borough_counts.idxmax()
    
    return top_borough
",string,BROOKLYN,BROOKLYN
Which month sees the highest number of complaints?,What is the name of the month with the maximum count of complaints?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    month_counts = dataset['month_name'].value_counts()
    max_month = month_counts.idxmax()
    
    return max_month",string,July,July
Which weekday has the least complaints?,What is the name of the weekday with the minimum number of complaints?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    weekday_counts = dataset['weekday_name'].value_counts()
    min_weekday = weekday_counts.idxmin()
    
    return min_weekday",string,Sunday,Sunday
Which agency is least frequently handling complaints?,What is the name of the agency that has the lowest number of complaints associated with it?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    agency_complaints = dataset['agency_name'].value_counts()
    min_complaints_agency = agency_complaints.idxmin()
    
    return min_complaints_agency
",string,School - PS 207,ACS
List the top 5 most frequent complaint types.,What are the 5 most common complaint types in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_complaints = dataset['complaint_type'].value_counts().head(5).index.tolist()
    return top_complaints
",list of string,"['Noise - Residential', 'HEAT/HOT WATER', 'Illegal Parking', 'Blocked Driveway', 'Street Condition']","['Noise - Residential', 'HEAT/HOT WATER', 'Illegal Parking', 'Blocked Driveway', 'Street Condition']"
Which 4 agencies handle the most complaints?,What are the names of the top 4 agencies with the highest number of complaints?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    agency_counts = dataset['agency_name'].value_counts().head(4)
    top_agencies = agency_counts.index.tolist()
    return top_agencies
",list of string,"['New York City Police Department', 'Department of Housing Preservation and Development', 'Department of Transportation', 'Department of Sanitation']","['NYPD', 'HPD', 'DOT', 'DSNY']"
Name the 2 least frequent descriptors for complaints by inverse alphabetical order.,"What are the two descriptors with the lowest frequency in complaints, sorted in reverse alphabetical order?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    descriptor_counts = dataset['descriptor'].value_counts()
    lowest_freq_descriptors = descriptor_counts.nsmallest(2).index.tolist()
    sorted_descriptors = sorted(lowest_freq_descriptors, reverse=True)
    
    return sorted_descriptors
",list of string,"['Telco Connection Blk', 'Summer Camp']","['Booting Company', 'Ready NY - Businesses', 'Animal']"
Mention the 2 most common weekdays for complaints.,What are the two weekday names that appear most frequently in the complaints data?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    weekday_counts = dataset['weekday_name'].value_counts()
    top_two_weekdays = weekday_counts.head(2).index.tolist()
    return top_two_weekdays",list of (string),"['Tuesday', 'Monday']","['Tuesday', 'Monday']"
What are the top 4 hours with the most complaints?,Which four hours have the highest number of complaints recorded?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    hour_counts = dataset['hour'].value_counts().nlargest(4)
    top_hours = hour_counts.index.tolist()
    return top_hours
",list of (uint8),"[0, 12, 10, 11]","[0, 12, 10, 11]"
State the 3 lowest unique complaint keys.,What are the three smallest distinct values in the unique_key column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_keys = dataset[""unique_key""].drop_duplicates().nsmallest(3)
    answer = [str(key) for key in unique_keys]
    return answer
",list of (string),"['15628852', '15634748', '15634996']","[15628852, 15634748, 15634996]"
Which 2 hours see the least complaints?,What are the two distinct hours during which the fewest complaints were recorded?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    hour_counts = dataset['hour'].value_counts()
    min_complaint_hours = hour_counts.nsmallest(2).index.tolist()
    min_complaint_hours_sorted = sorted(min_complaint_hours)
    
    return min_complaint_hours_sorted
",list of (uint8),"[4, 5]","[6, 2]"
List the 6 highest complaint numbers from the dataset.,Retrieve the top 6 complaint numbers (unique_key) from the dataset in descending order.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_complaints = dataset.nlargest(6, 'unique_key')['unique_key'].tolist()
    return top_complaints
",list of (uint32),"[54954250, 54954040, 54952675, 54950924, 54950765, 54950581]","[54954250, 54954040, 54952675, 54950924, 54950765, 54950581]"
Are all properties in the dataset located in the same neighbourhood?,Do all property listings in the dataset have the same value in the neighbourhood_cleansed column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_neighbourhoods = dataset[""neighbourhood_cleansed""].nunique()
    all_same = unique_neighbourhoods == 1
    
    return all_same",bool,False,False
Do all hosts verify their identity?,Is the host_identity_verified attribute set to True for every host in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    all_verified = (dataset[""host_identity_verified""] == ""t"").all()
    return all_verified",bool,False,False
Are all reviews_per_month values greater than 5?,Is every value in the reviews_per_month column above 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    all_above_5 = (dataset[""reviews_per_month""] > 5).all()
    return all_above_5
",bool,False,False
Are there any listings without a specified room type?,Do any listings have a missing or null value in the room_type column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_null_room_type = dataset[""room_type""].isnull().any()
    return has_null_room_type",bool,False,False
How many unique neighbourhoods are there in the dataset?,What is the count of distinct values in the neighbourhood_cleansed column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_count = dataset[""neighbourhood_cleansed""].nunique()
    return distinct_count
",int64,33,563
How many listings don't have a valid price?,What is the count of listings where the price is not valid?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Convert price to numeric, errors='coerce' will set invalid parsing as NaN
    price_numeric = pd.to_numeric(dataset['price'], errors='coerce')
    # Count the number of NaN values which represent invalid prices
    invalid_price_count = price_numeric.isna().sum()
    
    return invalid_price_count
",int64,75241,0
How many properties have received the worst possible (0-5) review score for communication?,What is the count of properties that have a review score of 0 for communication?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = len(dataset[dataset[""review_scores_communication""] == 0])
    return count
",int64,6,6
What is the maximum number of bedrooms a property has in this dataset?,What is the highest value in the bedrooms column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_bedrooms = dataset[""bedrooms""].max()
    return max_bedrooms
",float64,22.0,22.0
Which neighbourhood has the most listings?,What is the name of the neighbourhood with the highest count of listings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    neighbourhood_counts = dataset['neighbourhood_cleansed'].value_counts()
    top_neighbourhood = neighbourhood_counts.idxmax()
    
    return top_neighbourhood
",string,Westminster,Westminster
What is the most common room type in the listings?,Which room type appears most frequently in the listings dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    room_type_counts = dataset[""room_type""].value_counts()
    most_frequent_room_type = room_type_counts.idxmax()
    
    return most_frequent_room_type
",string,Entire home/apt,Entire home/apt
What property type has the most listings?,Which property type has the highest count of listings in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    property_counts = dataset['property_type'].value_counts()
    most_common_property = property_counts.idxmax()
    
    return most_common_property",string,Entire rental unit,Entire rental unit
Which host verification method is the least used?,,,,ERROR,photographer
List the top 3 neighbourhoods with the most listings.,What are the names of the top 3 neighbourhoods that have the highest number of listings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_neighbourhoods = dataset['neighbourhood_cleansed'].value_counts().head(3).index.tolist()
    return top_neighbourhoods
",list of string,"['Westminster', 'Tower Hamlets', 'Hackney']","['Westminster', 'Tower Hamlets', 'Hackney']"
Which are the top 4 most common property types?,What are the four property types that appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    property_type_counts = dataset['property_type'].value_counts()
    top_four_property_types = property_type_counts.head(4).index.tolist()
    return top_four_property_types",list of (string),"['Entire rental unit', 'Private room in rental unit', 'Private room in home', 'Entire condo']","['Entire rental unit', 'Private room in rental unit', 'Private room in home', 'Entire condo']"
List the 2 most common host verification methods.,,,,ERROR,"['phone', 'email']"
Which are the 2 most preferred room types?,What are the top 2 room types that appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_room_types = dataset['room_type'].value_counts().head(2).index.tolist()
    return top_room_types
",list of string,"['Entire home/apt', 'Private room']","['Entire home/apt', 'Private room']"
What are the top 3 highest review scores for location?,Retrieve the three highest values from the review_scores_location column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_three_scores = dataset[""review_scores_location""].nlargest(3).tolist()
    return top_three_scores
",list of float64,"[5.0, 5.0, 5.0]","[5.0, 5.0, 5.0]"
What are the 4 most common number of bedrooms in properties?,What are the top 4 most frequently occurring values in the bedrooms column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_bedrooms = dataset['bedrooms'].value_counts().head(4).index.tolist()
    return top_bedrooms
",list of (float64),"[1.0, 2.0, 3.0, 4.0]","[1.0, 2.0, 3.0, 4.0]"
What are the 5 highest counts of listings by a single host for entire homes?,Retrieve the top 5 highest values of calculated_host_listings_count_entire_homes.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5 = dataset.nlargest(5, 'calculated_host_listings_count_entire_homes')['calculated_host_listings_count_entire_homes'].tolist()
    return top_5
",list of (uint16),"[288, 288, 288, 288, 288]","[288, 288, 288, 288, 288]"
List the 6 lowest review scores for communication.,Retrieve the 6 smallest values from the review_scores_communication column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_reviews = dataset.nsmallest(6, 'review_scores_communication')['review_scores_communication'].tolist()
    return smallest_reviews
",list of float64,"[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]"
Are there players who have a greater overall score than their potential score?,Do any players have an overall rating higher than their potential rating?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    players_higher_overall = dataset[dataset['Overall<gx:number>'] > dataset['Potential<gx:number>']]
    answer = not players_higher_overall.empty
    return answer
",bool,False,False
Are there any players who joined their current club before they were 18 years old?,,,,ERROR,True
Are there any players whose preferred foot is left and are from a nationality that starts with 'B'?,,,,ERROR,True
Are there any players who are taller than 6 feet and have an agility score above 90?,,,,ERROR,False
What is the average overall score of players from France?,Calculate the mean overall rating for players whose nationality is France.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    french_players = dataset[dataset['Nationality<gx:category>'] == 'France']
    mean_rating = french_players['Overall<gx:number>'].mean()
    
    return mean_rating
",float64,67.86143200000000,67.861432
How many unique clubs are there in the dataset?,,,,ERROR,683
What is the highest value (in €) of a player in the dataset?,,,,ERROR,105500000
How many players have the position 'ST'?,What is the count of players whose position is 'ST'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    st_count = dataset[dataset['Position<gx:category>'] == 'ST'].shape[0]
    return st_count",int64,414,414
What is the most common nationality in the dataset?,Which nationality appears most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    nationality_counts = dataset[""Nationality<gx:category>""].value_counts()
    most_frequent_nationality = nationality_counts.idxmax()
    
    return most_frequent_nationality",string,England,England
What is the most common preferred foot amongst players?,,,,ERROR,Right
Which club has the most players in the dataset?,,,,ERROR,Crystal Palace
What is the most common position of players in the dataset?,Which position appears most frequently among the players in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    position_counts = dataset[""Position<gx:category>""].value_counts()
    most_frequent_position = position_counts.idxmax()
    
    return most_frequent_position",string,SUB,SUB
Which are the top 5 nationalities in terms of the average overall score of their players?,What are the 5 nationalities with the highest average overall score among their players?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    nationality_avg = dataset.groupby('Nationality<gx:category>')['Overall<gx:number>'].mean().sort_values(ascending=False)
    top_nationalities = nationality_avg.head(5).index.tolist()
    return top_nationalities
",list of string,"['Tanzania', 'Syria', 'Mozambique', 'Chad', 'Central African Republic']","['Tanzania', 'Syria', 'Mozambique', 'Chad', 'Central African Rep.']"
Which are the top 3 clubs in terms of the total value (in €) of their players?,,,,ERROR,"['Liverpool', 'Manchester City', 'Real Madrid']"
Which are the bottom 4 nationalities in terms of the average agility of their players?,What are the 4 nationalities with the lowest average agility scores among their players?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_agility = dataset.groupby('Nationality<gx:category>')['Agility<gx:number>'].mean().sort_values()
    lowest_agility_nationalities = avg_agility.head(4).index.tolist()
    return lowest_agility_nationalities
",list of string,"['Macau', 'Andorra', 'Moldova', 'Liechtenstein']","['Macau', 'Andorra', 'Moldova', 'Liechtenstein']"
Which are the top 6 clubs in terms of the average potential score of their players?,What are the names of the top 6 clubs when ranked by the average potential score of their players?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    club_avg_potential = dataset.groupby('Club<gx:category>')['Potential<gx:number>'].mean().sort_values(ascending=False)
    top_clubs = club_avg_potential.head(6).index.tolist()
    return top_clubs
",list of string,"['FC Bayern München', 'Real Madrid', 'FC Barcelona', 'Liverpool', 'Manchester City', 'Chelsea']","['FC Bayern München', 'Real Madrid', 'FC Barcelona', 'Paris Saint-Germain', 'Juventus', 'Manchester City']"
What are the top 3 overall scores in the dataset?,,,,ERROR,"[93, 92, 91]"
What are the bottom 5 potential scores in the dataset?,Retrieve the five smallest values from the Potential column in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_potentials = dataset.nsmallest(5, 'Potential<gx:number>')['Potential<gx:number>'].tolist()
    return smallest_potentials
",list of uint8,"[48, 48, 49, 50, 50]","[48, 48, 49, 50, 50]"
What are the top 4 values (in €) of players in the dataset?,,,,ERROR,"[105500000, 90000000, 87000000, 80000000]"
What are the top 2 wages (in €) of players in the dataset?,,,,ERROR,"[560000, 370000]"
There are no tornadoes that resulted in more than 500 injuries.,Is it true that no tornado in the dataset has an injury count exceeding 500?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_injuries = dataset[""inj""].max()
    answer = max_injuries <= 500
    return answer
",bool,False,True
All tornadoes in the dataset occurred in the 21st century.,Are all the tornadoes in the dataset recorded in years 2000 or later?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    all_after_2000 = (dataset[""yr""] >= 2000).all()
    return all_after_2000",bool,False,False
No tornado has a length greater than 100 miles.,Is there no tornado in the dataset with a length exceeding 100 miles?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_length = dataset[""len""].max()
    no_tornado_over_100 = max_length <= 100
    
    return no_tornado_over_100",bool,False,True
There are no tornadoes that resulted in more than 100 fatalities.,Is the count of tornadoes with fatalities exceeding 100 equal to zero?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count_tornadoes_with_fatalities = len(dataset[dataset[""fat""] > 100])
    is_zero = count_tornadoes_with_fatalities == 0
    
    return is_zero",bool,False,True
How many unique states are represented in the dataset?,What is the count of distinct state categories present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_states_count = dataset[""st""].nunique()
    return distinct_states_count
",int64,53,53
What is the highest magnitude of tornado recorded in the dataset?,What is the maximum value in the mag column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_mag = dataset[""mag""].max()
    return max_mag",int8,5,5
What is the longest length of a tornado path in the dataset?,What is the maximum value in the len column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_len = dataset[""len""].max()
    return max_len
",float64,234.7,234.7
What is the maximum number of injuries caused by a single tornado?,What is the highest value in the injuries column of the tornado dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_injuries = dataset[""inj""].max()
    return max_injuries
",uint16,1740,1740
Which state has experienced the most tornadoes?,What is the state (st) with the highest count of tornado occurrences?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    state_counts = dataset[""st""].value_counts()
    max_state = state_counts.idxmax()
    
    return max_state",string,TX,TX
In which month do most tornadoes occur?,What is the month number with the highest count of tornado occurrences?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    month_counts = dataset['mo'].value_counts()
    max_month = month_counts.idxmax()
    
    return max_month",uint8,5,5
On what date did the most destructive tornado (by injuries) occur?,What is the date of the tornado that caused the highest number of injuries?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_injuries_row = dataset.loc[dataset[""inj""] == dataset[""inj""].max()]
    tornado_date = max_injuries_row[""date""].iloc[0]
    
    return tornado_date","datetime64[us, UTC]",10-04-1979,10-04-1979
On what date did the longest tornado (by path length) occur?,What is the date corresponding to the tornado with the maximum path length?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_len_tornado = dataset.loc[dataset[""len""] == dataset[""len""].max()]
    date = max_len_tornado[""date""].iloc[0]
    
    return date","datetime64[us, UTC]",22-03-1953,22-03-1953
Which are the top 5 states with the highest average tornado magnitude?,What are the names of the 5 states that have the highest average magnitude of tornados?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    state_avg_mag = dataset.groupby('st')['mag'].mean().sort_values(ascending=False)
    top_5_states = state_avg_mag.head(5).index.tolist()
    return top_5_states",list of string,"['AR', 'KY', 'VT', 'TN', 'MS']","[AR, KY, VT, TN, MS]"
Which are the top 2 states with the most tornado-related injuries? If in a tie then select alphabetically. ,"What are the two states with the highest number of injuries caused by tornadoes, sorted alphabetically in case of a tie?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    state_injuries = dataset.groupby('st')['inj'].sum().reset_index()
    top_states = state_injuries.nlargest(2, 'inj')['st'].sort_values().tolist()
    return top_states
",list of string,"['TX', 'AL']","[TX, AL]"
Which are the top 4 states with the most tornado-related fatalities? If you find a tie select alphabetically.,"What are the names of the top 4 states with the highest number of fatalities caused by tornadoes, sorted alphabetically in case of ties?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    fatalities_by_state = dataset.groupby('st')['fat'].sum().reset_index()
    sorted_states = fatalities_by_state.sort_values(['fat', 'st'], ascending=[False, True])
    top_states = sorted_states.head(4)['st'].tolist()
    
    return top_states",list of string,"['AL', 'TX', 'MS', 'OK']","[AL, TX, MS, OK]"
Which are the bottom 2 states in terms of the average tornado path length?,What are the two states with the smallest average tornado path lengths?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_length_by_state = dataset.groupby('st')['len'].mean().sort_values()
    smallest_avg_states = avg_length_by_state.head(2).index.tolist()
    
    return smallest_avg_states",list of string,"['AK', 'VI']","[AK, VI]"
What are the top 3 number of injuries caused by tornadoes in the dataset?,Retrieve the top 3 highest injury counts from the inj column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_injuries = dataset.nlargest(3, 'inj')['inj'].tolist()
    return top_injuries",list of (uint16),"[1740, 1500, 1228]","[1740, 1500, 1228]"
What are the top 5 magnitudes of tornadoes in the dataset?,Retrieve the 5 highest values from the mag column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_mag = dataset.nlargest(5, 'mag')['mag'].tolist()
    return top_5_mag
",list of (int8),"[5, 5, 5, 5, 5]","[5, 5, 5, 5, 5]"
What are the top 4 path lengths of tornadoes in the dataset?,Retrieve the four largest values from the len column in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    largest_lengths = dataset[""len""].nlargest(4).tolist()
    return largest_lengths
",list of float64,"[234.7, 217.8, 202.5, 202.1]","[234.7, 217.8, 202.5, 202.1]"
What are the top 6 number of fatalities caused by tornadoes in the dataset?,Retrieve the top 6 highest fatality counts from the fat column in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_fatalities = dataset.nlargest(6, 'fat')['fat'].tolist()
    return top_fatalities
",list of (uint8),"[158, 116, 114, 94, 80, 72]","[158, 116, 114, 94, 80, 72]"
There were no days when the precipitation was greater than 5 inches.,Is it true that no records exist where the precipitation value exceeds 5 inches?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_precipitation = (dataset[""PRCP""] > 5).any()
    return not has_high_precipitation",bool,False,False
All recorded temperatures are above freezing point.,Are all the minimum recorded temperatures (TMIN) greater than 0 degrees Celsius?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    all_tmin_above_zero = (dataset[""TMIN""] > 0).all()
    return all_tmin_above_zero",bool,False,False
There were no days when the snow depth was more than 10 inches.,Is it true that the snow depth never exceeded 10 inches on any day?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_snow_depth = dataset[""SNWD""].max()
    answer = max_snow_depth <= 10.0
    return answer",bool,False,False
There were no days when the maximum temperature was below freezing point.,Is it true that the highest recorded temperature never dropped below freezing point on any day?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_temp = dataset[""TMAX""].max()
    days_with_max_temp = dataset[dataset[""TMAX""] == max_temp]
    min_temp_on_max_temp_days = days_with_max_temp[""TMIN""].min()
    answer = min_temp_on_max_temp_days >= 32.0  # Freezing point is 32°F
    
    return answer",bool,True,False
What is the highest recorded precipitation in inches?,What is the maximum value in the PRCP column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_prcp = dataset[""PRCP""].max()
    return max_prcp
",float64,8.28,8.28
What is the lowest minimum temperature recorded?,What is the smallest value in the TMIN column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_tmin = dataset[""TMIN""].min()
    return min_tmin",float64,-015.0,-015.0
What is the highest maximum temperature recorded?,What is the maximum value in the TMAX column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_tmax = dataset[""TMAX""].max()
    return max_tmax
",float64,106.0,106.0
What is the deepest recorded snow depth in inches?,What is the maximum value recorded in the SNWD column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_snwd = dataset[""SNWD""].max()
    return max_snwd
",float64,26.0,26.0
On which date was the highest precipitation recorded?,What is the date corresponding to the maximum precipitation value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_prcp_row = dataset.loc[dataset[""PRCP""] == dataset[""PRCP""].max()]
    date = max_prcp_row[""DATE""].iloc[0]
    
    return date","datetime64[us, UTC]",23-09-3782,23-09-3782
On which date was the lowest minimum temperature recorded?,What is the date corresponding to the record with the smallest minimum temperature value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_temp_record = dataset.loc[dataset[""TMIN""] == dataset[""TMIN""].min()]
    date = min_temp_record[""DATE""].iloc[0]
    
    return date",datetime64[us],09-02-1934,09-02-1934
On which date was the highest maximum temperature recorded?,What is the date corresponding to the highest value in the TMAX column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_tmax_date = dataset.loc[dataset[""TMAX""] == dataset[""TMAX""].max(), ""DATE""].iloc[0]
    return max_tmax_date",datetime64[us],09-07-1936,09-07-1936
On which date was the deepest snow depth recorded?,What is the date corresponding to the maximum snow depth recorded?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_snow_depth_row = dataset.loc[dataset[""SNWD""] == dataset[""SNWD""].max()]
    date = max_snow_depth_row[""DATE""].iloc[0]
    
    return date
",datetime64[us],27-12-1947,27-12-1947
What are the dates of the top 5 highest recorded precipitation events?,Retrieve the dates corresponding to the top 5 highest precipitation values in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_precip_dates = dataset.nlargest(5, 'PRCP')['DATE'].tolist()
    return top_precip_dates","list of datetime64[us, UTC]","[Timestamp('1882-09-23 00:00:00+0000', tz='UTC'), Timestamp('2007-04-15 00:00:00+0000', tz='UTC'), Timestamp('1977-11-08 00:00:00+0000', tz='UTC'), Timestamp('1903-10-09 00:00:00+0000', tz='UTC'), Timestamp('2021-09-01 00:00:00+0000', tz='UTC')]","[1882-09-23, 2007-04-15, 1977-11-08, 1903-10-09, 2021-09-01]"
What are the dates of the top 3 lowest minimum temperatures recorded?,Retrieve the dates corresponding to the three smallest values in the TMIN column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_tmin_dates = dataset.nsmallest(3, 'TMIN')['DATE'].tolist()
    return smallest_tmin_dates
","list of (datetime64[us, UTC])","[Timestamp('1934-02-09 00:00:00+0000', tz='UTC'), Timestamp('1917-12-30 00:00:00+0000', tz='UTC'), Timestamp('1943-02-15 00:00:00+0000', tz='UTC')]","[1934-02-09, 1917-12-30, 1943-02-15]"
What are the dates of the top 4 highest maximum temperatures recorded?,Retrieve the dates corresponding to the four highest maximum temperature values recorded.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_data = dataset.sort_values(by=""TMAX"", ascending=False)
    top_dates = sorted_data.head(4)[""DATE""].tolist()
    return top_dates","list of datetime64[us, UTC]","[Timestamp('1936-07-09 00:00:00+0000', tz='UTC'), Timestamp('1977-07-21 00:00:00+0000', tz='UTC'), Timestamp('1918-08-07 00:00:00+0000', tz='UTC'), Timestamp('2011-07-22 00:00:00+0000', tz='UTC')]","[1936-07-09, 1918-08-07, 1977-07-21, 2011-07-22]"
What are the dates of the top 2 deepest snow depth recorded?,Retrieve the dates corresponding to the two highest values in the snow depth column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_data = dataset.sort_values(""SNWD"", ascending=False)
    top_two_dates = sorted_data[""DATE""].head(2).tolist()
    return top_two_dates",list of datetime64[us],"[Timestamp('1947-12-27 00:00:00+0000', tz='UTC'), Timestamp('1947-12-28 00:00:00+0000', tz='UTC')]","[1947-12-27, 1947-12-28]"
What are the 3 highest recorded precipitation events in inches?,Retrieve the top 3 precipitation values in inches from the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_precipitations = dataset.nlargest(3, 'PRCP')['PRCP'].tolist()
    return top_precipitations",list of (float64),"[8.28, 7.57, 7.4]","[8.28, 7.57, 7.4]"
What are the 5 lowest minimum temperatures recorded?,Retrieve the 5 smallest values from the TMIN column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_tmin = dataset.nsmallest(5, 'TMIN')['TMIN'].tolist()
    return smallest_tmin",list of (float64),"[-15.0, -13.0, -8.0, -7.0, -7.0]","[-15.0, -13.0, -8.0, -7.0, -7.0]"
What are the 4 highest maximum temperatures recorded?,Retrieve the top 4 highest values from the TMAX column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_4_tmax = dataset.nlargest(4, 'TMAX')['TMAX'].tolist()
    return top_4_tmax",list of (float64),"[106.0, 104.0, 104.0, 104.0]","[106.0, 104.0, 104.0, 104.0]"
What are the 2 deepest snow depth recorded in inches?,"Retrieve the two highest values from the SNWD column, which represents snow depth in inches.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_two_snwd = dataset.nlargest(2, 'SNWD')['SNWD'].tolist()
    return top_two_snwd",list of (float64),"[26.0, 25.0]","[26.0, 25.0]"
Are there more than 20 unique clothing items in the dataset?,Does the count of distinct clothing IDs exceed 20?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_clothing_ids = dataset[""Clothing ID""].nunique()
    answer = distinct_clothing_ids > 20
    return answer",bool,True,True
Is the age of the reviewers above 50 years on average?,Is the average age of reviewers greater than 50?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_age = dataset[""Age""].mean()
    is_greater_than_50 = average_age > 50
    
    return is_greater_than_50",bool,False,False
Do all reviews come from the same department?,Are all the reviews in the dataset from a single department name?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_departments = dataset[""Department Name""].nunique()
    is_single_department = unique_departments == 1
    
    return is_single_department",bool,False,False
Are all products recommended?,Is the Recommended IND value equal to 1 for all products in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    all_recommended = (dataset[""Recommended IND""] == 1).all()
    return all_recommended
",bool,False,False
What is the average age of the reviewers?,Calculate the mean age of all reviewers in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_age = dataset[""Age""].mean()
    return mean_age",float64,43.198544000000000,43.198544000000000
What's the highest number of positive feedback received for a review?,What is the maximum value in the Positive Feedback Count column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_feedback = dataset[""Positive Feedback Count""].max()
    return max_feedback",uint8,122,122
What is the most common rating given by reviewers?,Which rating value appears most frequently in the Rating column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_rating = dataset[""Rating""].mode().iloc[0]
    return most_frequent_rating",uint8,5,5
How many unique clothing items are there in the dataset?,What is the count of distinct clothing IDs in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_clothing_ids = dataset[""Clothing ID""].nunique()
    return distinct_clothing_ids",int64,1206,1206
Which department has the most reviews?,What is the name of the department with the highest count of reviews?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    department_counts = dataset[""Department Name""].value_counts()
    top_department = department_counts.idxmax()
    
    return top_department",string,Tops,Tops
Which class of clothing is most commonly reviewed?,What is the class name that appears most frequently in the reviews?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    class_counts = dataset[""Class Name""].value_counts()
    most_frequent_class = class_counts.idxmax()
    
    return most_frequent_class",string,Dresses,Dresses
Which division is most commonly mentioned in the reviews?,What is the division name that appears most frequently in the review text?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    division_counts = dataset['Division Name'].value_counts()
    most_frequent_division = division_counts.idxmax()
    
    return most_frequent_division",string,General,General
What is the most frequently reviewed clothing item? If you find a tie answer with row order.,"Which clothing item, identified by Clothing ID, appears most frequently in the reviews? In case of a tie, return the first one in the dataset.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    clothing_id_counts = dataset[""Clothing ID""].value_counts()
    most_frequent_id = clothing_id_counts.idxmax()
    
    return str(most_frequent_id)",string,1078,1078
Which are the 4 most reviewed categories in Department Name?,What are the top 4 department names with the highest number of reviews?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    department_reviews = dataset.groupby('Department Name').size().reset_index(name='count')
    top_departments = department_reviews.sort_values('count', ascending=False).head(4)
    result = top_departments['Department Name'].tolist()
    
    return result",list of string,"['Tops', 'Dresses', 'Bottoms', 'Intimate']","['Tops', 'Dresses', 'Bottoms', 'Intimate']"
Which are the top 2 most reviewed categories in Class Name?,What are the two Class Name categories that have the highest number of reviews?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    class_counts = dataset['Class Name'].value_counts()
    top_two_classes = class_counts.nlargest(2).index.tolist()
    return top_two_classes",list of string,"['Dresses', 'Knits']","['Dresses', 'Knits']"
Which are the 2 most reviewed categories in Division Name?,What are the top 2 division names with the highest number of reviews?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    division_counts = dataset[""Division Name""].value_counts().head(2)
    top_divisions = division_counts.index.tolist()
    
    return top_divisions",list of string,"['General', 'General Petite']","['General', 'General Petite']"
What are the 4 highest ratings given by reviewers?,Retrieve the top 4 distinct values from the Rating column in descending order.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_ratings = dataset['Rating'].unique()
    top_ratings_sorted = sorted(top_ratings, reverse=True)[:4]
    return top_ratings_sorted",list of (uint8),"[np.uint8(5), np.uint8(4), np.uint8(3), np.uint8(2)]","[5, 4, 3, 2]"
What are the 5 oldest Ages of reviewers?,Retrieve the top 5 highest values from the Age column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_ages = dataset[""Age""].nlargest(5).tolist()
    return top_5_ages
",list of (uint8),"[99, 99, 94, 94, 94]","[99, 99, 94, 94, 94]"
What are the 4 most common Positive Feedback Counts of reviewers?,What are the top 4 most frequently occurring values in the Positive Feedback Count column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_feedback_counts = dataset['Positive Feedback Count'].value_counts().head(4).index.tolist()
    return top_feedback_counts
",list of (uint8),"[0, 1, 2, 3]","[0, 1, 2, 3]"
What are the 2 most common values for recommendation indicator?,What are the top two most frequently occurring values in the Recommended IND column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_values = dataset['Recommended IND'].value_counts().nlargest(2).index.tolist()
    return top_values
",list of (uint8),"[1, 0]","[1, 0]"
What are the 2 most common clothing IDs in the reviews? If you find a tie answer in row order.,"Return the top 2 clothing IDs that appear most frequently in the reviews, resolving ties by selecting the first ones in the dataset.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_clothing_ids = dataset['Clothing ID'].value_counts().head(2).index.tolist()
    return top_clothing_ids",list of (uint16),"[1078, 862]","[1078, 862]"
Was the highest reported incident in the year 2023 filed online?,"For the incident with the highest reported incident number in 2023, was the filed online attribute set to True?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Filter incidents from 2023
    incidents_2023 = dataset[dataset['Incident Year'] == 2023]
    # Find the incident with the highest incident number
    max_incident = incidents_2023.loc[incidents_2023['Incident Number'] == incidents_2023['Incident Number'].max()]
    # Check if 'Filed Online' is True
    is_filed_online = max_incident['Filed Online'].iloc[0] == 'True'
    
    return is_filed_online
",bool,False,False
Are all incidents reported on Mondays resolved?,Is the resolution status for every incident that occurred on a Monday marked as resolved?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    monday_incidents = dataset[dataset['Incident Day of Week'] == 'Monday']
    all_resolved = (monday_incidents['Resolution'] == 'Resolved').all()
    return all_resolved
",bool,False,False
Do any incidents reported in Police District 'Central' fall in Supervisor District 5?,Are there any records where the Police District is 'Central' and the Supervisor District is 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_records = dataset[(dataset['Police District'] == 'Central') & (dataset['Supervisor District'] == 5)]
    answer = not filtered_records.empty
    return answer
",bool,True,False
Are there any incidents that occurred at the same latitude and longitude more than once?,Do any latitude and longitude coordinates appear more than once in the incident records?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    coord_counts = dataset.groupby(['Latitude', 'Longitude']).size()
    has_duplicate_coords = (coord_counts > 1).any()
    
    return has_duplicate_coords
",bool,True,True
How many unique types of incident categories are there in the dataset?,What is the count of distinct incident categories present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_categories_count = dataset[""Incident Category""].nunique()
    return distinct_categories_count",int64,49,49
What's the total number of incidents reported online?,What is the sum of incidents where the Filed Online attribute is not empty?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    non_empty_filed_online = dataset[dataset[""Filed Online""].notna()]
    sum_incidents = len(non_empty_filed_online)
    
    return sum_incidents
",int64,144099,144099
How many different police districts are there in the dataset?,What is the count of unique police districts present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_police_districts = dataset[""Police District""].nunique()
    return unique_police_districts
",int64,11,11
What is the average incident count per year?,What is the mean number of incidents recorded each year?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    incidents_per_year = dataset.groupby('Incident Year').size()
    mean_incidents = incidents_per_year.mean()
    
    return mean_incidents
",float64,118851.16666700000,118851.16666700000
What is the most common incident category?,Which incident category occurs most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_category = dataset[""Incident Category""].mode()[0]
    return most_frequent_category
",string,Larceny Theft,Larceny Theft
Which day of the week has the highest number of incidents?,What is the day of the week with the most incidents recorded?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    day_counts = dataset[""Incident Day of Week""].value_counts()
    most_common_day = day_counts.idxmax()
    
    return most_common_day",string,Friday,Friday
What is the most common resolution for incidents reported online?,Which resolution value appears most frequently in the resolution column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_resolution = dataset[""Resolution""].mode()[0]
    return most_frequent_resolution",string,Open or Active,Open or Active
What is the Police District with the most incidents?,Which police district has the highest count of incidents?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    district_counts = dataset[""Police District""].value_counts()
    top_district = district_counts.idxmax()
    
    return top_district
",string,Central,Central
What are the three most common incident descriptions?,Which three incident descriptions appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_incidents = dataset['Incident Description'].value_counts().head(3).index.tolist()
    return top_incidents
",list of string,"['Theft, From Locked Vehicle, >$950', 'Malicious Mischief, Vandalism to Property', 'Battery']","['Theft, From Locked Vehicle, >$950', 'Malicious Mischief, Vandalism to Property', 'Battery']"
Name the 4 most frequently occurring police districts.,What are the names of the top 4 police districts with the highest number of incidents?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_districts = dataset['Police District'].value_counts().head(4).index.tolist()
    return top_districts",list of string,"['Central', 'Northern', 'Mission', 'Southern']","[Central, Northern, Mission, Southern]"
List the three most common incident categories on Fridays.,What are the top three incident categories that occur most frequently on Fridays?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    friday_incidents = dataset[dataset['Incident Day of Week'] == 'Friday']
    top_categories = friday_incidents['Incident Category'].value_counts().head(3).index.tolist()
    return top_categories
",list of string,"['Larceny Theft', 'Malicious Mischief', 'Other Miscellaneous']","[Larceny Theft, Malicious Mischief, Other Miscellaneous]"
Give the 6 most common resolutions for incidents.,What are the top 6 most frequently occurring values in the Resolution column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_resolutions = dataset[""Resolution""].value_counts().head(6).index.tolist()
    return top_resolutions",list of (string),"['Open or Active', 'Cite or Arrest Adult', 'Unfounded', 'Exceptional Adult']","[Open or Active, Cite or Arrest Adult, Unfounded, Exceptional Adult]"
List the years with the top 4 highest incident counts.,What are the 4 years with the highest number of incidents?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    year_counts = dataset['Incident Year'].value_counts().sort_values(ascending=False)
    top_4_years = year_counts.head(4).index.tolist()
    return top_4_years
",list of uint16,"[2018, 2019, 2022, 2021]","[2018, 2019, 2022, 2021]"
Which 3 incident years have the lowest number of online filed reports? If two have the same number choose the latest year,"What are the 3 years with the least number of online filed reports, selecting the most recent year in case of ties?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Filter for online filed reports
    online_reports = dataset[dataset['Filed Online'] == 'true']
    # Group by year and count incidents
    year_counts = online_reports['Incident Year'].value_counts().reset_index()
    year_counts.columns = ['Incident Year', 'Count']
    # Sort by count (ascending) and then by year (descending to break ties)
    year_counts_sorted = year_counts.sort_values(['Count', 'Incident Year'], ascending=[True, False])
    # Get the top 3 years with least counts
    top_3_years = year_counts_sorted['Incident Year'].head(3).tolist()
    
    return top_3_years
",list of (uint16),[],"[2023, 2020, 2021]"
What are the 2 years with the highest incident counts.,Which two years have the highest number of incidents recorded?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    year_counts = dataset['Incident Year'].value_counts().nlargest(2)
    top_years = year_counts.index.tolist()
    return top_years",list of (uint16),"[2018, 2019]","[2018, 2019]"
Name the 6 years with the most number of unique incident categories.,Which 6 years have the highest count of distinct incident categories?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Group by Incident Year and count distinct Incident Categories for each year
    year_category_counts = dataset.groupby('Incident Year')['Incident Category'].nunique()
    # Get the 6 years with highest count of distinct incident categories
    top_years = year_category_counts.nlargest(6).index.tolist()
    return top_years",list of (uint16),"[2018, 2019, 2020, 2021, 2022, 2023]","[2018, 2019, 2020, 2021, 2022, 2023]"
Do all patients experience exercise-induced angina?,Is the ExerciseAngina attribute set to 'Y' for every patient in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    all_exercise_angina_y = (dataset['ExerciseAngina'] == 'Y').all()
    return all_exercise_angina_y
",bool,False,False
Does any patient have a resting blood pressure above 200?,Is there at least one patient with a resting blood pressure value greater than 200?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_bp = (dataset[""RestingBP""] > 200).any()
    return has_high_bp
",bool,False,False
Are there patients without heart disease?,Does the dataset contain any patients where the HeartDisease attribute is 0?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_heart_disease_zero = (dataset[""HeartDisease""] == 0).any()
    return has_heart_disease_zero",bool,True,True
Does everyone have normal resting electrocardiographic results?,Are all the resting electrocardiographic results in the dataset categorized as normal?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    all_normal = (dataset[""RestingECG""] == ""Normal"").all()
    return all_normal",bool,False,False
What is the maximum age of patients in the dataset?,What is the highest age value present in the Age column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_age = dataset[""Age""].max()
    return max_age
",uint8,77,77
What is the minimum resting blood pressure among the patients?,What is the smallest value in the RestingBP column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_resting_bp = dataset[""RestingBP""].min()
    return min_resting_bp
",uint8,0,0
What is the average cholesterol level in the dataset?,Calculate the mean value of the Cholesterol column in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_cholesterol = dataset[""Cholesterol""].mean()
    return mean_cholesterol
",float64,198.7995640000000,198.7995640000000
What is the standard deviation of maximum heart rate among the patients?,Calculate the standard deviation of the MaxHR values for all patients in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    std_dev = dataset[""MaxHR""].std()
    return std_dev
",float64,25.4603340000000,25.4603340000000
What is the most common chest pain type among patients?,Which chest pain type occurs most frequently in the patient records?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    chest_pain_counts = dataset[""ChestPainType""].value_counts()
    most_frequent_chest_pain = chest_pain_counts.idxmax()
    
    return most_frequent_chest_pain",string,ASY,ASY
What is the least common resting electrocardiographic result?,Which value in the RestingECG column appears the fewest number of times?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    resting_ecg_counts = dataset[""RestingECG""].value_counts()
    min_count_value = resting_ecg_counts.idxmin()
    
    return min_count_value",string,ST,ST
What is the most common ST slope among patients with heart disease?,Which ST slope category appears most frequently in patients where HeartDisease is greater than 0?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    heart_disease_patients = dataset[dataset[""HeartDisease""] > 0]
    st_slope_counts = heart_disease_patients[""ST_Slope""].value_counts()
    most_frequent_slope = st_slope_counts.idxmax()
    
    return most_frequent_slope",string,Flat,Flat
What is the least common chest pain type among male patients?,Which chest pain type has the lowest frequency among male patients in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    male_patients = dataset[dataset[""Sex""] == ""M""]
    chest_pain_counts = male_patients[""ChestPainType""].value_counts()
    lowest_frequency_type = chest_pain_counts.idxmin()
    
    return lowest_frequency_type",string,TA,TA
What are the top 3 most common chest pain types?,Which three chest pain types appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    chest_pain_counts = dataset[""ChestPainType""].value_counts()
    top_three = chest_pain_counts.head(3).index.tolist()
    return top_three",list of string,"['ASY', 'NAP', 'ATA']","['ASY', 'NAP', 'ATA']"
Which 4 resting electrocardiographic results are least common?,What are the 4 least frequently occurring values in the RestingECG column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    resting_ecg_counts = dataset['RestingECG'].value_counts()
    least_frequent = resting_ecg_counts.nsmallest(4).index.tolist()
    return least_frequent",list of string,"['ST', 'LVH', 'Normal']","['ST', 'LVH', 'Normal']"
What are the 2 most common ST slopes among patients with heart disease?,Which two ST slope categories appear most frequently in records where heart disease is present?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    heart_disease_records = dataset[dataset['HeartDisease'] == 1]
    st_slope_counts = heart_disease_records['ST_Slope'].value_counts()
    top_two_categories = st_slope_counts.nlargest(2).index.tolist()
    
    return top_two_categories
",list of string,"['Flat', 'Up']","['Flat', 'Up']"
What are the 4 most common chest pain types among male patients?,Retrieve the top 4 most frequently occurring chest pain types for patients where sex is male.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    male_patients = dataset[dataset['Sex'] == 'M']
    top_chest_pain = male_patients['ChestPainType'].value_counts().head(4).index.tolist()
    return top_chest_pain
",list of string,"['ASY', 'NAP', 'ATA', 'TA']","['TA', 'ATA', 'NAP', 'ASY']"
What are the ages of the 5 oldest patients in the dataset?,Retrieve the age values of the 5 patients with the highest age in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_ages = dataset.nlargest(5, 'Age')['Age'].tolist()
    return top_ages
",list of (uint8),"[77, 77, 76, 76, 75]","[77, 77, 76, 76, 75]"
What are the 4 highest resting blood pressures?,Retrieve the top 4 highest values from the RestingBP column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_4_resting_bp = dataset.nlargest(4, 'RestingBP')['RestingBP'].tolist()
    return top_4_resting_bp
",list of (uint8),"[200, 200, 200, 200]","[200, 200, 200, 200]"
What are the 6 lowest cholesterol levels in the dataset?,Retrieve the 6 smallest values from the Cholesterol column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_cholesterol = dataset.nsmallest(6, 'Cholesterol')['Cholesterol'].tolist()
    return smallest_cholesterol
",list of (uint16),"[0, 0, 0, 0, 0, 0]","[0, 0, 0, 0, 0, 0]"
What are the 3 highest maximum heart rates among the patients?,Retrieve the top 3 maximum heart rate values from the MaxHR column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_max_hr = dataset.nlargest(3, 'MaxHR')['MaxHR'].tolist()
    return top_3_max_hr
",list of (uint8),"[202, 195, 194]","[202, 195, 194]"
Did the oldest roller coaster in the dataset still operate?,,,,ERROR,True
Is there a roller coaster in the dataset that operates at a speed more than 100 mph?,Does any roller coaster in the dataset have a speed_mph value greater than 100?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_speed = (dataset[""speed_mph""] > 100).any()
    return has_high_speed",bool,True,True
Are all roller coasters in the dataset designed by 'Werner Stengel' removed?,Is the Status of every roller coaster in the dataset with Designer 'Werner Stengel' set to 'removed'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    stengel_coasters = dataset[dataset['Designer'] == 'Werner Stengel']
    all_removed = (stengel_coasters['Status'] == 'removed').all()
    
    return all_removed
",bool,False,False
Does every roller coaster have a G-force value?,Is the G-force value present for all roller coasters in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_gforce = dataset[""Gforce_clean""].notna().all()
    return has_gforce
",bool,False,False
What is the maximum speed (in mph) for roller coasters in the dataset?,What is the highest value in the speed_mph column for all roller coasters in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_speed = dataset[""speed_mph""].max()
    return max_speed
",float64,149.1,149.1
How many roller coasters were introduced in the year 2000?,What is the count of roller coasters that have their year_introduced as 2000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = len(dataset[dataset[""year_introduced""] == 2000])
    return count
",int64,47,47
What is the average G-force across all roller coasters in the dataset?,What is the mean value of the Gforce_clean column across all entries in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_gforce = dataset[""Gforce_clean""].mean()
    return mean_gforce
",float64,3.8240060000000000,3.8240060000000000
What is the total number of roller coasters designed by 'Edwin Madeupname' in the dataset?,How many roller coasters in the dataset have 'Edwin Madeupname' listed as the designer?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = len(dataset[dataset[""Designer""] == ""Edwin Madeupname""])
    return count
",int64,0,0
Which manufacturer has built the fastest roller coaster?,What is the name of the manufacturer that produced the roller coaster with the highest speed in miles per hour?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_speed_idx = dataset[""speed_mph""].idxmax()
    manufacturer = dataset.loc[max_speed_idx, ""Manufacturer""]
    return manufacturer
",string,Intamin,Intamin
What is the status of the roller coaster with the highest G-force?,What is the status value of the roller coaster that has the maximum G-force?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_gforce_coaster = dataset.loc[dataset[""Gforce_clean""] == dataset[""Gforce_clean""].max()]
    status = max_gforce_coaster[""Status""].values[0]
    
    return status
",category,Removed,Removed
What type of the roller coaster is the oldest in the dataset?,What is the type of the roller coaster that has the earliest opening date in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    earliest_opening = dataset.loc[dataset[""opening_date_clean""] == dataset[""opening_date_clean""].min()]
    coaster_type = earliest_opening[""Type""].iloc[0]
    
    return coaster_type",string,Wood,Wood
What is the location of the roller coaster with the highest number of inversions?,Where is the roller coaster that has the greatest number of inversions located?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_inversions = dataset[""Inversions""].max()
    roller_coaster = dataset.loc[dataset[""Inversions""] == max_inversions]
    location = roller_coaster[""Location""].iloc[0]
    
    return location
",string,Alton Towers,Alton Towers
What are the names of the top 3 fastest roller coasters?,Retrieve the names of the three roller coasters with the highest speed values.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_speed_coasters = dataset.nlargest(3, 'speed_mph')['coaster_name'].tolist()
    return top_speed_coasters
",list of string,"['Formula Rossa', 'Kingda Ka', 'Top Thrill Dragster']","[Formula Rossa, Kingda Ka, Top Thrill Dragster]"
Which 2 roller coasters have the highest number of inversions?,What are the names of the top 2 roller coasters with the most inversions?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_coasters = dataset.nlargest(2, 'Inversions_clean')
    coaster_names = top_coasters['coaster_name'].tolist()
    return coaster_names
",list of string,"['The Smiler', 'Colossus (Thorpe Park)']","[The Smiler, Colossus (Thorpe Park)]"
What are the locations of the top 5 roller coasters with the highest G-force?,Retrieve the locations of the top 5 roller coasters with the highest Gforce_clean values.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5 = dataset.nlargest(5, 'Gforce_clean')
    locations = top_5['Location'].tolist()
    return locations
",list of string,"['Sea Lion Park', 'Fuji-Q Highland', 'Six Flags Over Texas', 'Nürburgring', ""Morey's Piers""]","[Sea Lion Park, Fuji-Q Highland, Six Flags Over Texas, Nürburgring, Morey's Piers]"
Name the 4 oldest roller coasters in the dataset.,What are the names of the 4 roller coasters with the earliest opening dates?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_data = dataset.sort_values('opening_date_clean')
    earliest_coasters = sorted_data.head(4)['coaster_name'].tolist()
    return earliest_coasters
",list of (string),"['Switchback Railway', 'Flip Flap Railway', 'Loop the Loop (Coney Island)', ""Loop the Loop (Young's Pier)""]","[Switchback Railway, Flip Flap Railway, Loop the Loop (Coney Island), Loop the Loop (Young's Pier)]"
What are the top 3 speeds (in mph) of roller coasters in the dataset?,Retrieve the three highest values from the speed_mph column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_speeds = dataset.nlargest(3, 'speed_mph')['speed_mph'].tolist()
    return top_speeds
",list of float64,"[149.1, 128.0, 120.0]","[149.1, 128.0, 120.0]"
List the G-force values of the 2 roller coasters with the highest G-force.,What are the Gforce_clean values for the two roller coasters with the highest Gforce_clean values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_two = dataset.nlargest(2, 'Gforce_clean')
    gforce_values = top_two['Gforce_clean'].tolist()
    return gforce_values
",list of float64,"[12.0, 6.5]","[12.0, 6.5]"
What are the heights (in ft) of the top 4 tallest roller coasters?,Retrieve the height_ft values for the top 4 roller coasters with the highest height_ft values.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_heights = dataset.nlargest(4, 'height_ft')['height_ft'].tolist()
    return top_heights
",list of float64,"[377.3, 367.5, 318.2, 306.1]","[377.3, 367.5, 318.2, 306.1]"
Name the introduction years of the 6 oldest roller coasters in the dataset.,What are the introduction years of the 6 roller coasters with the earliest opening dates in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    earliest_coasters = dataset.nsmallest(6, 'opening_date_clean')
    years_list = earliest_coasters['year_introduced'].tolist()
    return years_list
",list of (uint16),"[1884, 1895, 1901, 1901, 1902, 1902]","[1884, 1895, 1901, 1901, 1902, 1902]"
Is there a rental property with exactly 5 bedrooms?,Does the Airbnb dataset contain any listings where the number of bedrooms is exactly 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_five_bedrooms = (dataset[""bedrooms""] == 5).any()
    return has_five_bedrooms",bool,True,True
Is there a rental property listed by a superhost that is instantly bookable?,Does any rental property in the dataset have both the superhost status and instant bookable feature enabled?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    superhost_instant_bookable = dataset[
        (dataset['host_is_superhost'] == 't') & 
        (dataset['instant_bookable'] == 't')
    ]
    answer = len(superhost_instant_bookable) > 0
    return answer
",bool,True,True
Are there any rental properties that can accommodate more than 10 guests?,Do any listings in the dataset have an accommodates value greater than 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_accommodates = (dataset[""accommodates""] > 10).any()
    return has_high_accommodates
",bool,True,True
Is there a rental property that has received a perfect review score?,Does any rental property in the dataset have a review_scores_rating of 100?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_perfect_rating = (dataset[""review_scores_rating""] == 100).any()
    return has_perfect_rating
",bool,False,False
How many rental properties are there in the dataset?,What is the total count of rental properties listed in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_count = len(dataset)
    return total_count
",int64,20776,20776
What is the maximum number of bedrooms in a property?,What is the highest value in the bedrooms column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_bedrooms = dataset[""bedrooms""].max()
    return max_bedrooms
",float64,18.0,18.0
What is the highest price per night for a rental property?,What is the maximum value in the price column for rental properties?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Convert price column to float by removing '$' and commas
    dataset['price'] = dataset['price'].str.replace('$', '').str.replace(',', '').astype(float)
    max_price = dataset['price'].max()
    return max_price
",float64,95150.0,95150.0
What is the maximum number of reviews a property has received?,What is the highest value in the number_of_reviews column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_reviews = dataset[""number_of_reviews""].max()
    return max_reviews
",uint16,870,870
What is the host response time for the property with the highest number of bedrooms?,"For the property that has the maximum number of bedrooms, what is the value of the host response time?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_bedrooms_property = dataset.loc[dataset[""bedrooms""] == dataset[""bedrooms""].max()]
    host_response_time = max_bedrooms_property[""host_response_time""].iloc[0]
    
    return host_response_time
",category,within an hour,within an hour
What type of room is the most expensive property?,What is the room type of the property with the highest price?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_price_property = dataset.loc[dataset[""price""] == dataset[""price""].max()]
    room_type = max_price_property[""room_type""].iloc[0]
    
    return room_type
",string,Entire home/apt,Entire home/apt
What is the property type of the listing with the most reviews?,What is the property type of the listing that has the highest number of reviews?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_reviews_listing = dataset.loc[dataset[""number_of_reviews""] == dataset[""number_of_reviews""].max()]
    property_type = max_reviews_listing[""property_type""].iloc[0]
    
    return property_type
",string,Entire rental unit,Entire rental unit
What is the acceptance rate of the host of the property that can accommodate the most number of guests?,What is the host acceptance rate for the property that has the highest accommodates value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_accommodates_property = dataset.loc[dataset[""accommodates""] == dataset[""accommodates""].max()]
    host_acceptance_rate = max_accommodates_property[""host_acceptance_rate""].iloc[0]
    
    return host_acceptance_rate
",category,,100.0%
Which are the 2 lowest values of host response rates above 0% ?,What are the two smallest non-zero host response rates in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Convert host_response_rate to float after removing '%' and handling non-numeric values
    response_rates = dataset['host_response_rate'].str.replace('%', '').astype(float)
    # Filter out zero values and get unique sorted rates
    non_zero_rates = response_rates[response_rates > 0].sort_values().unique()
    # Get the two smallest non-zero rates
    two_smallest = sorted(non_zero_rates)[:2] if len(non_zero_rates) >= 2 else non_zero_rates.tolist()
    return two_smallest
",list of (float64),"[np.float64(5.0), np.float64(10.0)]","['5%', '10%']"
Which are the 2 lowest values of host response rates?,What are the two smallest host response rate values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Convert host_response_rate to numeric after removing '%' and handle non-numeric values
    response_rates = dataset['host_response_rate'].str.replace('%', '').astype(float)
    # Get the two smallest values
    smallest_two = response_rates.nsmallest(2)
    # Convert back to strings with '%' sign
    answer = [f""{rate}%"" for rate in smallest_two]
    
    return answer",list of (string),"['0.0%', '0.0%']","['0%', '0%']"
What are the 4 highest values of host acceptance rates?,Retrieve the top 4 highest values from the host acceptance rate column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Convert host_acceptance_rate from string to float (assuming it's stored as percentage strings like ""90%"")
    dataset['host_acceptance_rate_float'] = dataset['host_acceptance_rate'].str.rstrip('%').astype(float)
    # Get top 4 highest values, drop NA values, and convert to list
    top_rates = dataset['host_acceptance_rate_float'].nlargest(4).dropna().tolist()
    return top_rates
",list of (float64),"[100.0, 100.0, 100.0, 100.0]","['99%', '99%', '99%', '99%']"
What are the 2 least common scraping sources?,Which two scraping sources appear the fewest times in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    source_counts = dataset['source'].value_counts()
    least_common_sources = source_counts.nsmallest(2).index.tolist()
    return least_common_sources",list of (string),"['previous scrape', 'city scrape']","['previous scrape', 'city scrape']"
What are the 3 prices of the most expensive properties?,Retrieve the top 3 highest prices from the price column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_prices = dataset.nlargest(3, 'price')['price'].tolist()
    return top_prices
",list of (float64),"[95150.0, 90130.0, 64430.0]","[95150.0, 90130.0, 64430.0]"
What are the 2 prices of the least expensive properties?,Retrieve the prices of the two properties with the lowest price values.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_prices = dataset.sort_values(by=""price"")[""price""].head(2)
    lowest_prices = sorted_prices.tolist()
    return lowest_prices
",list of (float64),"[0.0, 0.0]","[0.0, 0.0]"
What are the 2 numbers of reviews received by the 2 most reviewed properties?,Retrieve the number of reviews for the top 2 properties with the highest number of reviews.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_properties = dataset.nlargest(2, 'number_of_reviews')
    number_of_reviews = top_properties['number_of_reviews'].tolist()
    return number_of_reviews
",list of (int64),"[870, 822]","[870, 822]"
What are the 5 numbers of guests accommodated by the properties that can accommodate the most guests?,"What are the top 5 values in the accommodates column, ordered in descending order?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_accommodates = dataset['accommodates'].value_counts().nlargest(5).index.tolist()
    return top_accommodates
",list of (int64),"[2, 4, 1, 3, 6]","[16, 16, 16, 16, 16]"
Is there a food item with 'Fruits' as its group?,Does any food item have 'Fruits' as its group in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_fruits_group = (dataset['GROUP'] == 'Fruits').any()
    return has_fruits_group",bool,True,True
Are there food items with 'Nuts' as their sub group?,Does the dataset contain any food items where the sub group is 'Nuts'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_nuts_subgroup = any(dataset[""SUB GROUP""] == 'Nuts')
    return has_nuts_subgroup",bool,True,True
Is there a food item with scientific name 'Tilia argentea'?,Does any food item have the scientific name 'Tilia argentea'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_scientific_name = (dataset[""SCIENTIFIC NAME""] == 'Tilia argentea').any()
    return has_scientific_name",bool,True,True
Is 'Angelica' listed as a food name in the dataset?,Does the dataset contain any food with the name 'Angelica' in the FOOD NAME column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    contains_angelica = 'Angelica' in dataset['FOOD NAME'].values
    return contains_angelica",bool,True,True
How many food items are there in the dataset?,What is the total count of unique food items in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_food_count = dataset[""FOOD NAME""].nunique()
    return unique_food_count",int64,906,906
How many unique food groups are there in the dataset?,What is the count of distinct food groups present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_groups_count = dataset[""GROUP""].nunique()
    return distinct_groups_count",int64,24,24
How many unique sub groups are there in the dataset?,What is the count of distinct sub groups present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_sub_groups_count = dataset[""SUB GROUP""].nunique()
    return distinct_sub_groups_count
",int64,123,123
How many unique food items are there in the dataset?,What is the count of distinct food names in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_food_count = dataset[""FOOD NAME""].nunique()
    return distinct_food_count",int64,906,906
What is the group of the food named 'Kiwi'?,What is the GROUP value for the food item with FOOD NAME equal to 'Kiwi'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    kiwi_group = dataset.loc[dataset[""FOOD NAME""] == ""Kiwi"", ""GROUP""].iloc[0]
    return kiwi_group",string,Fruits,Fruits
What is the sub group of the food with scientific name 'Tilia argentea'?,What is the sub group value for the food item whose scientific name is 'Tilia argentea'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sub_group = dataset.loc[dataset[""SCIENTIFIC NAME""] == 'Tilia argentea', ""SUB GROUP""].iloc[0]
    return sub_group",string,Herbs,Herbs
What is the scientific name of the food named 'Colorado pinyon'?,Retrieve the scientific name corresponding to the food item named 'Colorado pinyon'.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    scientific_name = dataset.loc[dataset[""FOOD NAME""] == ""Colorado pinyon"", ""SCIENTIFIC NAME""].iloc[0]
    return scientific_name",string,Pinus edulis,Pinus edulis
What is the food name of the item with scientific name 'Tilia argentea'?,What is the FOOD NAME of the item whose SCIENTIFIC NAME is 'Tilia argentea'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    food_name = dataset.loc[dataset[""SCIENTIFIC NAME""] == ""Tilia argentea"", ""FOOD NAME""].iloc[0]
    return food_name",string,Silver linden,Silver linden
What are the top 3 most common food groups?,Which three food groups appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    group_counts = dataset[""GROUP""].value_counts()
    top_three_groups = group_counts.head(3).index.tolist()
    return top_three_groups",list of (string),"['Aquatic foods', 'Vegetables', 'Fruits']","['Aquatic foods', 'Vegetables', 'Fruits']"
What are the top 2 most common groups? If there are two that have the same number of appearances give preference alphabetically.,"Retrieve the names of the two groups with the highest frequency, sorted alphabetically in case of ties.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    group_counts = dataset['GROUP'].value_counts()
    top_groups = group_counts.nlargest(2).index.tolist()
    top_groups_sorted = sorted(top_groups)
    
    return top_groups_sorted",list of (string),"['Aquatic foods', 'Vegetables']","['Aquatic foods', 'Fruits']"
What are the 5 least common food groups?,Return the names of the 5 food groups with the lowest frequency in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    group_counts = dataset['GROUP'].value_counts().nsmallest(5)
    lowest_freq_groups = group_counts.index.tolist()
    
    return lowest_freq_groups",list of string,"['Eggs', 'Baby foods', 'Unclassified', 'Herbs and spices', 'Teas']","['Teas', 'Eggs', 'Baby foods', 'Unclassified', 'Herbs and spices']"
What are the 5 most common sub groups?,Retrieve the top 5 most frequently occurring values in the SUB GROUP column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_sub_groups = dataset['SUB GROUP'].value_counts().head(5).index.tolist()
    return top_sub_groups",list of (string),"['Fishes', 'Herbs', 'Berries', 'Tropical fruits', 'Nuts']","['Fishes', 'Herbs', 'Berries', 'Tropical fruits', 'Nuts']"
What are the lengths of the top 5 most common sub group names?,Retrieve the lengths of the top 5 most frequently occurring sub group names.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    subgroup_counts = dataset['SUB GROUP'].value_counts().head(5)
    lengths = [len(name) for name in subgroup_counts.index]
    
    return lengths",list of (int64),"[6, 5, 7, 15, 4]","[6, 5, 7, 15, 4]"
What are the number of appearances of the 2 least common groups?,What is the sum of the counts for the two groups with the smallest number of occurrences?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    group_counts = dataset['GROUP'].value_counts()
    smallest_counts = group_counts.nsmallest(2)
    sum_counts = smallest_counts.sum()
    
    return sum_counts",int64,2,"[1, 1]"
What are the number of appearances of the 3 most common groups?,What are the counts of the top 3 most frequently occurring groups in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    group_counts = dataset['GROUP'].value_counts()
    top_3_counts = group_counts.head(3).values.tolist()
    
    return top_3_counts",int64,"[166, 130, 130]","[166, 130, 130]"
What are the three most common group name lengths?,What are the top three most frequent lengths of the group names?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    group_name_lengths = dataset[""GROUP""].str.len()
    top_three_lengths = group_name_lengths.value_counts().head(3).index.tolist()
    top_three_lengths = [int(length) for length in top_three_lengths]
    
    return top_three_lengths",list of (int64),"[6, 13, 10]","[6.0, 13.0, 10.0]"
Is there a customer with 'Large Business' as their occupation?,Does any customer have 'Large Business' as their occupation value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_large_business = any(dataset[""Occupation""] == ""Large Business"")
    return has_large_business",bool,True,True
Are there customers with 'King' as their pitched product?,Does the ProductPitched column contain any entries with the value 'King'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_king = 'King' in dataset['ProductPitched'].values
    return has_king",bool,True,True
Is there a customer with designation 'VP'?,Does any customer have the designation 'VP' in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_vp = 'VP' in dataset['Designation'].values
    return has_vp
",bool,True,True
Is 'Unmarried' listed as a marital status in the dataset?,Does the MaritalStatus column contain the value 'Unmarried'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_unmarried = 'Unmarried' in dataset['MaritalStatus'].unique()
    return has_unmarried
",bool,True,True
How many customers are there in the dataset?,What is the count of unique CustomerID values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_customer_count = dataset[""CustomerID""].nunique()
    return unique_customer_count",int64,4888,4888
How many unique occupations are there in the dataset?,What is the count of distinct values in the Occupation column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_occupations = dataset[""Occupation""].nunique()
    return distinct_occupations
",int64,4,4
How many unique designations are there in the dataset?,What is the count of distinct values in the Designation column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_designation_count = dataset[""Designation""].nunique()
    return distinct_designation_count",int64,5,5
How many unique marital statuses are there in the dataset?,What is the count of distinct values in the MaritalStatus column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_count = dataset[""MaritalStatus""].nunique()
    return distinct_count",int64,4,4
What is the occupation of the customer with ID 200000?,What is the occupation category of the customer whose CustomerID is 200000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    customer = dataset.loc[dataset[""CustomerID""] == 200000]
    occupation = customer[""Occupation""].values[0]
    return occupation",category,Salaried,Salaried
What is the product pitched to the customer with ID 200001?,What is the value of the ProductPitched column for the customer whose CustomerID is 200001?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    customer_data = dataset.loc[dataset[""CustomerID""] == 200001]
    product_pitched = customer_data[""ProductPitched""].values[0]
    
    return product_pitched
",string,Deluxe,Deluxe
What is the designation of the customer with ID 200002?,What is the designation value for the customer whose CustomerID is 200002?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    customer_data = dataset.loc[dataset[""CustomerID""] == 200002]
    designation = customer_data[""Designation""].values[0]
    
    return designation
",string,Executive,Executive
What is the marital status of the customer with ID 200003?,What is the marital status category value for the customer whose CustomerID is 200003?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    customer = dataset.loc[dataset[""CustomerID""] == 200003]
    marital_status = customer[""MaritalStatus""].values[0]
    
    return marital_status
",category,Divorced,Divorced
What are the 3 most common occupations?,Which three occupations appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    occupation_counts = dataset['Occupation'].value_counts()
    top_three_occupations = occupation_counts.head(3).index.tolist()
    return top_three_occupations",list of (string),"['Salaried', 'Small Business', 'Large Business']","['Salaried', 'Small Business', 'Large Business']"
What are the top 2 most common pitched products?,Which two product pitched values appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    product_counts = dataset[""ProductPitched""].value_counts()
    top_two_products = product_counts.nlargest(2).index.tolist()
    
    return top_two_products",list of string,"['Basic', 'Deluxe']","['Basic', 'Deluxe']"
What are the 4 least common occupations?,Retrieve the 4 occupations with the lowest frequency in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    occupation_counts = dataset['Occupation'].value_counts().nsmallest(4)
    lowest_occupations = occupation_counts.index.tolist()
    
    return lowest_occupations",list of (string),"['Free Lancer', 'Large Business', 'Small Business', 'Salaried']","['Salaried', 'Small Business', 'Large Business', 'Free Lancer']"
What are the 2 least common pitched products?,Which two products from the ProductPitched column have the lowest frequency of occurrence?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    product_counts = dataset['ProductPitched'].value_counts()
    lowest_two_products = product_counts.nsmallest(2).index.tolist()
    return lowest_two_products
",list of (category),"['King', 'Super Deluxe']","['Super Deluxe', 'King']"
What are the ages of the 3 oldest customers?,Retrieve the ages of the top 3 customers with the highest age values.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_ages = dataset.nlargest(3, 'Age')['Age'].tolist()
    return top_ages",list of float64,"[61.0, 61.0, 61.0]","[61, 61, 61]"
What are the ages of the 4 youngest customers?,Retrieve the age values of the 4 customers with the smallest age values.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_ages = dataset.sort_values(by=""Age"").head(4)[""Age""].tolist()
    return sorted_ages
",list of (float64),"[18.0, 18.0, 18.0, 18.0]","[18.0, 18.0, 18.0, 18.0]"
What are the top 2 highest monthly incomes of the customers?,Retrieve the two largest values from the MonthlyIncome column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_incomes = dataset[""MonthlyIncome""].nlargest(2).tolist()
    return top_incomes
",list of float64,"[98678.0, 95000.0]","[98678, 95000]"
What are the 4 most common duration of pitch?,What are the top 4 most frequently occurring values in the DurationOfPitch column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_durations = dataset['DurationOfPitch'].value_counts().nlargest(4).index.tolist()
    return top_durations
",list of (float64),"[9.0, 7.0, 8.0, 6.0]","[9.0, 7.0, 8.0, 6.0]"
Is there any entry posted on a weekend?,Does the dataset contain any entries where the weekday_name is either Saturday or Sunday?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_weekend = ((dataset['weekday_name'] == 'Saturday') | (dataset['weekday_name'] == 'Sunday')).any()
    return has_weekend
",bool,True,True
Are there titles with more than 100 characters?,Do any titles in the dataset have a length exceeding 100 characters?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_long_title = (dataset['title_gx_text_length'] > 100).any()
    return has_long_title",bool,False,False
Do any entries have a negative sentiment according to the Cardiff NLP model?,Are there any records where the title_gx_cardiff_nlp_sentiment category indicates a negative sentiment?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_negative_sentiment = ""negative"" in dataset[""title_gx_cardiff_nlp_sentiment""].values
    return has_negative_sentiment",bool,False,False
"Is the term 'linux' mentioned in the ""Clusters II"" column?",Does the 'Clusters II' column contain the string 'linux'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    contains_linux = 'linux' in dataset['Clusters II'].str.lower().values
    return contains_linux",bool,False,True
How many entries were posted in the morning?,What is the count of entries where the partofday attribute is set to morning?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    morning_count = dataset[dataset[""partofday""] == ""morning""].shape[0]
    return morning_count
",int64,1516,1516
What's the highest score received by an entry?,What is the maximum score value present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_score = dataset[""score""].max()
    return max_score
",uint16,6015,6015
"On average, how many descendants does an entry have?",What is the average number of descendants per entry in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_descendants = dataset[""descendants""].mean()
    return average_descendants
",float64,339.2486210000000,339.2486210000000
How many entries are in the Autumn season?,What is the count of entries where the season is Autumn?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    autumn_count = dataset[dataset[""season""] == ""Autumn""].shape[0]
    return autumn_count
",int64,2301,2301
Which day of the week has the most entries?,What is the name of the weekday that has the highest number of entries in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    weekday_counts = dataset['weekday_name'].value_counts()
    most_common_weekday = weekday_counts.idxmax()
    
    return most_common_weekday",string,Tuesday,Tuesday
What is the predominant language used in titles?,What is the most frequently occurring language category in the title_gx_lang column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_lang = dataset[""title_gx_lang""].mode()[0]
    return most_frequent_lang",string,en,en
In which season was the entry with the highest score posted?,What is the season value for the entry that has the maximum score?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_score_entry = dataset.loc[dataset[""score""] == dataset[""score""].max()]
    season_value = max_score_entry[""season""].iloc[0]
    
    return season_value
",string,Spring,Spring
On which part of the day are most entries posted?,What is the part of the day with the highest number of entries posted?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    partofday_counts = dataset[""partofday""].value_counts()
    most_common_partofday = partofday_counts.idxmax()
    
    return most_common_partofday",string,afternoon,afternoon
"List the top 4 most frequent terms in the ""Clusters II"" column.",What are the 4 most commonly occurring values in the Clusters II column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_clusters = dataset['Clusters II'].value_counts().head(4).index.tolist()
    return top_clusters
",list of string,"['year, work, new', 'google, web, firefox, open', 'apple, linux, rust, iphone', 'facebook, twitter, die, account']","['year, work, new', 'google, web, firefox, open', 'apple, linux, rust, iphone', 'facebook, twitter, die, account']"
Name the 2 month names which appear less in the dataset.,What are the two month names with the lowest frequency in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    month_counts = dataset['month_name'].value_counts()
    lowest_months = month_counts.nsmallest(2).index.tolist()
    return lowest_months",list of string,"['July', 'December']","['December', 'July']"
Identify the top 3 weekdays based on entry frequency.,What are the 3 most frequent weekdays based on the number of entries?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    weekday_counts = dataset['weekday_name'].value_counts()
    top_3_weekdays = weekday_counts.head(3).index.tolist()
    return top_3_weekdays",list of (string),"['Tuesday', 'Wednesday', 'Thursday']","['Tuesday', 'Wednesday', 'Thursday']"
Provide the bottom 4 seasons in terms of entry count.,What are the 4 seasons with the lowest number of entries?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    season_counts = dataset['season'].value_counts().nsmallest(4)
    lowest_seasons = season_counts.index.tolist()
    
    return lowest_seasons",list of (string),"['Summer', 'Autumn', 'Winter', 'Spring']","['Spring', 'Winter', 'Autumn', 'Summer']"
List the top 3 scores in the dataset.,What are the three highest values in the score column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_scores = dataset.nlargest(3, 'score')['score'].tolist()
    return top_scores
",list of (uint16),"[6015, 5771, 4338]","[6015, 5771, 4338]"
Name the bottom 5 title text lengths.,What are the titles with the smallest 5 title text lengths?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_data = dataset.sort_values('title_gx_text_length')
    smallest_titles = sorted_data['title'].head(5).tolist()
    return smallest_titles",list of (string),"['X', 'VR', 'AI', 'Jd', '42']","[1.0, 2.0, 2.0, 2.0, 2.0]"
Identify the top 4 numbers of descendants.,What are the 4 highest values in the descendants column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_4_descendants = dataset.nlargest(4, 'descendants')['descendants'].tolist()
    return top_4_descendants",list of float64,"[4576.0, 3678.0, 3676.0, 3463.0]","[4576.0, 3678.0, 3676.0, 3463.0]"
Provide the bottom 6 scores in the dataset.,What are the 6 smallest values in the score column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_scores = dataset.nsmallest(6, 'score')['score'].tolist()
    return smallest_scores
",list of (uint16),"[501, 501, 501, 501, 501, 501]","[501, 501, 501, 501, 501, 501]"
Are there any employees with more than 7 projects?,Does the dataset contain any staff members who have worked on more than 7 projects?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_more_than_7_projects = (dataset[""Number of Projects""] > 7).any()
    return has_more_than_7_projects
",bool,False,False
Has any employee worked for more than 300 hours on average per month?,Is there any employee whose average monthly hours exceed 300?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_employee = (dataset[""Average Monthly Hours""] > 300).any()
    return has_employee
",bool,True,True
Are all satisfaction levels above 0.5?,Is the minimum satisfaction level in the dataset greater than 0.5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_satisfaction = dataset[""Satisfaction Level""].min()
    is_greater = min_satisfaction > 0.5
    
    return is_greater
",bool,False,False
Were there any employees hired in 2019?,Are there any records in the dataset where the Date Hired falls within the year 2019?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    records_in_2019 = dataset[dataset['Date Hired'].dt.year == 2019]
    has_records = not records_in_2019.empty
    
    return has_records",bool,True,True
How many unique departments are there?,What is the count of distinct values in the Department column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_departments_count = dataset[""Department""].nunique()
    return distinct_departments_count
",int64,10,10
What's the maximum number of years an employee has been in the company?,What is the highest value in the Years in the Company column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_years = dataset[""Years in the Company""].max()
    return max_years
",uint8,10,10
How many employees have been promoted in the last 5 years?,What is the count of employees who have been promoted in the last 5 years?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    promoted_count = dataset[dataset[""Promoted in the last 5 years?""] == ""Yes""].shape[0]
    return promoted_count
",int64,319,319
"On average, how many hours do employees work monthly?",What is the mean value of the average monthly hours worked by employees?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_hours = dataset[""Average Monthly Hours""].mean()
    return mean_hours
",float64,201.0503370000000,201.05
Which department has the highest number of employees?,What is the name of the department with the maximum count of employees?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    department_counts = dataset[""Department""].value_counts()
    max_department = department_counts.idxmax()
    
    return max_department",string,sales,sales
What's the most common salary level among employees?,Which salary category appears most frequently among the employees?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    salary_counts = dataset[""salary""].value_counts()
    most_frequent_salary = salary_counts.idxmax()
    
    return most_frequent_salary",string,low,low
Which year had the highest number of employees hired?,"In which year were the most employees hired, based on the date hired column?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    dataset['Year Hired'] = dataset['Date Hired'].dt.year
    year_counts = dataset['Year Hired'].value_counts()
    most_hired_year = year_counts.idxmax()
    
    return most_hired_year
",int64,2017,2017
Which salary level has the least number of employees who had an accident at work?,What is the salary category with the minimum count of employees who experienced a work accident?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Filter employees who experienced a work accident
    accident_employees = dataset[dataset['Work Accident'] == 'Yes']
    # Group by salary category and count employees
    salary_counts = accident_employees.groupby('salary').size()
    # Find the salary category with the minimum count
    min_salary = salary_counts.idxmin()
    
    return min_salary",string,high,high
Name the top 4 departments with the most employees.,What are the names of the 4 departments that have the highest count of employees?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    department_counts = dataset['Department'].value_counts()
    top_4_departments = department_counts.head(4).index.tolist()
    return top_4_departments",list of string,"['sales', 'technical', 'support', 'IT']","['sales', 'technical', 'support', 'IT']"
List the 3 departments with the most number of promotions in the last 5 years that have at least one promotion. ,"What are the top 3 departments with the highest count of promotions in the last 5 years, considering only departments that have at least one promotion?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    promoted_departments = dataset[dataset['Promoted in the last 5 years?'] == 'Yes']
    department_counts = promoted_departments['Department'].value_counts()
    top_departments = department_counts.head(3).index.tolist()
    
    return top_departments",list of string,"['sales', 'management', 'marketing']","['hr', 'accounting', 'IT']"
Identify the 3 departments with the lowest average satisfaction levels.,What are the names of the 3 departments that have the smallest average satisfaction level values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_satisfaction = dataset.groupby('Department')['Satisfaction Level'].mean()
    smallest_departments = avg_satisfaction.nsmallest(3).index.tolist()
    return smallest_departments",list of string,"['accounting', 'hr', 'technical']","['accounting', 'hr', 'technical']"
What are the 2 departments with the lowest average monthly hours worked?,Which two departments have the smallest mean values in the average monthly hours column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    department_hours_mean = dataset.groupby('Department')['Average Monthly Hours'].mean()
    smallest_departments = department_hours_mean.nsmallest(2).index.tolist()
    return smallest_departments
",list of string,"['hr', 'marketing']","['hr', 'marketing']"
Identify the top 3 years with the highest employee hiring.,What are the 3 years with the highest count of employee hiring based on the Year Hired column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    year_counts = dataset['Year Hired'].value_counts().nlargest(3)
    top_years = year_counts.index.tolist()
    
    return top_years",list of (int32),"[2017, 2018, 2016]","['2017', '2018', '2016']"
Which are the highest 3 satisfaction levels among employees who left?,What are the top 3 satisfaction levels for employees who have left the company?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    left_employees = dataset[dataset[""Left""] == ""Yes""]
    top_satisfaction = left_employees[""Satisfaction Level""].nlargest(3).tolist()
    
    return top_satisfaction",list of float64,"[0.92, 0.92, 0.92]","[0.92, 0.92, 0.92]"
List the bottom 5 average monthly hours among employees who were promoted in the last 5 years.,What are the 5 lowest values of average monthly hours for employees who have been promoted in the last 5 years?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    promoted_employees = dataset[dataset[""Promoted in the last 5 years?""] == ""Yes""]
    sorted_hours = promoted_employees.sort_values(by=""Average Monthly Hours"")[""Average Monthly Hours""].head(5)
    lowest_hours = sorted_hours.tolist()
    
    return lowest_hours
",list of float64,"[100, 100, 102, 102, 106]","[215, 133, 159, 241, 247]"
Whhat are the top 6 last evaluation scores?,Retrieve the 6 highest values from the Last Evaluation column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_evaluations = dataset.nlargest(6, 'Last Evaluation')['Last Evaluation'].tolist()
    return top_evaluations
",list of (float64),"[1.0, 1.0, 1.0, 1.0, 1.0, 1.0]","[1, 1, 1, 1, 1, 1]"
Did any incident result in the total destruction of the aircraft?,Were there any incidents where the aircraft damage type indicates total destruction?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_total_destruction = (dataset[""Aircaft_Damage_Type""] == ""Total destruction"").any()
    return has_total_destruction
",bool,False,True
Have there been any incidents where the cause was related to the undercarriage of the aircraft?,Are there any records in the dataset where the incident cause includes a reference to the aircraft's undercarriage?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    contains_undercarriage = dataset[""Incident_Cause(es)""].str.contains(""undercarriage"", case=False, na=False).any()
    return contains_undercarriage",bool,True,True
Has there been any instance where the ground casualties were non-zero?,Are there any records in the dataset where the ground casualties attribute is not zero?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_ground_casualties = (dataset['Ground_Casualties'] != '0').any()
    return has_ground_casualties
",bool,True,True
Are there incidents where the aircraft was involved in a collision?,Does the dataset contain any incidents where the aircraft was involved in a collision?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_collision = (dataset['Incident_Category'] == 'Collision').any()
    return has_collision",bool,False,True
How many unique aircraft models are in the dataset?,What is the count of distinct aircraft models present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_models_count = dataset[""Aircaft_Model""].nunique()
    return distinct_models_count
",int64,3523,3523
What's the highest number of occupants recorded in an incident?,,,,ERROR,524.0
How many incidents occurred in January 2022?,What is the count of incidents where the Incident_Date falls in January 2022?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    jan_2022_incidents = dataset[dataset['Incident_Date'].str.contains('2022-01')]
    count = len(jan_2022_incidents)
    return count
",int64,0,7
How many incidents resulted in non-zero fatalities?,What is the count of incidents where the fatalities were greater than zero?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    fatal_incidents_count = dataset[dataset[""Fatalities""] > 0].shape[0]
    return fatal_incidents_count
",int64,9231,0
Which aircraft model was involved in the most incidents?,What is the aircraft model that has the highest count of incidents?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    incident_counts = dataset[""Aircaft_Model""].value_counts()
    most_common_model = incident_counts.idxmax()
    
    return most_common_model
",string,Junkers Ju-52/3m,Junkers Ju-52/3m
What was the cause of the incident that resulted in the most fatalities?,What was the cause of the incident that had the highest number of fatalities?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_fatalities_row = dataset.loc[dataset[""Fatalities""] == dataset[""Fatalities""].max()]
    incident_cause = max_fatalities_row[""Incident_Cause(es)""].iloc[0]
    
    return incident_cause",string,"Security - Hijack, Security - Suicide","Airplane - Pressurization, Airplane - Pressurization - Bulkhead failure, Airplane - Pressurization - Explosive decompression, Maintenance - (repair of) previous damage, Result - Loss of control"
What is the most common phase of aircraft during incidents?,Which aircraft phase occurs most frequently in the incident records?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    phase_counts = dataset[""Aircraft_Phase""].value_counts()
    most_frequent_phase = phase_counts.idxmax()
    
    return most_frequent_phase",string,En route (ENR),En route (ENR)
What is the location of the incident with the highest number of onboard occupants?,,,,ERROR,near Ueno Village...
What are the top 3 most common causes of incidents?,Which three values appear most frequently in the Incident_Cause(es) column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_causes = dataset['Incident_Cause(es)'].value_counts().head(3).index.tolist()
    return top_causes",list of (string),"['Info-Unavailable', 'Result - Runway excursion', 'Result - Damaged on the ground']","['Info-Unavailable', 'Result - Runway excursion', 'Result - Damaged on the ground']"
List the top 5 locations where the most incidents have occurred. If there are two or more with the same number order them alphabetically,"Provide the names of the top 5 locations with the highest incident counts, ordered alphabetically in case of ties.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    incident_counts = dataset[""Incident_Location""].value_counts().sort_values(ascending=False)
    top_locations = incident_counts.head(5).index.tolist()
    top_locations_sorted = sorted(top_locations)
    
    return top_locations_sorted",list of string,"['Beirut Inter...', 'Havana-José ...', 'Miami Intern...', 'Rio de Janei...', 'unknown']","['Arnhem', 'Beirut International Airport (BEY)', 'Glasgow-Preswick Airport', 'Havana-José Martí International Airport (HAV)', 'Miami International Airport, FL (MIA)']"
Name the 2 most frequently occurring aircraft operators in the dataset.,What are the top 2 aircraft operators that appear most often in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_operators = dataset[""Aircaft_Operator""].value_counts().head(2).index.tolist()
    return top_operators",list of (string),"['USAAF', 'USAF']","['USAAF', 'USAF']"
What are the top 2 most common types of aircraft damage?,Which two types of aircraft damage occur most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    damage_counts = dataset[""Aircaft_Damage_Type""].value_counts()
    top_two_damage_types = damage_counts.head(2).index.tolist()
    return top_two_damage_types",list of (string),"['Damaged beyond repair', 'Substantial']","['Damaged beyond repair', 'Substantial']"
What are the 5 highest numbers of onboard passengers in incidents?,Retrieve the top 5 values from the Onboard_Passengers column in descending order.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Convert Onboard_Passengers to numeric, handling any non-numeric values by coercing to NaN
    dataset['Onboard_Passengers'] = pd.to_numeric(dataset['Onboard_Passengers'], errors='coerce')
    # Drop rows with NaN values in Onboard_Passengers
    valid_passengers = dataset.dropna(subset=['Onboard_Passengers'])
    # Sort in descending order and get top 5 values
    top_passengers = valid_passengers['Onboard_Passengers'].sort_values(ascending=False).head(5)
    # Convert to list of integers
    answer = [int(x) for x in top_passengers.values]
    
    return answer
",list of (int64),[],"[509.0, 503.0, 497.0, 451.0, 440.0]"
List the 3 highest numbers of onboard crew in incidents.,What are the top 3 values in the Onboard_Crew column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_crew_values = dataset['Onboard_Crew'].value_counts().head(3).index.tolist()
    return top_crew_values
",list of int64,"['Fatalities:  / Occupants:', 'Fatalities: 0 / Occupants:', 'Fatalities: 0 / Occupants: 2']","[32.0, 31.0, 29.0]"
Identify the 4 highest numbers of total onboard occupants in incidents.,,,,ERROR,"[524.0, 521.0, 517.0, 469.0]"
What are the 6 highest numbers of ground casualties in incidents?,Retrieve the top 6 highest values of ground casualties from the incidents.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Convert Ground_Casualties to numeric, handling any non-numeric values
    dataset['Ground_Casualties'] = pd.to_numeric(dataset['Ground_Casualties'], errors='coerce')
    # Drop rows with NaN values in Ground_Casualties
    dataset_clean = dataset.dropna(subset=['Ground_Casualties'])
    # Sort by Ground_Casualties in descending order and get top 6
    top_ground_casualties = dataset_clean.nlargest(6, 'Ground_Casualties')['Ground_Casualties'].astype(int).tolist()
    
    return top_ground_casualties
",list of (int64),[],"[1600, 900, 237, 107, 88, 87]"
"Are there any properties with a price over 1,000,000?","Does the dataset contain any real estate listings where the price exceeds 1,000,000?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_price = (dataset[""Precio""] > 1000000).any()
    return has_high_price",bool,True,True
Any property with more than 10 bedrooms?,Are there any properties in the dataset that have more than 10 bedrooms?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_more_than_10_bedrooms = (dataset[""Habitaciones""] > 10).any()
    return has_more_than_10_bedrooms
",bool,True,True
Are there properties with zero bathrooms?,Does the dataset contain any properties where the number of bathrooms is equal to zero?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_zero_bathrooms = (dataset[""Baños""] == 0).any()
    return has_zero_bathrooms
",bool,False,False
Has any property been listed for more than 100 days?,Is there any property in the dataset with a duration value exceeding 100 days?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_long_duration = (dataset[""Duración""] > 100).any()
    return has_long_duration
",bool,True,True
What's the highest price in the dataset?,What is the maximum value in the Precio column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_precio = dataset[""Precio""].max()
    return max_precio
",uint32,17000000,17000000.0
What's the total number of properties listed?,What is the sum of all properties in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_properties = dataset.shape[0]
    return total_properties
",int64,26026,26026
What's the longest duration a property has been listed?,What is the maximum value in the Duración column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_duration = dataset[""Duración""].max()
    return max_duration
",uint16,2535,2535.0
What's the largest surface listed?,What is the maximum value in the Superficie column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_superficie = dataset[""Superficie""].max()
    return max_superficie
",uint16,5504,5504.0
What's the most common type of property listed?,What is the mode of the Tipo column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mode_value = dataset[""Tipo""].mode()[0]
    return mode_value
",string,Piso,Piso
Which advertiser has listed the most properties?,What is the name of the advertiser that has the highest number of property listings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    advertiser_counts = dataset[""Anunciante""].value_counts()
    top_advertiser = advertiser_counts.idxmax()
    
    return top_advertiser",string,housell,housell
Which property has the highest price?,What is the property with the maximum price value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_price_property = dataset.loc[dataset[""Precio""] == dataset[""Precio""].max(), ""Referencia""].iloc[0]
    return max_price_property
",string,GM31-121816,GM31-121816
Which property has the largest surface area?,What is the property with the highest value in the Superficie column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_superficie_property = dataset.loc[dataset[""Superficie""] == dataset[""Superficie""].max()]
    property_id = max_superficie_property[""Id""].iloc[0]
    
    return property_id
",string,casa_rustica-navarredonda_buitrago-75050464421_101600,IF5563-FINCA VALLE LOZOYA
What are the five types of properties more frequently listed?,What are the top five most common property types in the listings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_property_types = dataset['Tipo'].value_counts().head(5).index.tolist()
    return top_property_types
",list of (string),"['Piso', 'Chalet', 'Apartamento', 'Chalet adosado', 'Chalet unifamiliar']","['Piso', 'Chalet', 'Apartamento', 'Chalet adosado', 'Chalet unifamiliar']"
What are the 2 types of properties which are listed more frequently?,Which two property types (Tipo) appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_two_types = dataset[""Tipo""].value_counts().head(2).index.tolist()
    return top_two_types",list of string,"['Piso', 'Chalet']","['Piso', 'Chalet']"
What are the 2 most common localities for properties listed?,Which two localities appear most frequently in the property listings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_localities = dataset[""Localidad""].value_counts().head(2).index.tolist()
    return top_localities",list of (string),"['Madrid Capital', 'Torrejón de Ardoz']","['Madrid Capital', 'Torrejón de Ardoz']"
What are the 2 most common districts for properties listed?,Which two districts appear most frequently in the property listings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    district_counts = dataset[""Distrito""].value_counts()
    top_two_districts = district_counts.head(2).index.tolist()
    return top_two_districts
",list of string,"['Centro', 'Salamanca']","['Centro', 'Salamanca']"
What are the 5 highest property prices listed?,Retrieve the top 5 property prices from the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_prices = dataset.nlargest(5, 'Precio')['Precio'].tolist()
    return top_prices
",list of uint32,"[17000000, 13600000, 13250000, 13000000, 12000000]","[17000000.0, 13600000.0, 13250000.0, 13000000.0, 12000000.0]"
List the 3 longest durations properties have been listed.,What are the top 3 highest values in the Duración column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_duration = dataset[""Duración""].nlargest(3).tolist()
    return top_duration
",list of uint16,"[2535, 2534, 2285]","[2535.0, 2534.0, 2285.0]"
Identify the 4 largest surfaces listed.,What are the four highest values in the Superficie column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_four_superficie = dataset.nlargest(4, 'Superficie')['Superficie'].tolist()
    return top_four_superficie
",list of uint16,"[5504, 3957, 2974, 2927]","[5504.0, 3957.0, 2974.0, 2927.0]"
What are the 6 highest numbers of bedrooms in properties listed?,Retrieve the top 6 values from the Habitaciones column sorted in descending order.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_habitaciones = dataset[""Habitaciones""].sort_values(ascending=False).head(6).tolist()
    return top_habitaciones
",list of (uint8),"[20, 20, 20, 20, 20, 20]","[20, 20, 20, 20, 20, 20]"
Are there more than 2000 customers with a monthly charge higher than $80?,Is the count of customers whose monthly charges exceed $80 greater than 2000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    high_charge_customers = dataset[dataset[""MonthlyCharges""] > 80]
    count = len(high_charge_customers)
    answer = count > 2000
    return answer
",bool,True,True
Do all customers have phone service?,Is the PhoneService attribute set to 'Yes' for every customer in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    all_yes = (dataset[""PhoneService""] == 'Yes').all()
    return all_yes",bool,False,True
Are there any customers with no internet service?,Does the dataset contain any customers where the InternetService attribute is set to 'No'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_no_internet = (dataset[""InternetService""] == 'No').any()
    return has_no_internet
",bool,True,True
Are there any customers who are senior citizens and have dependents?,Are there any customers with SeniorCitizen set to 1 and Dependents set to Yes?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_customers = dataset[(dataset['SeniorCitizen'] == 1) & (dataset['Dependents'] == 'Yes')]
    answer = len(filtered_customers) > 0
    return answer",bool,True,True
How many unique customers are there in the dataset?,What is the count of distinct customer IDs in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_customer_count = dataset[""customerID""].nunique()
    return distinct_customer_count
",int64,7043,7043
What's the highest monthly charge?,What is the maximum value in the MonthlyCharges column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_monthly_charge = dataset[""MonthlyCharges""].max()
    return max_monthly_charge
",float64,118.75,118.75
What's the total number of customers?,What is the count of unique customer IDs in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_customer_count = dataset[""customerID""].nunique()
    return unique_customer_count
",int64,7043,7043
What's the longest tenure?,What is the maximum value in the tenure column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_tenure = dataset[""tenure""].max()
    return max_tenure
",uint8,72,72
What's the most common payment method?,Which payment method occurs most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    payment_method_counts = dataset[""PaymentMethod""].value_counts()
    most_frequent_payment_method = payment_method_counts.idxmax()
    
    return most_frequent_payment_method",string,Electronic check,Electronic check
What's the most common contract type?,Which contract type appears most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    contract_counts = dataset[""Contract""].value_counts()
    most_frequent_contract = contract_counts.idxmax()
    
    return most_frequent_contract",string,Month-to-month,Month-to-month
Which customer has the highest total charge?,What is the customer ID of the customer with the maximum total charges?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_total_charges_customer = dataset.loc[dataset[""TotalCharges""] == dataset[""TotalCharges""].max()]
    customer_id = max_total_charges_customer[""customerID""].values[0]
    
    return customer_id
",string,30-11-2888,30-11-2888
Which customer has the highest monthly charge?,What is the customer ID of the customer with the maximum monthly charges?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_monthly_charges_customer = dataset.loc[dataset[""MonthlyCharges""] == dataset[""MonthlyCharges""].max()]
    customer_id = max_monthly_charges_customer[""customerID""].iloc[0]
    
    return customer_id
",string,30-11-7568,30-11-7568
What are the top 3 most common internet services?,Which three internet service categories appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_internet_services = dataset['InternetService'].value_counts().nlargest(3).index.tolist()
    return top_internet_services
",list of string,"['Fiber optic', 'DSL', 'No']","['Fiber optic', 'DSL', 'No']"
Name the 4 most common payment methods.,What are the top 4 payment methods that appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    payment_counts = dataset['PaymentMethod'].value_counts()
    top_4_payment_methods = payment_counts.head(4).index.tolist()
    return top_4_payment_methods",list of string,"['Electronic check', 'Mailed check', 'Bank transfer (automatic)', 'Credit card (automatic)']","['Electronic check', 'Mailed check', 'Bank transfer (automatic)', 'Credit card (automatic)']"
What are the 2 most common types of contract?,Which two contract types appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    contract_counts = dataset[""Contract""].value_counts()
    top_two_contracts = contract_counts.head(2).index.tolist()
    
    return top_two_contracts",list of string,"['Month-to-month', 'Two year']","['Month-to-month', 'Two year']"
What are the 2 most common services for which customers have multiple lines?,Which two services are most frequently associated with customers who have multiple lines?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    multiple_lines_customers = dataset[dataset['MultipleLines'] == 'Yes']
    service_columns = ['OnlineSecurity', 'OnlineBackup', 'DeviceProtection', 'TechSupport', 'StreamingTV', 'StreamingMovies']
    service_counts = multiple_lines_customers[service_columns].apply(lambda x: x.value_counts().get('Yes', 0))
    top_services = service_counts.nlargest(2).index.tolist()
    
    return top_services
",list of string,"['StreamingMovies', 'StreamingTV']","['No', 'Yes']"
What are the 5 highest total charges?,Retrieve the top 5 values from the TotalCharges column in descending order.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_charges = dataset[""TotalCharges""].sort_values(ascending=False).head(5).tolist()
    return top_charges
",list of float64,"[8684.8, 8672.45, 8670.1, 8594.4, 8564.75]","[8684.8, 8672.45, 8670.1, 8594.4, 8564.75]"
What are the 4 highest monthly charges?,Retrieve the top 4 values from the MonthlyCharges column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_4_charges = dataset[""MonthlyCharges""].nlargest(4).tolist()
    return top_4_charges
",list of (float64),"[118.75, 118.65, 118.6, 118.6]","[118.75, 118.65, 118.6, 118.6]"
What are the 6 longest tenures?,Retrieve the top 6 highest tenure values from the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_tenures = dataset.nlargest(6, 'tenure')['tenure'].tolist()
    return top_tenures
",list of (uint8),"[72, 72, 72, 72, 72, 72]","[72, 72, 72, 72, 72, 72]"
What are the 3 shortest tenures?,Retrieve the three smallest values from the tenure column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_tenures = dataset.nsmallest(3, 'tenure')['tenure'].tolist()
    return smallest_tenures
",list of (uint8),"[0, 0, 0]","[0, 0, 0]"
Is there a listing with a review score rating of 100?,Does any listing in the dataset have a review score rating equal to 100?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_perfect_rating = (dataset[""review_scores_rating""] == 100).any()
    return has_perfect_rating
",bool,True,True
Are there any hosts who have listed more than 10 properties?,Do any hosts in the dataset have a host_total_listings_count greater than 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_listings = (dataset[""host_total_listings_count""] > 10).any()
    return has_high_listings
",bool,True,True
Are all listings instantly bookable?,Is the instant bookable attribute set to True for every listing in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    all_instant_bookable = (dataset[""instant_bookable""] == ""t"").all()
    return all_instant_bookable
",bool,False,False
Is there a listing that requires a minimum of 365 nights?,Does any listing have a minimum nights requirement of 365 or more?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_min_nights = (dataset[""minimum_nights""] >= 365).any()
    return has_min_nights
",bool,True,True
How many unique hosts are there in the dataset?,What is the count of distinct host IDs present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_host_count = dataset[""host_id""].nunique()
    return distinct_host_count
",int64,26765,26765
What is the highest number of listings a single host has?,What is the maximum value in the host_total_listings_count column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_listings = dataset[""host_total_listings_count""].max()
    return max_listings
",float64,2739.0,2739.0
How many unique locations are listed by the hosts?,What is the count of distinct host locations in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_host_locations = dataset[""host_location""].nunique()
    return distinct_host_locations
",int64,1316,1316
What is the average review score rating across all listings?,Calculate the mean value of the review scores rating column for all listings.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_rating = dataset[""review_scores_rating""].mean()
    return mean_rating",float64,93.76718800000000,93.767188
What is the most common host location?,Which host location appears most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_location = dataset[""host_location""].mode()[0]
    return most_frequent_location
",string,"New York, New York, United States","New York, New York, United States"
What is the name of the listing with the most bedrooms?,Which listing has the highest number of bedrooms?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_bedrooms = dataset[""bedrooms""].max()
    listing_with_max_bedrooms = dataset.loc[dataset[""bedrooms""] == max_bedrooms, ""name""].iloc[0]
    return listing_with_max_bedrooms
",string,"Walk to UN, Macy's & Empire State B","Walk to UN, Macy's & Empire State B"
Which location has the highest number of listings?,What is the name of the location with the most listings in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    location_counts = dataset['host_location'].value_counts()
    most_common_location = location_counts.idxmax()
    
    return most_common_location",string,"New York, New York, United States","New York, New York, United States"
What is the most common property type?,Which property type occurs most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    property_type_counts = dataset[""property_type""].value_counts()
    most_frequent_property_type = property_type_counts.idxmax()
    
    return most_frequent_property_type
",string,Entire apartment,Entire apartment
What are the top 6 unique host locations with the most listings?,Retrieve the 6 most frequently occurring distinct host locations based on the number of listings.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    host_location_counts = dataset['host_location'].value_counts().head(6)
    top_host_locations = host_location_counts.index.tolist()
    
    return top_host_locations",list of string,"['New York, New York, United States', 'US', 'Brooklyn, New York, United States', 'Queens, New York, United States', 'Los Angeles, California, United States', 'Bronx, New York, United States']","['New York, New York, United States', 'US', 'Brooklyn, New York, United States', 'Queens, New York, United States', 'Los Angeles, California, United States', 'Bronx, New York, United States']"
What are the 2 unique host locations with the most listings?,Which two distinct host locations have the highest number of listings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    host_location_counts = dataset['host_location'].value_counts()
    top_two_locations = host_location_counts.head(2).index.tolist()
    return top_two_locations
",list of string,"['New York, New York, United States', 'US']","['New York, New York, United States', 'US']"
List the 4 most common property types.,What are the top 4 property types that appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_property_types = dataset['property_type'].value_counts().head(4).index.tolist()
    return top_property_types",list of string,"['Entire apartment', 'Private room in apartment', 'Private room in house', 'Private room in townhouse']","['Entire apartment', 'Private room in apartment', 'Entire condominium', 'Entire house']"
What are the 2 most common types of properties?.,Which two property types appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    property_type_counts = dataset[""property_type""].value_counts()
    top_two_property_types = property_type_counts.head(2).index.tolist()
    return top_two_property_types",list of (string),"['Entire apartment', 'Private room in apartment']","['Entire apartment', 'Private room in apartment']"
What are the top 3 highest review score ratings?,Retrieve the top 3 highest values from the review_scores_rating column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_ratings = dataset[""review_scores_rating""].nlargest(3).tolist()
    return top_ratings
",list of (float64),"[100.0, 100.0, 100.0]","[100, 100, 100]"
What are the 5 lowest number of minimum nights required?,Retrieve the 5 smallest values from the minimum_nights column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_min_nights = dataset.nsmallest(5, 'minimum_nights')['minimum_nights'].tolist()
    return smallest_min_nights
",list of (uint16),"[1, 1, 1, 1, 1]","[1, 1, 1, 1, 1]"
What are the 4 highest unique number of bedrooms listed?,Retrieve the top 4 distinct values of bedrooms in descending order.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_bedrooms = dataset['bedrooms'].dropna().unique()
    top_bedrooms = sorted(top_bedrooms, reverse=True)[:4]
    return top_bedrooms
",list of (float64),"[np.float64(21.0), np.float64(14.0), np.float64(13.0), np.float64(11.0)]","[21, 14, 13, 11]"
What are the 6 lowest review scores given because of locations?,Retrieve the six smallest review scores specifically for the location attribute.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_scores = dataset.nsmallest(6, ""review_scores_location"")[""review_scores_location""].tolist()
    return smallest_scores
",list of (float64),"[2.0, 2.0, 2.0, 2.0, 2.0, 2.0]","[2, 2, 2, 2, 2, 2]"
Was there a day when the minimum temperature was below zero and it didn't rain?,Did any date have a minimum temperature less than 0 and precipitation equal to 0?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[(dataset['tmin'] < 0) & (dataset['prec'] == 0)]
    answer = not filtered_data.empty
    return answer
",bool,True,True
Are there records where the solar radiation exceeds 10 but the maximum temperature was below 20?,Does the dataset contain any entries where the solar radiation value is greater than 10 and the maximum temperature is less than 20?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_entries = dataset[(dataset['sol'] > 10) & (dataset['tmax'] < 20)]
    answer = not filtered_entries.empty
    return answer
",bool,True,True
Did any day with maximum wind speed above 15 also have average wind speed below 5?,Were there any days where the maximum wind speed (racha) exceeded 15 and the average wind speed (velmedia) was less than 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_days = dataset[(dataset['racha'] > 15) & (dataset['velmedia'] < 5)]
    answer = not filtered_days.empty
    return answer
",bool,True,True
Were there days in the summer where the minimum temperature dropped below 10?,Are there any dates in the summer season where the minimum temperature (tmin) was less than 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    summer_dates = dataset[dataset[""season""] == ""summer""]
    low_temp_dates = summer_dates[summer_dates[""tmin""] < 10]
    has_low_temp_dates = not low_temp_dates.empty
    
    return has_low_temp_dates
",bool,False,True
How many days had a maximum temperature above 30 degrees?,Count the number of days where the tmax value exceeded 30 degrees.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = len(dataset[dataset[""tmax""] > 30])
    return count
",int64,5500,5500
"On average, what's the minimum temperature during winters?",What is the average of the minimum temperature values recorded during the winter season?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    winter_data = dataset[dataset[""season""] == ""winter""]
    avg_tmin = winter_data[""tmin""].mean()
    
    return avg_tmin
",float64,,2.7196080000000000
How many unique days had solar radiation measurements?,What is the count of distinct days where the sol column has non-null values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_days_count = dataset[dataset['sol'].notnull()]['fecha'].nunique()
    return distinct_days_count
",int64,28615,28615
What's the highest wind speed ever recorded?,"What is the maximum value in the racha column, which represents wind speed?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_racha = dataset[""racha""].max()
    return max_racha
",float64,32.2,32.2
On which weekday did the highest temperature ever occur?,What is the name of the weekday when the maximum temperature was recorded?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_temp_row = dataset.loc[dataset[""tmax""] == dataset[""tmax""].max()]
    weekday_name = max_temp_row[""weekday_name""].iloc[0]
    
    return weekday_name
",string,Friday,Friday
In which season do we find the highest average solar radiation?,Which season has the maximum average value in the solar radiation column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    season_avg_sol = dataset.groupby('season')['sol'].mean()
    max_season = season_avg_sol.idxmax()
    
    return max_season",string,Summer,Summer
Which month had the lowest average wind speed?,What is the name of the month with the minimum average wind speed?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_wind_by_month = dataset.groupby('month_name')['velmedia'].mean()
    min_wind_month = avg_wind_by_month.idxmin()
    
    return min_wind_month
",string,October,October
On what date was the highest pressure ever recorded?,What is the fecha (date) corresponding to the maximum presMax value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_pres_row = dataset.loc[dataset[""presMax""] == dataset[""presMax""].max()]
    fecha_value = max_pres_row[""fecha""].iloc[0]
    
    return fecha_value
","datetime64[us, UTC]",22-12-2016,22-12-2016
What are the top 3 months with the highest average maximum temperatures?,Which 3 month names have the highest average tmax values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_tmax_by_month = dataset.groupby('month_name')['tmax'].mean()
    top_3_months = avg_tmax_by_month.nlargest(3).index.tolist()
    return top_3_months
",list of (string),"['July', 'August', 'June']","['July', 'August', 'June']"
"Which are the 5 weekdays with the most rain, ranked from highest to lowest?","What are the top 5 weekdays with the highest precipitation values, ordered from most to least rain?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Group by weekday_name and calculate mean precipitation for each weekday
    weekday_precip = dataset.groupby('weekday_name')['prec'].mean().reset_index()
    # Sort by precipitation in descending order and get top 5
    top_weekdays = weekday_precip.sort_values('prec', ascending=False).head(5)
    # Extract the weekday names as a list
    result = top_weekdays['weekday_name'].tolist()
    
    return result",list of (string),"['Friday', 'Sunday', 'Thursday', 'Saturday', 'Wednesday']","['Friday', 'Sunday', 'Saturday', 'Thursday', 'Wednesday']"
"List the 4 seasons ranked by average solar radiation, from highest to lowest.",Return the names of the 4 seasons ordered by their mean solar radiation in descending order.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    season_sol_mean = dataset.groupby('season')['sol'].mean().sort_values(ascending=False)
    ordered_seasons = season_sol_mean.index.tolist()
    
    return ordered_seasons",list of string,"['Summer', 'Spring', 'Autumn', 'Winter']","['Summer', 'Spring', 'Autumn', 'Winter']"
Which 2 months recorded the lowest average minimum temperatures?,What are the names of the 2 months with the smallest average tmin values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_tmin_by_month = dataset.groupby('month_name')['tmin'].mean()
    smallest_months = avg_tmin_by_month.nsmallest(2).index.tolist()
    return smallest_months",list of (string),"['January', 'December']","['January', 'December']"
List the top 5 recorded maximum temperatures.,What are the 5 highest values in the tmax column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_tmax = dataset.nlargest(5, 'tmax')['tmax'].tolist()
    return top_5_tmax
",list of float64,"[40.7, 40.6, 40.0, 40.0, 40.0]","[40.7, 40.6, 40.0, 40.0, 40.0]"
What are the 4 lowest wind speeds ever recorded?,Retrieve the four smallest values from the velmedia column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_velmedia = dataset.nsmallest(4, 'velmedia')['velmedia'].tolist()
    return smallest_velmedia",list of (float64),"[0.0, 0.0, 0.0, 0.0]","[0.0, 0.0, 0.0, 0.0]"
Rank the highest 3 solar radiation measurements.,What are the top 3 values in the sol column sorted in descending order?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_sol_values = dataset[""sol""].sort_values(ascending=False).head(3).tolist()
    return top_sol_values
",list of (float64),"[14.9, 14.8, 14.7]","[14.9, 14.8, 14.7]"
Which 6 days of the year (numbered from 1 to 365/366) had the highest average temperatures?,"What are the 6 days of the year (numbered from 1 to 365/366) with the highest average temperatures, based on the tmed column?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_days = dataset.nlargest(6, 'tmed')['dayofyear'].tolist()
    return top_days
",list of (int64),"[215, 168, 223, 179, 232, 201]","[209, 210, 208, 207, 211, 205]"
"Are there records where the RETRINOIN_xRZI exceeds 10,000?","Does the dataset contain any entries where the value of RETRINOIN_xRZI is greater than 10,000?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_retrinoin = (dataset[""RETRINOIN_xRZI""] > 10000).any()
    return has_high_retrinoin",bool,True,True
Are there any female respondents who belong to the ESTE NUTS1 region?,Are there any records where the SEXO is female and the NUTS1 is ESTE?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_records = dataset[(dataset[""SEXO""] == ""female"") & (dataset[""NUTS1""] == ""ESTE"")]
    answer = len(filtered_records) > 0
    return answer
",bool,False,True
Do we have respondents who fall under both PRIVADO control and NACIONAL market?,Are there any respondents with CONTROL set to PRIVADO and MERCADO set to NACIONAL?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[(dataset[""CONTROL""] == ""PRIVADO"") & (dataset[""MERCADO""] == ""NACIONAL"")]
    answer = len(filtered_data) > 0
    return answer
",bool,True,True
"Are there records with RETRINOIN_WwQk less than 5,000?",Does the dataset contain any entries where the value of RETRINOIN_WwQk is below 5000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_low_retrinoin = (dataset[""RETRINOIN_WwQk""] < 5000).any()
    return has_low_retrinoin
",bool,True,True
How many unique respondents belong to the ESTE NUTS1 region?,What is the count of distinct respondents in the ESTE NUTS1 region?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_respondents = dataset[dataset['NUTS1'] == 'ESTE']['RESPONSA'].nunique()
    return distinct_respondents
",int64,2,58852
"On average, what's the RETRINOIN value for male respondents?",What is the mean RETRINOIN value for respondents where SEXO is male?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    male_respondents = dataset[dataset[""SEXO""] == ""male""]
    mean_retrinoin = male_respondents[""RETRINOIN""].mean()
    
    return mean_retrinoin
",float64,,29370.243704000000
What's the highest value for RETRINOIN_ac1q in the dataset?,What is the maximum value of the RETRINOIN_ac1q column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_value = dataset[""RETRINOIN_ac1q""].max()
    return max_value
",float64,199496.34,199496.34
How many unique clusters are present in the 'umap_cluster' column?,What is the count of distinct values in the umap_cluster column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_count = dataset[""umap_cluster""].nunique()
    return distinct_count
",int64,73,73
Which 'ANOS2' category has the most number of respondents?,What is the value of the ANOS2 category that appears most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_anos2 = dataset[""ANOS2""].mode()[0]
    return most_frequent_anos2
",string,DE 40 A 49,DE 40 A 49
In which 'NUTS1' region do we find the highest average RETRINOIN?,What is the NUTS1 region with the maximum average RETRINOIN value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_retrinoin_by_nuts1 = dataset.groupby('NUTS1')['RETRINOIN'].mean()
    max_avg_nuts1 = avg_retrinoin_by_nuts1.idxmax()
    
    return max_avg_nuts1
",string,COMUNIDAD DE MADRID,COMUNIDAD DE MADRID
Which 'MERCADO' category is the least common in the dataset?,What is the category value in the 'MERCADO' column that appears the fewest times in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mercado_counts = dataset['MERCADO'].value_counts()
    min_count_category = mercado_counts.idxmin()
    return min_count_category
",string,UNIÓN EUROPEA,UNIÓN EUROPEA
Which 'umap_cluster' is the most dominant in the dataset?,What is the most frequently occurring value in the 'umap_cluster' column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent = dataset['umap_cluster'].mode()[0]
    return most_frequent
",category,Cluster 1,Cluster 1
Which are the 2 least common age categories in the dataset?,What are the two age categories (ANOS2) with the lowest frequency in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    age_counts = dataset['ANOS2'].value_counts()
    lowest_two_ages = age_counts.nsmallest(2).index.tolist()
    return lowest_two_ages
",list of (category),"['MENOS 19 AÑOS', 'MÁS DE 59']","['MENOS 19 AÑOS', 'MÁS DE 59']"
Which are the 3 least common 'ANOS2' categories in the dataset?,What are the 3 categories in 'ANOS2' column that appear the least frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    anos2_counts = dataset['ANOS2'].value_counts()
    least_frequent = anos2_counts.nsmallest(3).index.tolist()
    return least_frequent",list of string,"['MENOS 19 AÑOS', 'MÁS DE 59', 'DE 20 A 29']","['MENOS 19 AÑOS', 'MÁS DE 59', 'DE 20 A 29']"
List the top 5 'NUTS1' regions by frequency.,What are the 5 most frequently occurring 'NUTS1' regions?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_nuts1 = dataset['NUTS1'].value_counts().head(5).index.tolist()
    return top_nuts1",list of string,"['ESTE', 'COMUNIDAD DE MADRID', 'NORESTE', 'SUR', 'CENTRO']","['ESTE', 'COMUNIDAD DE MADRID', 'NORESTE', 'SUR', 'CENTRO']"
Which 2 'umap_cluster' categories are the least represented?,What are the two least frequent categories in the 'umap_cluster' column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    cluster_counts = dataset['umap_cluster'].value_counts()
    least_frequent = cluster_counts.nsmallest(2).index.tolist()
    return least_frequent
",list of (category),"['Cluster 71', 'Cluster 73']","['Cluster 71', 'Cluster 73']"
List the top 5 recorded RETRINOIN values.,What are the 5 highest values in the RETRINOIN column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_values = dataset[""RETRINOIN""].nlargest(5).tolist()
    return top_5_values
",list of float64,"[4225998.36, 4153877.05, 4021902.63, 3903390.45, 2192967.2]","[4225998.36, 4153877.05, 4021902.63, 3903390.45, 2192967.2]"
What are the 4 lowest x values in the dataset?,Retrieve the four smallest values from the x column in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_values = dataset[""x""].nsmallest(4).tolist()
    return smallest_values
",list of (float64),"[-23714.217, -23706.5, -23698.271, -23697.166]","[-23714.217, -23706.5, -23698.271, -23697.166]"
Rank the highest 3 y values in the dataset.,What are the top 3 values in the y column sorted in descending order?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_y = dataset['y'].sort_values(ascending=False).head(3).tolist()
    return top_3_y
",list of (float64),"[28352.02, 28313.926, 28283.78]","[28352.02, 28313.926, 28283.78]"
What are the largest 2 y values in the dataset?.,Retrieve the top 2 highest values from the y column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_2_y = dataset.nlargest(2, 'y')['y'].tolist()
    return top_2_y
",list of (float64),"[28352.02, 28313.926]","[28352.02, 28313.926]"
Is the most visited URL related to 'no code data science'?,Does the URL with the highest ranking have a keyword related to 'no code data science'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    highest_rank_url = dataset.loc[dataset[""Ranking""] == dataset[""Ranking""].min()]
    keyword = highest_rank_url[""Keyword""].values[0]
    is_related = 'no code data science' in keyword.lower()
    
    return is_related",bool,True,True
Does any URL have a competition level of 'Low'?,Is there at least one URL with Competition value equal to 'Low'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_low_competition = (dataset[""Competition""] == 'Low').any()
    return has_low_competition",bool,True,True
Are there any URLs with an average monthly searches above 1000?,Does any URL in the dataset have an average monthly searches value greater than 1000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_searches = (dataset[""Avg. monthly searches""] > 1000).any()
    return has_high_searches",bool,False,False
Is the URL with the lowest ranking also the one with the highest monthly searches?,Does the URL with the minimum ranking value also have the maximum average monthly searches value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_ranking_url = dataset.loc[dataset[""Ranking""] == dataset[""Ranking""].min()]
    max_searches_url = dataset.loc[dataset[""Avg. monthly searches""] == dataset[""Avg. monthly searches""].max()]
    result = min_ranking_url[""URLs""].values[0] == max_searches_url[""URLs""].values[0]
    
    return result",bool,True,True
How many unique URLs are in the dataset?,What is the count of distinct URLs present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_urls_count = dataset[""URLs""].nunique()
    return distinct_urls_count",int64,28,28
What is the lowest ranking value in the dataset?,What is the minimum value in the Ranking column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_ranking = dataset[""Ranking""].min()
    return min_ranking
",uint8,1,11
What is the minimum average monthly searches in the dataset?,What is the smallest value in the Avg. monthly searches column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_searches = dataset[""Avg. monthly searches""].min()
    return min_searches",uint8,50,50
How many unique keywords are present in the dataset?,What is the count of distinct values in the Keyword column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_keywords_count = dataset[""Keyword""].nunique()
    return distinct_keywords_count",int64,6,6
What is the competition level of the highest-ranked URL?,What is the competition category value for the URL with the smallest ranking number?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_ranking_url = dataset.loc[dataset[""Ranking""] == dataset[""Ranking""].min()]
    competition_category = min_ranking_url[""Competition""].iloc[0]
    
    return competition_category",string,Medium,Medium
What keyword has the highest average monthly searches?,Which keyword has the maximum value in the Avg. monthly searches column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_searches_row = dataset.loc[dataset[""Avg. monthly searches""] == dataset[""Avg. monthly searches""].max()]
    keyword = max_searches_row[""Keyword""].values[0]
    
    return keyword",string,no code data science,no code data science
What is the competition level for the URL with the highest ranking?,What is the competition category value for the URL that has the highest ranking value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    highest_ranking_url = dataset.loc[dataset[""Ranking""] == dataset[""Ranking""].min()]
    competition_category = highest_ranking_url[""Competition""].iloc[0]
    
    return competition_category",string,Medium,Low
What keyword is associated with the URL with the lowest ranking?,What is the keyword corresponding to the URL that has the minimum ranking value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_ranking_row = dataset.loc[dataset[""Ranking""] == dataset[""Ranking""].min()]
    keyword = min_ranking_row[""Keyword""].values[0]
    
    return keyword",string,no code data science,no code data science
What are the top 3 URLs with the highest average monthly searches?,Retrieve the URLs of the top 3 entries with the highest average monthly searches.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3 = dataset.nlargest(3, 'Avg. monthly searches')
    urls = top_3['URLs'].tolist()
    return urls",list of string,"['https://www.obviously.ai/', 'https://venturebeat.com/2021/10/12/no-code-ai-analytics-may-soon-automate-data-science-jobs/', 'https://hbr.org/2021/11/how-no-code-platforms-can-bring-ai-to-small-and-midsize-businesses']","['https://www.obviously.ai/', 'https://venturebeat.com/2021/10/12/no-code-ai-startup-obviously-ai-raises-4-7m/', 'https://hbr.org/2021/11/how-no-code-platforms-could-disrupt-the-it-industry']"
List the bottom 2 competition levels of URLs with ranking better than 5.,What are the two least competitive levels for URLs that have a ranking less than 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[dataset[""Ranking""] < 5]
    competition_counts = filtered_data[""Competition""].value_counts()
    least_competitive = competition_counts.nsmallest(2).index.tolist()
    
    return least_competitive",list of string,"['Medium', 'Unknown']","['Medium', 'Unknown']"
Which are the 4 keywords associated with the URLs of lowest rankings?,What are the 4 keywords linked to the URLs that have the smallest ranking values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_rankings = dataset.nsmallest(4, 'Ranking')
    keywords = smallest_rankings['Keyword'].tolist()
    return keywords",list of string,"['no code data science', 'no code data analytics', 'no code analytics', 'no code data science tools']","['no code data science', 'no code data analytics', 'no code data science', 'no code data science']"
Enumerate the 3 URLs with the highest ranking.,List the URLs corresponding to the top 3 highest ranking entries.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3 = dataset.nsmallest(3, 'Ranking')
    urls = top_3['URLs'].tolist()
    return urls",list of (string),"['https://www.obviously.ai/', 'https://www.obviously.ai/', 'https://towardsdatascience.com/towards-no-code-analytics-making-everyone-a-data-scientist-f7693bd0abfd']","['https://www.obviously.ai/', 'https://www.obviously.ai/', 'https://venturebeat.com/2021/10/12/no-code-ai-startup-obviously-ai-raises-4-7m/']"
What are the lowest 4 rankings associated with the keyword 'no code data science'?,Retrieve the four smallest ranking values where the keyword is 'no code data science'.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[dataset['Keyword'] == 'no code data science']
    sorted_data = filtered_data.sort_values('Ranking')
    smallest_rankings = sorted_data['Ranking'].head(4).tolist()
    
    return smallest_rankings",list of (uint8),"[1, 2, 3, 4]","[10, 9, 8, 7]"
List the bottom 3 average monthly searches for URLs with medium competition.,What are the three lowest values in the Avg. monthly searches column for URLs that have medium competition?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    medium_competition = dataset[dataset[""Competition""] == ""medium""]
    sorted_data = medium_competition.sort_values(by=""Avg. monthly searches"")
    lowest_values = sorted_data[""Avg. monthly searches""].head(3).tolist()
    
    return lowest_values",list of (uint8),[],"[50, 50, 50]"
Provide the lowest 5 rankings of URLs with low competition (if any).,Return the URLs with the 5 smallest ranking values where the competition is low.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    low_competition_data = dataset[dataset[""Competition""] == ""low""]
    sorted_data = low_competition_data.sort_values(by=""Ranking"").head(5)
    urls = sorted_data[""URLs""].tolist()
    
    return urls",list of (string),[],"[11, 10, 10, 9, 9]"
Specify the bottom 2 average monthly searches for URLs with the highest rankings.,What are the two lowest average monthly searches for URLs that have the highest rankings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    highest_rank = dataset['Ranking'].min()
    highest_rank_urls = dataset[dataset['Ranking'] == highest_rank]
    sorted_searches = highest_rank_urls['Avg. monthly searches'].sort_values().head(2)
    lowest_searches = sorted_searches.tolist()
    
    return lowest_searches
",list of (uint8),"[50, 50]","[50, 50]"
Is there any wine with a quality rating of 10?,Does the dataset contain any wine entries where the quality rating is equal to 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_quality_10 = (dataset[""quality""] == 10).any()
    return has_quality_10",bool,False,False
Are there any wines with residual sugar above 15g/dm^3?,Does the dataset contain any wine records where the residual sugar value exceeds 15 grams per cubic decimeter?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_sugar = (dataset[""residual sugar""] > 15).any()
    return has_high_sugar",bool,True,True
Is the highest alcohol content wine also the one with the highest quality rating?,Does the wine with the maximum alcohol content also have the highest quality rating?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_alcohol_wine = dataset.loc[dataset[""alcohol""] == dataset[""alcohol""].max()]
    max_quality = dataset[""quality""].max()
    has_highest_quality = max_alcohol_wine[""quality""].iloc[0] == max_quality
    
    return has_highest_quality
",bool,False,False
Does any wine have a pH level below 2.5?,Is there at least one wine in the dataset with a pH value less than 2.5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_low_ph = (dataset[""pH""] < 2.5).any()
    return has_low_ph",bool,False,False
How many unique quality ratings are there in the dataset?,What is the count of distinct values in the quality column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_count = dataset[""quality""].nunique()
    return distinct_count",int64,6,6
What is the maximum fixed acidity level found in the dataset?,What is the highest value in the fixed acidity column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_fixed_acidity = dataset[""fixed acidity""].max()
    return max_fixed_acidity
",float64,15.9,15.9
What is the minimum volatile acidity level in the dataset?,What is the smallest value present in the volatile acidity column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_volatile_acidity = dataset[""volatile acidity""].min()
    return min_volatile_acidity
",float64,0.12,0.12
How many wines have free sulfur dioxide above 50 mg/dm^3?,What is the count of wines where the free sulfur dioxide level exceeds 50 mg/dm^3?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = len(dataset[dataset[""free sulfur dioxide""] > 50])
    return count
",int64,16,16
What is the quality rating of the wine with the highest alcohol content?,What is the quality value of the wine that has the maximum alcohol level?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_alcohol_row = dataset.loc[dataset[""alcohol""] == dataset[""alcohol""].max()]
    quality_value = max_alcohol_row[""quality""].iloc[0]
    
    return quality_value
",uint8,5,5
What is the quality rating of the wine with the highest fixed acidity?,What is the quality value of the wine that has the maximum fixed acidity value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_fixed_acidity = dataset.loc[dataset[""fixed acidity""] == dataset[""fixed acidity""].max()]
    quality_value = max_fixed_acidity[""quality""].iloc[0]
    
    return quality_value
",uint8,5,5
What is the quality rating of the wine with the lowest volatile acidity?,What is the quality value of the wine that has the minimum volatile acidity?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_volatile_acidity = dataset.loc[dataset[""volatile acidity""] == dataset[""volatile acidity""].min()]
    quality_value = min_volatile_acidity[""quality""].iloc[0]
    
    return quality_value
",uint8,7,7
What is the quality rating of the wine with the highest pH level?,What is the quality score of the wine that has the maximum pH value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_ph_wine = dataset.loc[dataset[""pH""] == dataset[""pH""].max()]
    quality_score = max_ph_wine[""quality""].iloc[0]
    
    return quality_score
",uint8,6,6
List the quality ratings of the top 3 wines with the highest alcohol content.,What are the quality ratings of the 3 wines that have the highest alcohol content values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_alcohol_wines = dataset.nlargest(3, 'alcohol')
    quality_ratings = top_alcohol_wines['quality'].tolist()
    
    return quality_ratings
",list of (uint8),"[5, 6, 6]","['5', '6', '6']"
Enumerate the quality ratings of the bottom 2 wines with the lowest residual sugar.,What are the quality ratings of the two wines that have the least residual sugar?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_data = dataset.sort_values(by='residual sugar')
    top_two = sorted_data.head(2)
    quality_ratings = top_two['quality'].tolist()
    
    return quality_ratings
",list of (uint8),"[6, 6]","['6', '6']"
Which are the quality ratings of the top 5 wines with the highest density?,What are the quality ratings of the 5 wines that have the highest density values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_density_wines = dataset.nlargest(5, 'density')
    quality_ratings = top_density_wines['quality'].tolist()
    
    return quality_ratings",list of (uint8),"[6, 6, 7, 5, 5]","['6', '6', '7', '5', '5']"
List the quality ratings of the bottom 4 wines with the lowest pH level.,What are the quality ratings of the 4 wines that have the smallest pH values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_by_ph = dataset.sort_values(by='pH', ascending=True)
    smallest_ph_wines = sorted_by_ph.head(4)
    quality_ratings = smallest_ph_wines['quality'].tolist()
    
    return quality_ratings
",list of (uint8),"[4, 6, 6, 8]","['4', '6', '6', '8']"
What are the alcohol contents of the top 4 wines with the highest quality ratings?,Retrieve the alcohol values for the 4 wines with the highest quality ratings.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_quality_wines = dataset.nlargest(4, 'quality')
    alcohol_values = top_quality_wines['alcohol'].tolist()
    
    return alcohol_values",list of float64,"[12.8, 12.6, 12.9, 9.8]","['12.8', '12.6', '12.9', '9.8']"
List the volatile acidity levels of the bottom 3 wines with the lowest quality ratings.,What are the volatile acidity values for the three wines that have the smallest quality ratings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Sort the dataset by quality in ascending order and get the first 3 rows
    lowest_quality_wines = dataset.sort_values('quality').head(3)
    # Extract the volatile acidity values as a list
    volatile_acidity_values = lowest_quality_wines['volatile acidity'].tolist()
    
    return volatile_acidity_values
",list of float64,"[0.875, 0.44, 1.02]","['0.58', '0.61', '1.185']"
Enumerate the fixed acidity levels of the top 5 wines with the highest quality ratings.,What are the fixed acidity values for the 5 wines with the highest quality scores?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_quality_wines = dataset.nlargest(5, 'quality')
    fixed_acidity_values = top_quality_wines['fixed acidity'].tolist()
    
    return fixed_acidity_values",list of (float64),"[7.9, 10.3, 5.6, 12.6, 11.3]","['7.9', '10.3', '5.6', '12.6', '11.3']"
Provide the residual sugar levels of the bottom 2 wines with the lowest quality ratings.,What are the residual sugar values for the two wines that have the smallest quality ratings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_quality = dataset[""quality""].min()
    min_quality_wines = dataset[dataset[""quality""] == min_quality]
    residual_sugar_values = min_quality_wines[""residual sugar""].tolist()
    
    return residual_sugar_values
",list of float64,"[2.2, 2.1, 4.25, 1.5, 3.4, 2.1, 1.2, 2.1, 5.7, 1.8]","['2.2', '2.1']"
Is there any purchase with a total cost above 1000?,Are there any transactions where the total cost exceeds 1000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_transactions_above_1000 = (dataset[""Total""] > 1000).any()
    return has_transactions_above_1000
",bool,True,True
Are there any customers who made a purchase using cash?,Are there any records in the dataset where the payment method is cash?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_cash_payment = (dataset[""Payment""] == ""Cash"").any()
    return has_cash_payment",bool,True,True
Is the customer with the highest total purchase cost a 'Member'?,Does the customer who made the purchase with the highest total amount have customer type as 'Member'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_total_purchase = dataset.loc[dataset[""Total""] == dataset[""Total""].max()]
    is_member = max_total_purchase[""Customer type""].iloc[0] == 'Member'
    
    return is_member
",bool,True,True
Does any customer with a rating strictly above 9 use 'Ewallet' as their payment method?,Is there at least one customer who has a rating greater than 9 and uses 'Ewallet' as their payment method?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_customers = dataset[(dataset['Rating'] > 9) & (dataset['Payment'] == 'Ewallet')]
    answer = len(filtered_customers) > 0
    return answer
",bool,True,True
How many unique branches are there in the dataset?,What is the count of distinct values in the Branch column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_branches = dataset[""Branch""].nunique()
    return distinct_branches",int64,3,3
What is the maximum quantity of products bought in a single purchase?,What is the highest value in the Quantity column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_quantity = dataset[""Quantity""].max()
    return max_quantity
",int64,10,10
What is the minimum total cost of a purchase in the dataset?,What is the smallest value in the Total column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_total = dataset[""Total""].min()
    return min_total
",float64,10.6785,10.6785
How many purchases were made in Yangon city?,What is the count of purchases where the city is Yangon?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    yangon_purchases = dataset[dataset[""City""] == ""Yangon""]
    count = len(yangon_purchases)
    
    return count",int64,340,340
What is the payment method used for the purchase with the highest total cost?,Which payment method corresponds to the transaction with the maximum total value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_total_transaction = dataset.loc[dataset[""Total""] == dataset[""Total""].max()]
    payment_method = max_total_transaction[""Payment""].values[0]
    
    return payment_method
",string,Credit card,Credit card
What is the product line of the purchase with the highest total cost?,Which product line corresponds to the purchase that has the maximum total value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_total_purchase = dataset.loc[dataset[""Total""] == dataset[""Total""].max()]
    product_line = max_total_purchase[""Product line""].values[0]
    
    return product_line
",string,Fashion accessories,Fashion accessories
What is the customer type of the purchase with the lowest total cost?,What is the customer type for the transaction that has the minimum total amount?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_total_transaction = dataset.loc[dataset[""Total""] == dataset[""Total""].min()]
    customer_type = min_total_transaction[""Customer type""].values[0]
    
    return customer_type",category,Member,Member
What is the gender of the customer with the highest total purchase cost?,What is the gender value of the customer who has the maximum total purchase amount?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_total_purchase = dataset.loc[dataset[""Total""] == dataset[""Total""].max()]
    gender = max_total_purchase[""Gender""].iloc[0]
    
    return gender
",string,Female,Female
List the payment methods of the top 3 purchases with the highest total cost.,What are the payment methods used in the three purchases with the highest total values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_purchases = dataset.nlargest(3, 'Total')
    payment_methods = top_purchases['Payment'].tolist()
    return payment_methods
",list of string,"['Credit card', 'Credit card', 'Ewallet']","['Credit card', 'Credit card', 'Ewallet']"
Enumerate the product lines of the bottom 2 purchases with the lowest total cost.,What are the product lines of the two purchases with the smallest total cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_totals = dataset.nsmallest(2, ""Total"")
    product_lines = smallest_totals[""Product line""].tolist()
    
    return product_lines",list of (string),"['Sports and travel', 'Fashion accessories']","['Sports and travel', 'Fashion accessories']"
Which are the customer types of the top 5 purchases with the highest total cost?,What are the customer types for the 5 transactions with the largest total values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_transactions = dataset.nlargest(5, 'Total')
    customer_types = top_5_transactions['Customer type'].tolist()
    
    return customer_types",list of (string),"['Member', 'Normal', 'Member', 'Normal', 'Normal']","['Member', 'Normal', 'Member', 'Normal', 'Normal']"
List the genders of the bottom 4 purchases with the lowest total cost.,What are the genders of the customers who made the 4 purchases with the smallest total cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_totals = dataset.nsmallest(4, ""Total"")
    genders = smallest_totals[""Gender""].tolist()
    return genders",list of string,"['Male', 'Female', 'Female', 'Male']","['Male', 'Female', 'Female', 'Male']"
What are the quantities of products bought in the top 4 purchases with the highest total cost?,Retrieve the quantities of the top 4 purchases with the highest total cost.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_purchases = dataset.nlargest(4, 'Total')
    quantities = top_purchases['Quantity'].tolist()
    return quantities
",list of (uint8),"[10, 10, 10, 10]","[10, 10, 10, 10]"
List the unit prices of the bottom 3 purchases with the lowest total cost.,What are the unit prices of the three purchases with the smallest total cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_data = dataset.sort_values(by='Total', ascending=True)
    smallest_totals = sorted_data.head(3)
    unit_prices = smallest_totals['Unit price'].tolist()
    
    return unit_prices
",list of float64,"[10.17, 12.09, 12.54]","[10.17, 12.09, 12.54]"
Enumerate the ratings of the top 5 purchases with the highest total cost.,What are the ratings of the 5 purchases with the largest total cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_purchases = dataset.nlargest(5, 'Total')
    ratings = top_purchases['Rating'].tolist()
    return ratings",list of float64,"[6.6, 8.7, 4.5, 8.0, 4.4]","[6.6, 8.7, 4.5, 8.0, 4.4]"
Provide the gross incomes of the bottom 2 purchases with the lowest total cost.,What are the gross incomes of the two purchases with the smallest total cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_data = dataset.sort_values(by=""Total"", ascending=True)
    smallest_totals = sorted_data.head(2)
    gross_incomes = smallest_totals[""gross income""].tolist()
    
    return gross_incomes
",list of float64,"[0.5085, 0.6045]","[0.5085, 0.6045]"
Are there any individuals in the dataset who are above 60 years of age?,Does the dataset contain any records where the age is greater than 60?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_records = (dataset[""Age""] > 60).any()
    return has_records",bool,True,False
Does anyone have a Diabetes Pedigree Function score above 2.5?,Is there at least one individual with a Diabetes Pedigree Function value greater than 2.5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_dpf = (dataset[""DiabetesPedigreeFunction""] > 2.5).any()
    return has_high_dpf",bool,False,True
Does the person with the highest glucose level also have diabetes?,,,,ERROR,True
Is there anyone who has zero pregnancies and is diabetic?,Are there any individuals with zero pregnancies and a positive diabetes outcome?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[(dataset[""Pregnancies""] == 0) & (dataset[""Outcome""] == 1)]
    answer = len(filtered_data) > 0
    return answer",bool,True,True
What is the maximum number of pregnancies recorded in the dataset?,What is the highest value in the Pregnancies column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_pregnancies = dataset[""Pregnancies""].max()
    return max_pregnancies",uint8,17,17
What is the minimum blood pressure level recorded in the dataset?,What is the smallest value in the BloodPressure column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_blood_pressure = dataset[""BloodPressure""].min()
    return min_blood_pressure
",uint8,0,0
What is the average BMI recorded in the dataset?,Calculate the mean value of the BMI column in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_bmi = dataset[""BMI""].mean()
    return mean_bmi",float64,31.992578000000000,31.992578000000000
How many individuals have an insulin level above 150?,What is the count of people with insulin values greater than 150?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = len(dataset[dataset[""Insulin""] > 150])
    return count",int64,153,187
What is the diabetes outcome for the person with the highest BMI?,What is the outcome value for diabetes corresponding to the individual who has the maximum BMI value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_bmi_individual = dataset.loc[dataset[""BMI""] == dataset[""BMI""].max()]
    outcome = max_bmi_individual[""Outcome""].iloc[0]
    
    return outcome
",uint8,1,1
What is the diabetes outcome for the person with the lowest blood pressure?,What is the outcome value for the individual who has the minimum blood pressure reading?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_bp_individual = dataset.loc[dataset[""BloodPressure""] == dataset[""BloodPressure""].min()]
    outcome = min_bp_individual[""Outcome""].iloc[0]
    
    return outcome",uint8,0,0
What is the diabetes outcome for the person with the highest insulin level?,What is the outcome value for the individual who has the maximum insulin level in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_insulin_individual = dataset.loc[dataset[""Insulin""] == dataset[""Insulin""].max()]
    outcome_value = max_insulin_individual[""Outcome""].iloc[0]
    
    return outcome_value",uint8,1,1
What is the diabetes outcome for the person with the lowest glucose level?,What is the outcome value for the record with the minimum glucose level?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_glucose_record = dataset.loc[dataset[""Glucose""] == dataset[""Glucose""].min()]
    outcome_value = min_glucose_record[""Outcome""].iloc[0]
    
    return outcome_value",uint8,0,0
List the diabetes outcomes of the top 3 individuals with the highest number of pregnancies.,What are the diabetes outcomes for the 3 individuals who have the highest pregnancies count?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_pregnancies = dataset.nlargest(3, 'Pregnancies')
    outcomes = top_pregnancies['Outcome'].tolist()
    return outcomes",list of (uint8),"[1, 1, 1]","[1, 1, 1]"
List the diabetes outcomes of the bottom 2 individuals with the lowest BMI.,What are the diabetes outcomes for the two individuals who have the smallest BMI values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_data = dataset.sort_values(by='BMI')
    smallest_bmi_outcomes = sorted_data.head(2)['Outcome'].tolist()
    return smallest_bmi_outcomes",list of uint8,"[0, 1]","[0, 0]"
List the diabetes outcomes of the top 5 individuals with the highest insulin levels.,What are the diabetes outcomes for the 5 individuals who have the highest insulin values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_insulin = dataset.nlargest(5, 'Insulin')
    outcomes = top_insulin['Outcome'].tolist()
    return outcomes",list of (uint8),"[1, 0, 0, 1, 1]","[1, 1, 1, 1, 1]"
List the diabetes outcomes of the bottom 4 individuals with the lowest blood pressure.,What are the diabetes outcomes for the four individuals who have the smallest blood pressure values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_data = dataset.sort_values(by=""BloodPressure"")
    smallest_bp_outcomes = sorted_data[""Outcome""].head(4).tolist()
    return smallest_bp_outcomes",list of (uint8),"[0, 0, 0, 0]","[0, 0, 0, 0]"
What are the ages of the top 4 individuals with the highest number of pregnancies?,Retrieve the ages of the 4 individuals who have the highest values in the pregnancies column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_pregnancies = dataset.nlargest(4, 'Pregnancies')
    ages = top_pregnancies['Age'].tolist()
    return ages",list of (uint8),"[47, 43, 46, 38]","[51, 67, 67, 67]"
List the BMI of the bottom 3 individuals with the lowest glucose levels.,What are the BMI values of the 3 individuals who have the smallest glucose levels?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_data = dataset.sort_values(by=""Glucose"")
    smallest_glucose = sorted_data.head(3)
    bmi_values = smallest_glucose[""BMI""].tolist()
    
    return bmi_values",list of float64,"[24.7, 39.0, 41.0]","[32.0, 32.0, 32.0]"
Enumerate the blood pressure levels of the top 5 individuals with the highest Diabetes Pedigree Function scores.,What are the blood pressure values of the 5 individuals with the highest Diabetes Pedigree Function scores?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5 = dataset.nlargest(5, 'DiabetesPedigreeFunction')
    blood_pressure_values = top_5['BloodPressure'].tolist()
    return blood_pressure_values",list of (uint8),"[78, 70, 40, 82, 66]","[0, 0, 0, 0, 0]"
Provide the glucose levels of the 2 individuals with the highest insulin levels.,What are the glucose values for the two people who have the highest insulin values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_two_insulin = dataset.nlargest(2, 'Insulin')
    glucose_values = top_two_insulin['Glucose'].tolist()
    return glucose_values
",list of (uint8),"[189, 197]","[189, 197]"
Are there any articles that have the material type 'Op-Ed'?,Does the dataset contain any articles where the material type is 'Op-Ed'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_op_ed = 'Op-Ed' in dataset['material_type'].values
    return has_op_ed",bool,True,True
Does the article with the longest headline contain the keyword 'United States Politics and Government'?,Is the keyword 'United States Politics and Government' present in the article that has the maximum length headline?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_length_headline = dataset.loc[dataset[""headline""].str.len().idxmax()]
    keywords = max_length_headline[""keywords""]
    is_present = 'United States Politics and Government' in keywords
    
    return is_present",bool,False,False
Is there any article published on '2021-01-05'?,Does the dataset contain any articles with the date '2021-01-05'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    target_date = pd.to_datetime('2021-01-05').tz_localize('UTC')
    has_articles = target_date in dataset['date'].values
    
    return has_articles
",bool,False,True
Does any article contain more than 10 keywords?,Is there at least one article where the keywords field contains more than 10 entries?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Split keywords by commas and count the number of entries for each article
    keyword_counts = dataset['keywords'].str.split(',').apply(lambda x: len(x) if isinstance(x, list) else 0)
    # Check if any article has more than 10 keywords
    has_more_than_10 = any(keyword_counts > 10)
    
    return has_more_than_10
",bool,False,True
How many unique material types are there in the dataset?,What is the count of distinct material types present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_material_types = dataset[""material_type""].nunique()
    return distinct_material_types",int64,16,16
What is the longest length of a headline in the dataset?,What is the maximum character count among all headlines in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_char_count = dataset[""headline""].str.len().max()
    return max_char_count",int64,145.0,147
How many articles were published on '2021-01-02'?,What is the count of articles where the date is equal to '2021-01-02'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    date_filter = dataset['date'].dt.date == pd.to_datetime('2021-01-02').date()
    count = dataset[date_filter].shape[0]
    return count",int64,56,52
What is the highest number of keywords associated with a single article?,,,,ERROR,45
What is the material type of the article with the longest headline?,What is the material type of the article that has the maximum length headline?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    dataset['headline_length'] = dataset['headline'].str.len()
    max_headline_article = dataset.loc[dataset['headline_length'] == dataset['headline_length'].max()]
    material_type = max_headline_article['material_type'].iloc[0]
    
    return material_type",string,Interactive Feature,News
What is the material type of the article with the shortest headline that is not news or video?,"For the article with the minimum headline length, excluding those with material type news or video, what is its material type?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[~dataset[""material_type""].isin([""news"", ""video""])]
    min_headline_article = filtered_data.loc[filtered_data[""headline_length""] == filtered_data[""headline_length""].min()]
    material_type = min_headline_article[""material_type""].iloc[0]
    
    return material_type",string,News,Slideshow
What is the material type of the non-editorial article with the most number of keywords?,,,,ERROR,News
What is the most common material amongst articles with the least number of keywords?,,,,ERROR,News
List the material types of the top 3 articles with the longest headlines.,What are the material types of the 3 articles that have the highest headline length values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_articles = dataset.nlargest(3, 'headline_length')
    material_types = top_articles['material_type'].tolist()
    return material_types",list of string,"['Interactive Feature', 'News', 'News']","['News', 'News', 'News']"
List the material types of the bottom 2 articles with the shortest headlines that are not videos or slides.,What are the material types of the two articles with the smallest headline lengths that do not have material type as video or slides?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[~dataset[""material_type""].isin([""video"", ""slides""])]
    sorted_data = filtered_data.sort_values(""headline_length"").head(2)
    material_types = sorted_data[""material_type""].tolist()
    
    return material_types",list of string,"['News', 'News']","['News', 'News']"
List the material types of the top 5 articles with the most number of keywords.,,,,ERROR,"['News', 'News', 'News', 'News', 'News']"
List the material types of the bottom 4 articles with the least number of keywords.,What are the material types of the 4 articles that have the smallest number of keywords?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    dataset['keyword_count'] = dataset['keywords'].str.split(',').apply(lambda x: len(x) if isinstance(x, list) else 0)
    smallest_keyword_articles = dataset.nsmallest(4, 'keyword_count')
    material_types = smallest_keyword_articles['material_type'].tolist()
    
    return material_types",list of string,"['News', 'Correction', 'News', 'News']","['News', 'News', 'News', 'News']"
What are the lengths of the headlines of the top 4 articles with the most number of keywords?,Retrieve the headline lengths of the 4 articles with the highest keyword counts.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_articles = dataset.nlargest(4, 'keyword_count')
    headline_lengths = top_articles['headline_length'].tolist()
    return headline_lengths
",list of (float64),"[54.0, 25.0, 70.0, 54.0]","[86, 85, 84, 84]"
List the number of keywords in the bottom 3 articles with the shortest headlines.,Retrieve the keyword_count values for the 3 articles with the smallest headline_length values.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_data = dataset.sort_values(by=""headline_length"").head(3)
    keyword_counts = sorted_data[""keyword_count""].tolist()
    return keyword_counts
",list of int64,"[0, 0, 0]","[1, 1, 1]"
Enumerate the lengths of the headlines of the top 5 articles with the longest headlines.,What are the headline lengths of the 5 articles with the longest headlines?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_articles = dataset.sort_values(""headline_length"", ascending=False)
    top_5_articles = sorted_articles.head(5)
    headline_lengths = top_5_articles[""headline_length""].tolist()
    
    return headline_lengths
",list of (int64),"[145.0, 143.0, 143.0, 138.0, 137.0]","[96, 96, 95, 95, 95]"
Provide the number of keywords in the bottom 2 articles with the least number of keywords.,What is the total number of keywords in the two articles that have the smallest keyword count?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Sort the dataset by keyword_count in ascending order
    sorted_dataset = dataset.sort_values(by='keyword_count')
    # Get the two articles with smallest keyword count
    smallest_keyword_articles = sorted_dataset.head(2)
    # Sum the keyword_count of these two articles
    total_keywords = smallest_keyword_articles['keyword_count'].sum()
    
    return total_keywords
",int64,0,"[1, 1]"
Is the 'USA' the most common entry in the 'Geographies' column?,Does the 'Geographies' column contain 'USA' as the most frequently occurring value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_geography = dataset['Geographies'].mode()[0]
    is_usa_most_frequent = (most_frequent_geography == 'USA')
    
    return is_usa_most_frequent
",bool,[False],False
Are there any participants who are unemployed with a bachelor's degree from Africa?,"Are there any individuals in the dataset who are unemployed, have a bachelor's degree, and reside in Africa?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unemployed = dataset[""Select the title most similar to your current role (or most recent title if retired)""] == ""Not employed""
    bachelors = dataset[""What is the highest level of formal education that you have attained or plan to attain within the next 2 years?""] == ""Bachelor’s degree""
    africa = dataset[""In which country do you currently reside?""].str.contains(""Africa"", case=False, na=False)
    
    result = any(unemployed & bachelors & africa)
    
    return result
",bool,False,False
Do all participants recommend Python as the first programming language?,Is the recommended first programming language for aspiring data scientists Python for every participant in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    all_python = (dataset[""What programming language would you recommend an aspiring data scientist to learn first?""] == ""Python"").all()
    return all_python
",bool,False,False
Are there more than 1000 participants who hope to become familiar with AWS in the next 2 years?,Is the count of participants who selected AWS in the 'Which of the following cloud computing platforms do you hope to become more familiar with in the next 2 years?' column greater than 1000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    aws_count = dataset[""Which of the following cloud computing platforms do you hope to become more familiar with in the next 2 years?""].str.contains(""AWS"").sum()
    is_greater_than_1000 = aws_count > 1000
    
    return is_greater_than_1000
",bool,False,False
How many unique job titles are represented in the dataset?,What is the count of distinct job titles present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    title_column = ""Select the title most similar to your current role (or most recent title if retired)""
    distinct_titles_count = dataset[title_column].nunique()
    
    return distinct_titles_count
",int64,14,14
What's the median of the average number of years participants have used machine learning methods?,Calculate the median of the average years participants have used machine learning methods.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    median_years = dataset[""(Average) For how many years have you used machine learning methods?""].median()
    return median_years
",float64,1.5,1.5
How many participants are from the United Kingdom?,What is the count of participants who currently reside in the United Kingdom?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    uk_count = dataset[dataset[""In which country do you currently reside?""] == ""United Kingdom""].shape[0]
    return uk_count
",int64,0,450
What is the most common number of programming languages used by participants on a regular basis?,What is the mode of the count of programming languages used regularly by participants?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Split each string in the 'What programming languages do you use on a regular basis?' column by comma
    # Count the number of languages for each participant
    language_counts = dataset['What programming languages do you use on a regular basis?'].str.split(',').apply(lambda x: len(x) if isinstance(x, list) else 0)
    # Find the mode of these counts
    mode_count = language_counts.mode().iloc[0]
    
    return mode_count
",int64,0,2
What's the most common computing platform used for data science projects?,What is the mode of the computing platform category most frequently used for data science projects?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mode_platform = dataset[""What type of computing platform do you use most often for your data science projects?""].mode()[0]
    return mode_platform
",string,A laptop,A laptop
What's the most common programming language used on a regular basis?,,,,ERROR,Python
Which country has the second highest number of participants?,What is the name of the country with the second largest count of participants in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    country_counts = dataset[""In which country do you currently reside?""].value_counts()
    second_largest_country = country_counts.index[1]
    
    return second_largest_country",string,United States of America,United States of America
Which title is the most common among participants?,What is the most frequently occurring title in the 'Select the title most similar to your current role (or most recent title if retired)' column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_title = dataset[""Select the title most similar to your current role (or most recent title if retired)""].mode()[0]
    return most_frequent_title
",string,Data Scientist,Data Scientist
What are the top 4 geographies represented in the dataset?,Which four geographies appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_geographies = dataset['Geographies'].value_counts().head(4).index.tolist()
    return top_geographies
",list of string,"[array(['India'], dtype=object), array(['USA'], dtype=object), array(['Western Europe'], dtype=object), array(['China - Japan - Korea'], dtype=object)]","['India', 'USA', 'Western Europe', 'China - Japan - Korea']"
Name the top 3 general segments of participants.,,,,ERROR,"['Analysts', 'Data Scientists', 'Academics']"
list the top 4 most common job titles.,What are the four job titles that appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    title_counts = dataset[""Select the title most similar to your current role (or most recent title if retired)""].value_counts()
    top_titles = title_counts.head(4).index.tolist()
    return top_titles",list of string,"['Data Scientist', 'Software Engineer', 'Other', 'Data Analyst']","['Data Scientist', 'Software Engineer', 'Other', 'Data Analyst']"
Identify the top 6 programming languages used regularly.,What are the 6 most frequently used programming languages by professionals in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Split the programming languages string into individual languages and count frequencies
    languages = dataset[""What programming languages do you use on a regular basis?""].str.split(';').explode()
    top_languages = languages.value_counts().head(6).index.tolist()
    
    return top_languages
",list of string,[],"['Python', 'SQL', 'R', 'Javascript', 'C++', 'Java']"
Report the top 4 age ranges of participants by frequency,"What are the 4 most common age ranges among the participants, ordered by frequency?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    age_counts = dataset['What is your age (years)?'].value_counts().head(4)
    most_common_ages = age_counts.index.tolist()
    
    return most_common_ages
",list of (string),"['25-29', '30-34', '22-24', '35-39']","['25-29', '30-34', '22-24', '35-39']"
list the highest average 3 years of machine learning experience.,What are the top 3 highest average years of machine learning experience?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_experience = dataset.nlargest(3, '(Average) For how many years have you used machine learning methods?')['(Average) For how many years have you used machine learning methods?'].tolist()
    return top_3_experience
",list of float64,"[20.0, 20.0, 20.0]","[19.83, 19.74, 19.68]"
Identify the 5 highest yearly compensations.,What are the top 5 values in the column representing yearly compensation in USD?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # The column representing yearly compensation in USD is likely one of these:
    # ""(Average) What is your current yearly compensation (approximate $USD)?_rx_K"" or
    # ""(Average) What is your current yearly compensation (approximate $USD)?""
    # We'll use the first one that exists in the dataset
    
    comp_cols = [
        ""(Average) What is your current yearly compensation (approximate $USD)?_rx_K"",
        ""(Average) What is your current yearly compensation (approximate $USD)?""
    ]
    
    for col in comp_cols:
        if col in dataset.columns:
            top_5 = dataset[col].nlargest(5).tolist()
            return top_5
    
    # If neither column exists (shouldn't happen per schema), return empty list
    return []
",list of (float64),"[174999.5, 174999.5, 174999.5, 174999.5, 174999.5]","[1000000, 1000000, 1000000, 1000000, 1000000]"
Report the 5 most common sizes of the company where participants work.,What are the top 5 most frequently occurring values in the company size column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    company_size_counts = dataset['(Average) What is the size of the company where you are employed?'].value_counts().head(5)
    top_5_sizes = company_size_counts.index.tolist()
    return top_5_sizes
",list of (float64),"[24.0, 10000.0, 5500.0, 150.0, 624.0]","['0-49 employees', '10,000 or more employees', '1000-9,999 employees', '50-249 employees', '250-999 employees']"
Are there more reviews with rating 5 from 'GB' than 'US'?,Is the count of reviews with rating 5 from country code 'GB' greater than the count of reviews with rating 5 from country code 'US'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    gb_count = len(dataset[(dataset['country_code'] == 'GB') & (dataset['rating'] == 5)])
    us_count = len(dataset[(dataset['country_code'] == 'US') & (dataset['rating'] == 5)])
    answer = gb_count > us_count
    return answer",bool,True,True
Is the average rating for 'Wise' in 'GB' above 4?,Does the average rating for the company 'Wise' in the country 'GB' exceed 4?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[(dataset['Company'] == 'Wise') & (dataset['country_code'] == 'GB')]
    avg_rating = filtered_data['rating'].mean()
    answer = avg_rating > 4
    
    return answer",bool,True,True
Do any reviews originate from 'AO'?,Are there any reviews where the country_code is 'AO'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_ao_reviews = (dataset['country_code'] == 'AO').any()
    return has_ao_reviews",bool,True,True
Did any reviews receive a rating of 1?,Are there any reviews with a rating value equal to 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_rating_1 = (dataset[""rating""] == 1).any()
    return has_rating_1",bool,True,True
What's the total number of reviews for 'Wise'?,What is the sum of all reviews where the Company is 'Wise'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    wise_reviews = dataset[dataset[""Company""] == 'Wise']
    sum_reviews = wise_reviews[""rating""].sum()
    
    return sum_reviews",int64,17667,3840
How many unique countries gave 'Wise' a rating of 5?,What is the count of distinct countries where the company 'Wise' received a rating of 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    wise_5_ratings = dataset[(dataset['Company'] == 'Wise') & (dataset['rating'] == 5)]
    distinct_countries = wise_5_ratings['country_code'].nunique()
    
    return distinct_countries",int64,120,120
What is the highest rating received?,What is the maximum value in the rating column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_rating = dataset[""rating""].max()
    return max_rating
",uint8,5,5
What's the average rating across all reviews?,Calculate the mean value of the rating column in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_rating = dataset[""rating""].mean()
    return mean_rating",float64,4.097756000000000,4.097756000000000
Which company received the most 5-star reviews?,What is the name of the company that has the highest count of reviews with a rating of 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    five_star_reviews = dataset[dataset['rating'] == 5]
    company_counts = five_star_reviews['Company'].value_counts()
    top_company = company_counts.idxmax()
    
    return top_company",string,Wise,Wise
From which country did 'Wise' receive the most reviews?,Which country code has the highest count of reviews for the company 'Wise'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    wise_reviews = dataset[dataset['Company'] == 'Wise']
    country_counts = wise_reviews['country_code'].value_counts()
    top_country = country_counts.idxmax()
    
    return top_country",string,GB,GB
Which country had the lowest representation in the reviews?,What is the country code with the minimum count in the reviews dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    country_counts = dataset['country_code'].value_counts()
    min_count_country = country_counts.idxmin()
    
    return min_count_country",string,CW,CW
Which company received the lowest rating?,What is the name of the company that has the minimum rating value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_rating = dataset[""rating""].min()
    company_with_min_rating = dataset.loc[dataset[""rating""] == min_rating, ""Company""].iloc[0]
    
    return company_with_min_rating",string,Wise,N26
Which are the top 3 countries with the most 5-star reviews for 'Wise'?,What are the names of the top 3 countries that have the highest number of 5-star reviews for the company 'Wise'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    wise_reviews = dataset[dataset['Company'] == 'Wise']
    five_star_reviews = wise_reviews[wise_reviews['rating'] == 5]
    country_counts = five_star_reviews['country_code'].value_counts().head(3)
    top_countries = country_counts.index.tolist()
    
    return top_countries",list of (string),"['GB', 'US', 'ES']","['GB', 'US', 'ES']"
Which are the 2 companies represented in the dataset?,What are the names of the 2 distinct companies present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_companies = dataset[""Company""].unique().tolist()
    top_2_companies = distinct_companies[:2]
    
    return top_2_companies",list of string,"['Wise', 'N26']","['Wise', 'N26']"
Which are the bottom 4 countries in terms of review count? If two or more have the same number order them alphabetically.,"What are the names of the 4 countries with the lowest review counts, ordered alphabetically in case of ties?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    country_counts = dataset['country_code'].value_counts().sort_values(ascending=True)
    lowest_countries = country_counts.head(4).index.tolist()
    lowest_countries_sorted = sorted(lowest_countries)
    
    return lowest_countries_sorted",list of string,"['BO', 'KG', 'KH', 'NU']","['CW', 'FO', 'KZ', 'NE']"
What are the 3 most common countries? If two or more have the same number order them alphabetically.,"Retrieve the top 3 country codes with the highest frequency, sorted alphabetically in case of ties.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    country_counts = dataset['country_code'].value_counts().sort_index()
    top_countries = country_counts.sort_values(ascending=False).head(3)
    top_countries_sorted = sorted(top_countries.index.tolist())
    
    return top_countries_sorted",list of (string),"['DE', 'FR', 'GB']","['GB', 'DE', 'FR']"
What are the 3 most common ratings?,What are the top 3 most frequently occurring values in the rating column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_ratings = dataset['rating'].value_counts().nlargest(3).index.tolist()
    return top_ratings
",list of (uint8),"[5, 1, 4]","[5, 1, 4]"
What are the 2 least common ratings?,Which two rating values appear the least frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    rating_counts = dataset['rating'].value_counts()
    least_frequent_ratings = rating_counts.nsmallest(2).index.tolist()
    least_frequent_ratings_sorted = sorted(least_frequent_ratings)
    
    return least_frequent_ratings_sorted",list of (uint8),"[2, 3]","[3, 2]"
What are the best 4 unique ratings given to 'Wise'?,Retrieve the top 4 distinct ratings associated with the company 'Wise'.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    wise_reviews = dataset[dataset['Company'] == 'Wise']
    top_ratings = wise_reviews['rating'].unique()
    top_ratings_sorted = sorted(top_ratings, reverse=True)[:4]
    
    return top_ratings_sorted",list of (uint8),"[np.uint8(5), np.uint8(4), np.uint8(3), np.uint8(2)]","[5, 4, 2, 1]"
What are the bottom 5 unique ratings given to 'N26'?,Retrieve the 5 least common unique rating values for the company 'N26'.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    n26_reviews = dataset[dataset['Company'] == 'N26']
    rating_counts = n26_reviews['rating'].value_counts()
    least_common_ratings = rating_counts.nsmallest(5).index.tolist()
    
    return least_common_ratings",list of (uint8),"[3, 2, 4, 1, 5]","[1, 2, 3, 4, 5]"
Is there any customer with a PhD education level?,Does any customer in the dataset have an education level of PhD?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_phd = ""PhD"" in dataset[""Education""].values
    return has_phd
",bool,True,True
Do we have any customers who are married?,Are there any customers with marital status indicating they are married?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    married_customers = dataset[dataset[""Marital_Status""].str.contains('Married', case=False, na=False)]
    has_married_customers = not married_customers.empty
    
    return has_married_customers
",bool,True,True
Is there any customer with income higher than 100000?,Are there any customers in the dataset whose income exceeds 100000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_income = (dataset[""Income""] > 100000).any()
    return has_high_income
",bool,True,True
Has any customer made more than 10 web purchases?,Is there at least one customer with NumWebPurchases greater than 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_customer = (dataset[""NumWebPurchases""] > 10).any()
    return has_customer
",bool,True,True
How many customers do we have in the dataset?,What is the total count of customers in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_customers = len(dataset)
    return total_customers
",int64,2240,2240
What's the average income of our customers?,Calculate the mean income value from the customers in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_income = dataset[""Income""].mean()
    return mean_income
",float64,52247.25135400000,52247.25135400000
What's the maximum number of web purchases made by a customer?,What is the highest value in the NumWebPurchases column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_web_purchases = dataset[""NumWebPurchases""].max()
    return max_web_purchases
",uint8,27,27
What's the minimum recency of purchase among the customers?,What is the smallest value in the Recency column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_recency = dataset[""Recency""].min()
    return min_recency
",uint8,0,0
What's the most common education level among our customers?,Which education level appears most frequently in the Education column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_education = dataset[""Education""].mode()[0]
    return most_frequent_education
",string,Graduation,Graduation
What's the most common marital status among our customers?,Which marital status appears most frequently in the customer data?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    marital_status_counts = dataset[""Marital_Status""].value_counts()
    most_frequent_status = marital_status_counts.idxmax()
    
    return most_frequent_status",string,Married,Married
Who is the customer with the highest income?,What is the ID of the customer who has the maximum income value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_income_customer = dataset.loc[dataset[""Income""] == dataset[""Income""].max()]
    customer_id = str(max_income_customer[""ID""].iloc[0])
    
    return customer_id
",string,9432,9432
Who is the customer with the most recent purchase?,What is the ID of the customer who made the latest purchase based on the Dt_Customer column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    latest_customer = dataset.loc[dataset[""Dt_Customer""].idxmax()]
    customer_id = str(latest_customer[""ID""])
    
    return customer_id
",string,7300,4047
Who are the 3 customers with the highest income?,What are the IDs of the top 3 customers with the highest income values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_customers = dataset.nlargest(3, 'Income')
    ids = top_customers['ID'].astype(str).tolist()
    return ids
",list of string,"['9432', '1503', '1501']","[9432, 1503, 1501]"
What are the 2 most common education levels among our customers?,Which two education levels appear most frequently in the Education column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    education_counts = dataset[""Education""].value_counts()
    top_two_education = education_counts.nlargest(2).index.tolist()
    
    return top_two_education",list of (string),"['Graduation', 'PhD']","['Graduation', 'PhD']"
What are the 3 most common marital statuses among our customers?,What are the top 3 marital status categories that appear most frequently in the customer data?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    marital_status_counts = dataset[""Marital_Status""].value_counts()
    top_3_marital_statuses = marital_status_counts.head(3).index.tolist()
    return top_3_marital_statuses
",list of string,"['Married', 'Together', 'Single']","['Married', 'Together', 'Single']"
Who are the 3 customers with the most web purchases?,What are the IDs of the top 3 customers who made the highest number of web purchases?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_customers = dataset.nlargest(3, 'NumWebPurchases')
    ids = top_customers['ID'].astype(str).tolist()
    return ids",list of string,"['5255', '4619', '10311']","[5255, 4619, 10311]"
What are the top 3 income values among our customers?,Retrieve the three highest income values from the customers in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_incomes = dataset.nlargest(3, 'Income')['Income'].tolist()
    return top_incomes
",list of (float64),"[666666.0, 162397.0, 160803.0]","[666666.0, 162397.0, 160803.0]"
What are the top 2 recency values among our customers?,Retrieve the two highest recency values from the customers in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_recency = dataset.nlargest(2, 'Recency')['Recency'].tolist()
    return top_recency
",list of (uint8),"[99, 99]","[99, 99]"
What are the bottom 3 income values among our customers?,Retrieve the three smallest income values from the customers in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_incomes = dataset.nsmallest(3, 'Income')['Income'].tolist()
    return smallest_incomes
",list of float64,"[1730.0, 2447.0, 3502.0]","[1730.0, 2447.0, 3502.0]"
What are the bottom 2 recency values among our customers?,Retrieve the two smallest recency values from the customers in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_recency = dataset.nsmallest(2, 'Recency')['Recency'].tolist()
    return smallest_recency
",list of (uint8),"[0, 0]","[0, 0]"
Is there any customer with a high salary?,Are there any employees in the dataset who have a high salary category?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_salary = (dataset['salary'] == 'high').any()
    return has_high_salary
",bool,True,True
Do we have any employees who suffered a work accident?,Are there any records in the dataset where the work accident attribute is set to True?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_work_accident = (dataset[""Work Accident""] == 'True').any()
    return has_work_accident",bool,False,True
Is there any employee with more than 100 hours per month on average?,Does any employee have an average monthly hours value greater than 100?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_hours = (dataset[""Average Monthly Hours""] > 100).any()
    return has_high_hours",bool,True,True
Does any employee have a satisfaction level above 0.9?,Is there at least one employee with a satisfaction level greater than 0.9?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_satisfaction = (dataset[""Satisfaction Level""] > 0.9).any()
    return has_high_satisfaction
",bool,True,True
How many employees do we have in the dataset?,What is the total count of employees recorded in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_employees = len(dataset)
    return total_employees
",int64,14999,14999
What's the median satisfaction level of our employees?,What is the median value of the satisfaction level column for all employees?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    median_satisfaction = dataset[""Satisfaction Level""].median()
    return median_satisfaction
",float64,0.64,0.64
What's the highest number of projects for a given employee?,What is the maximum value in the Number of Projects column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_projects = dataset[""Number of Projects""].max()
    return max_projects
",int64,7,7
What's the most common marital status among the employees?,Which marital status appears most frequently in the employee dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    marital_status_counts = dataset[""Marital_Status""].value_counts()
    most_frequent_status = marital_status_counts.idxmax()
    
    return most_frequent_status",string,Together,Together
What's the most common education level among our employees?,Which education level appears most frequently in the employee dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    education_counts = dataset[""Marital_Status""].value_counts()
    most_frequent_education = education_counts.idxmax()
    
    return most_frequent_education",string,Together,Graduation
What's the most common marital status in the database?,Which marital status appears most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    marital_status_counts = dataset[""Marital_Status""].value_counts()
    most_frequent_status = marital_status_counts.idxmax()
    
    return most_frequent_status",string,Together,Married
"Among the employees who have left the company in sales, what's the most common salary level?",What is the most frequently occurring salary category among employees who have left the company and were in the sales department?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[(dataset[""Left""] == ""Yes"") & (dataset[""Department""] == ""sales"")]
    most_frequent_salary = filtered_data[""salary""].mode().iloc[0]
    
    return most_frequent_salary
",string,low,low
"Among the employees who have had a work accident in sales, what's the most common salary level?",What is the most frequently occurring salary category among employees in the sales department who have experienced a work accident?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sales_dept = dataset[dataset[""Department""] == ""sales""]
    sales_accident = sales_dept[sales_dept[""Work Accident""] == ""Yes""]
    most_frequent_salary = sales_accident[""salary""].mode()[0]
    
    return most_frequent_salary
",string,medium,low
What are the top 3 satisfaction levels?,What are the three highest values in the satisfaction level column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_three_satisfaction = dataset.nlargest(3, 'Satisfaction Level')['Satisfaction Level'].tolist()
    return top_three_satisfaction
",list of (float64),"[1.0, 1.0, 1.0]","[1, 1, 1]"
What are the top 2 most common Work Accident statuses among our employees?,Retrieve the two most frequently occurring values in the Work Accident column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    work_accident_counts = dataset[""Work Accident""].value_counts()
    top_two = work_accident_counts.head(2).index.tolist()
    return top_two
",list of string,"['No', 'Yes']","['No', 'Yes']"
What are the top 3 most common marital statuses among our employees?,Retrieve the three most frequently occurring values in the Marital_Status column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    marital_status_counts = dataset[""Marital_Status""].value_counts()
    top_three = marital_status_counts.head(3).index.tolist()
    return top_three",list of string,"['Together', 'Single', 'Married']","['Together', 'Single', 'Married']"
What are the highest 3 years spent in the company? ,Return the top 3 values from the Years in the Company column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_years = dataset[""Years in the Company""].nlargest(3).tolist()
    return top_3_years
",list of (uint8),"[10, 10, 10]","[10, 10, 10]"
What are the 3 departments with more 'medium' salary levels?,Which 3 departments have the highest count of employees with a salary level categorized as 'medium'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    medium_salary_employees = dataset[dataset['salary'] == 'medium']
    department_counts = medium_salary_employees['Department'].value_counts()
    top_3_departments = department_counts.head(3).index.tolist()
    
    return top_3_departments
",list of string,"['sales', 'technical', 'support']","['sales', 'technical', 'support']"
"For the 2 employees with the top satisfaction levels who belong to the sales department, what are their salary levels?",What are the salary categories of the 2 sales department employees with the highest satisfaction levels?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sales_dept = dataset[dataset[""Department""] == ""sales""]
    top_satisfaction = sales_dept.nlargest(2, ""Satisfaction Level"")
    salary_categories = top_satisfaction[""salary""].tolist()
    
    return salary_categories
",list of (category),"['low', 'medium']","['low', 'low']"
What are the top 3 average monthly hours worked among the employees in the top 3 departments with the most employees?,Retrieve the top 3 values of average monthly hours worked by employees in the top 3 departments with the highest number of employees.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Get top 3 departments with highest number of employees
    top_departments = dataset['Department'].value_counts().head(3).index.tolist()
    
    # Filter dataset for employees in these departments
    filtered_data = dataset[dataset['Department'].isin(top_departments)]
    
    # Get top 3 average monthly hours values
    top_hours = filtered_data['Average Monthly Hours'].nlargest(3).tolist()
    
    return top_hours
",list of (float64),"[310, 310, 310]","[200.91135265700484, 202.49742647058824, 200.75818752803949]"
What are the lowest 2 satisfaction levels among the employees who have not had a work accident?,Return the two smallest satisfaction level values for employees where work accident is False.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[dataset['Work Accident'] == 'False']
    sorted_data = filtered_data.sort_values(by='Satisfaction Level')
    smallest_two = sorted_data['Satisfaction Level'].head(2).tolist()
    return smallest_two
",list of (float64),[],"[0.09, 0.09]"
"Is there any country with a Ladder score above 7.5, a Generosity score above 0.2, and a Social support score above 0.7?","Does any country have a Ladder score greater than 7.5, a Generosity score greater than 0.2, and a Social support score greater than 0.7?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered = dataset[
        (dataset[""Ladder score""] > 7.5) & 
        (dataset[""Generosity""] > 0.2) & 
        (dataset[""Social support""] > 0.7)
    ]
    answer = not filtered.empty
    return answer
",bool,True,True
"Are there any countries in Western Europe with a Perceptions of corruption score above 0.5, a Ladder score above 7, and a Social support score above 0.7?","Does any country in the Western Europe region have a Perceptions of corruption score greater than 0.5, a Ladder score greater than 7, and a Social support score greater than 0.7?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    western_europe = dataset[dataset[""Regional indicator""] == ""Western Europe""]
    filtered = western_europe[
        (western_europe[""Perceptions of corruption""] > 0.5) &
        (western_europe[""Ladder score""] > 7) &
        (western_europe[""Social support""] > 0.7)
    ]
    answer = not filtered.empty
    return answer
",bool,True,True
Are there any countries in Western Europe with a Perceptions of corruption score above 0.5?,Does any country in the Western Europe region have a Perceptions of corruption value greater than 0.5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    western_europe = dataset[dataset[""Regional indicator""] == ""Western Europe""]
    corruption_gt_05 = western_europe[western_europe[""Perceptions of corruption""] > 0.5]
    answer = not corruption_gt_05.empty
    return answer
",bool,True,True
Is there any country with a Social support score below 0.5?,Does any country have a Social support value less than 0.5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_low_social_support = (dataset[""Social support""] < 0.5).any()
    return has_low_social_support",bool,True,True
What's the average Ladder score among the countries in Western Europe with a Generosity score above 0.2 and a Social support score above 0.7?,Calculate the mean Ladder score for countries in the Western Europe region where Generosity is greater than 0.2 and Social support is greater than 0.7.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[
        (dataset[""Regional indicator""] == ""Western Europe"") & 
        (dataset[""Generosity""] > 0.2) & 
        (dataset[""Social support""] > 0.7)
    ]
    mean_ladder_score = filtered_data[""Ladder score""].mean()
    
    return mean_ladder_score
",float64,7.222675000000000,7.222675000000000
What's the average Perceptions of corruption score among the countries in Sub-Saharan Africa with a Ladder score below 5 and a Social support score below 0.5?,Calculate the mean Perceptions of corruption score for countries in Sub-Saharan Africa where the Ladder score is less than 5 and the Social support score is less than 0.5.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[
        (dataset[""Regional indicator""] == ""Sub-Saharan Africa"") &
        (dataset[""Ladder score""] < 5) &
        (dataset[""Social support""] < 0.5)
    ]
    mean_corruption = filtered_data[""Perceptions of corruption""].mean()
    
    return mean_corruption
",float64,0.7493710000,0.7493710000
What's the maximum Generosity score among the countries?,What is the highest value in the Generosity column across all countries?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_generosity = dataset[""Generosity""].max()
    return max_generosity",float64,0.560664000,0.560664000
What's the minimum Social support score among the countries?,What is the lowest value of Social support score across all countries in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_social_support = dataset[""Social support""].min()
    return min_social_support",float64,0.319460000,0.319460000
Which region has the highest number of countries with a Ladder score above 7 and a Generosity score above 0.2?,What is the name of the region with the most countries where the Ladder score is greater than 7 and the Generosity score exceeds 0.2?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[(dataset['Ladder score'] > 7) & (dataset['Generosity'] > 0.2)]
    region_counts = filtered_data['Regional indicator'].value_counts()
    top_region = region_counts.idxmax()
    
    return top_region",string,Western Europe,Western Europe
Which region accounts for the most countries with a Generosity score above 0.2?,What is the name of the region that has the highest count of countries where the Generosity score is greater than 0.2?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[dataset['Generosity'] > 0.2]
    region_counts = filtered_data['Regional indicator'].value_counts()
    max_region = region_counts.idxmax()
    
    return max_region",string,Western Europe,Western Europe
In which region are the majority of countries with a Perceptions of corruption score below 0.5 located?,What is the regional indicator for the region that contains the most countries with a Perceptions of corruption score less than 0.5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[dataset['Perceptions of corruption'] < 0.5]
    region_counts = filtered_data['Regional indicator'].value_counts()
    most_common_region = region_counts.idxmax()
    
    return most_common_region",string,Western Europe,Western Europe
In which region can you find the majority of countries with a Social support score above 0.7?,What is the regional indicator with the highest count of countries where the Social support score exceeds 0.7?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[dataset['Social support'] > 0.7]
    regional_counts = filtered_data['Regional indicator'].value_counts()
    top_region = regional_counts.idxmax()
    
    return top_region",string,Western Europe,Western Europe
Can you name the three regions that have the most countries with a Ladder score above 7 and a Generosity score above 0.2?,What are the top three regions with the highest number of countries where the Ladder score is greater than 7 and the Generosity score is greater than 0.2?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[(dataset['Ladder score'] > 7) & (dataset['Generosity'] > 0.2)]
    region_counts = filtered_data['Regional indicator'].value_counts()
    top_regions = region_counts.nlargest(3).index.tolist()
    
    return top_regions
",list of string,"['Western Europe', 'North America and ANZ', 'Middle East and North Africa']",['Western Europe']
What are the top 3 regions with the most countries with a Generosity score above 0.2?,Which three regions have the highest number of countries where the Generosity score exceeds 0.2?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    generous_countries = dataset[dataset['Generosity'] > 0.2]
    region_counts = generous_countries['Regional indicator'].value_counts()
    top_regions = region_counts.nlargest(3).index.tolist()
    
    return top_regions",list of string,"['Western Europe', 'Southeast Asia', 'Sub-Saharan Africa']","['Western Europe', 'Southeast Asia', 'Sub-Saharan Africa']"
Identify the three highest Ladder scores from countries in Western Europe that have a Generosity score above 0.2 and a Social support score above 0.7.,What are the top three Ladder scores for countries in the Western Europe region with Generosity score greater than 0.2 and Social support score greater than 0.7?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[
        (dataset['Regional indicator'] == 'Western Europe') & 
        (dataset['Generosity'] > 0.2) & 
        (dataset['Social support'] > 0.7)
    ]
    top_scores = filtered_data.nlargest(3, 'Ladder score')['Ladder score'].tolist()
    return top_scores
",list of (float64),"[7.504499912, 7.448900223, 7.164500237]","[7.504499912, 7.448900223, 7.164500237]"
What are the top 3 Perceptions of corruption scores among the countries in Sub-Saharan Africa?,Retrieve the three highest Perceptions of corruption scores for countries in the Sub-Saharan Africa region.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sub_saharan_africa = dataset[dataset['Regional indicator'] == 'Sub-Saharan Africa']
    top_corruption = sub_saharan_africa.nlargest(3, 'Perceptions of corruption')['Perceptions of corruption'].tolist()
    return top_corruption",list of (float64),"[0.891806662, 0.861874342, 0.861330688]","[0.891806662, 0.861874342, 0.861330688]"
What are the top 3 Generosity scores among the countries in Western Europe?,Retrieve the three highest Generosity scores for countries in the Western Europe regional indicator.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    western_europe = dataset[dataset[""Regional indicator""] == ""Western Europe""]
    top_generosity = western_europe.nlargest(3, ""Generosity"")[""Generosity""].tolist()
    return top_generosity
",list of (float64),"[0.263732493, 0.246944219, 0.214965805]","[0.263732493, 0.246944219, 0.214965805]"
What are the top 3 Social support scores among the countries in Sub-Saharan Africa?,Retrieve the three highest Social support scores for countries in the Sub-Saharan Africa region.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sub_saharan_africa = dataset[dataset[""Regional indicator""] == ""Sub-Saharan Africa""]
    top_social_support = sub_saharan_africa.nlargest(3, ""Social support"")[""Social support""].tolist()
    return top_social_support
",list of (float64),"[0.910357833, 0.852532268, 0.846880972]","[0.910357833, 0.852532268, 0.846880972]"
Which are the three lowest Ladder scores in Western Europe?,What are the three smallest Ladder score values for countries in the Western Europe region?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    western_europe = dataset[dataset[""Regional indicator""] == ""Western Europe""]
    sorted_scores = western_europe.sort_values(""Ladder score"").head(3)
    smallest_scores = sorted_scores[""Ladder score""].tolist()
    
    return smallest_scores
",list of (float64),"[5.514999866, 5.53550005, 5.910900116]","[5.514999866, 5.53550005, 5.910900116]"
Which are the three lowest Perceptions of corruption scores in Sub-Saharan Africa?,What are the three smallest values in the Perceptions of corruption column for countries in the Sub-Saharan Africa region?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sub_saharan_africa = dataset[dataset['Regional indicator'] == 'Sub-Saharan Africa']
    smallest_corruption = sub_saharan_africa.nsmallest(3, 'Perceptions of corruption')['Perceptions of corruption'].tolist()
    return smallest_corruption
",list of (float64),"[0.183541179, 0.606934547, 0.619799435]","[0.183541179, 0.606934547, 0.619799435]"
Is the song with the highest rank from 1965?,Does the song with the minimum rank value have a year value of 1965?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_rank_song = dataset.loc[dataset[""Rank""] == dataset[""Rank""].min()]
    is_year_1965 = (min_rank_song[""Year""].iloc[0] == 1965)
    
    return is_year_1965",bool,True,True
Does the song with the lowest rank contain the word 'love' in its lyrics?,Is the word 'love' present in the lyrics of the song that has the minimum rank value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_rank_song = dataset.loc[dataset[""Rank""] == dataset[""Rank""].min()]
    lyrics = min_rank_song[""Lyrics""].iloc[0]
    has_love = 'love' in lyrics.lower()
    
    return has_love",bool,False,True
Is the artist of the song with the highest rank the same as the artist of the song with the lowest rank?,Are the artists of the highest ranked song and the lowest ranked song the same?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    highest_rank_song = dataset.loc[dataset[""Rank""] == dataset[""Rank""].min()]
    lowest_rank_song = dataset.loc[dataset[""Rank""] == dataset[""Rank""].max()]
    
    highest_artist = highest_rank_song[""Artist""].iloc[0]
    lowest_artist = lowest_rank_song[""Artist""].iloc[0]
    
    are_same = highest_artist == lowest_artist
    
    return are_same",bool,False,False
Are there songs without lyrics?,Are there any songs in the dataset where the lyrics field is empty or null?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_empty_lyrics = dataset[""Lyrics""].isnull().any() or (dataset[""Lyrics""] == """").any()
    return has_empty_lyrics
",bool,True,True
How many songs were produced in 1965?,What is the count of songs with the year attribute set to 1965?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = len(dataset[dataset[""Year""] == 1965])
    return count",int64,100,100
In which year was the song with the highest rank produced?,What is the year of release for the song that has the top rank?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_rank_song = dataset.loc[dataset[""Rank""] == dataset[""Rank""].min()]
    release_year = top_rank_song[""Year""].iloc[0]
    
    return release_year",uint16,1965,1965
What's the rank of the song with the longest lyrics?,What is the rank value of the song that has the maximum length of lyrics?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    dataset['lyrics_length'] = dataset['Lyrics'].str.len()
    max_lyrics_song = dataset.loc[dataset['lyrics_length'] == dataset['lyrics_length'].max()]
    rank_value = max_lyrics_song['Rank'].iloc[0]
    
    return rank_value",uint8,19,19
How many unique artists are there in the dataset?,What is the count of distinct artists in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_artists_count = dataset[""Artist""].nunique()
    return distinct_artists_count",int64,2473,2473
Who is the artist of the song with the highest rank?,What is the name of the artist associated with the song that has the minimum rank value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_rank_song = dataset.loc[dataset[""Rank""] == dataset[""Rank""].min()]
    artist_name = min_rank_song[""Artist""].iloc[0]
    
    return artist_name",string,sam the sham and the pharaohs,sam the sham and the pharaohs
What is the title of the song with the lowest rank?,What is the song name corresponding to the minimum rank value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_rank_song = dataset.loc[dataset[""Rank""] == dataset[""Rank""].min(), ""Song""].iloc[0]
    return min_rank_song",category,wooly bully,how sweet it is to be loved by you
Which song's lyrics contain the word 'love' the most times?,What is the name of the song that has the highest count of the word 'love' in its lyrics?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    dataset['love_count'] = dataset['Lyrics'].str.count('love')
    max_love_song = dataset.loc[dataset['love_count'] == dataset['love_count'].max(), 'Song'].iloc[0]
    return max_love_song",string,the way you love me,the way you love me
What is the title of the top song produced in the earliest year?,What is the song name of the track ranked first in the earliest year available?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    earliest_year = dataset[""Year""].min()
    earliest_year_data = dataset[dataset[""Year""] == earliest_year]
    top_ranked_song = earliest_year_data[earliest_year_data[""Rank""] == 1][""Song""].iloc[0]
    
    return top_ranked_song",string,wooly bully,wooly bully
Who are the artists of the top 5 ranked songs?,Retrieve the names of the artists corresponding to the 5 songs with the lowest rank values.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_rank_songs = dataset.nsmallest(5, 'Rank')
    artists_list = lowest_rank_songs['Artist'].tolist()
    
    return artists_list",list of string,"['sam the sham and the pharaohs', 'ssgt barry sadler', 'lulu', 'the beatles', 'the archies']","['sam the sham and the pharaohs', 'ssgt barry sadler', 'the beach boys', 'the beatles', 'the beatles']"
What are the titles of the 3 songs with the shortest lyrics?,Retrieve the song titles of the 3 songs that have the smallest lyrics_length value.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_songs = dataset.sort_values('lyrics_length').head(3)
    song_titles = sorted_songs['Song'].tolist()
    return song_titles",list of (string),"['papa dont preach', 'girl youll be a woman soon', 'hang on in there baby']","['girl youll be a woman soon', 'papa dont preach', 'breathe']"
What are the top 4 songs by rank produced in the most recent year?,Retrieve the names of the top 4 ranked songs from the latest year available in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    latest_year = dataset['Year'].max()
    latest_year_songs = dataset[dataset['Year'] == latest_year]
    top_4_songs = latest_year_songs.nsmallest(4, 'Rank')['Song'].tolist()
    
    return top_4_songs",list of (string),"['uptown funk', 'thinking out loud', 'see you again', 'trap queen']","['uptown funk', 'thinking out loud', 'see you again', 'trap queen']"
Who are the artists of the bottom 5 ranked songs?,What are the names of the artists corresponding to the 5 songs with the lowest rank values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_rank_songs = dataset.nsmallest(5, 'Rank')
    artists_list = lowest_rank_songs['Artist'].tolist()
    return artists_list",list of (string),"['sam the sham and the pharaohs', 'ssgt barry sadler', 'lulu', 'the beatles', 'the archies']","['marvin gaye', 'wilson pickett', 'neil diamond', 'jerry butler', 'the beatles']"
What are the ranks of the top 3 songs with the most occurrences of the word 'love' in their lyrics?,Retrieve the ranks of the top 3 songs that have the highest love count in their lyrics.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_songs = dataset.nlargest(3, 'love_count')
    ranks = top_songs['Rank'].tolist()
    return ranks",list of (uint8),"[64, 66, 41]","[64, 41, 28]"
What are the years of production of the bottom 4 ranked songs?,Retrieve the production years for the 4 songs with the lowest rank values.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_rank_songs = dataset.nsmallest(4, 'Rank')
    production_years = lowest_rank_songs['Year'].tolist()
    return production_years
",list of (uint16),"[1965, 1966, 1967, 1968]","[1965, 1966, 1967, 1968]"
What are the ranks of the 2 songs produced in the earliest year?,Retrieve the ranks of the two songs that were produced in the earliest year.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    earliest_year = dataset[""Year""].min()
    earliest_songs = dataset[dataset[""Year""] == earliest_year].nsmallest(2, ""Rank"")
    ranks = earliest_songs[""Rank""].tolist()
    
    return ranks",list of (uint8),"[1, 2]","[1, 2]"
What are the years of production of the top 5 songs with the longest lyrics?,Retrieve the production years for the top 5 songs that have the highest lyrics_length values.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_songs = dataset.nlargest(5, 'lyrics_length')
    years = top_songs['Year'].tolist()
    return years
",list of (uint16),"[1998, 2009, 2010, 2007, 2002]","[1998, 2009, 2010, 2007, 2002]"
Is the song with the highest rank from 1965 by the Beatles?,Does the song with the minimum rank value have the year 1965 and artist as the Beatles?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_rank_song = dataset.loc[dataset[""Rank""] == dataset[""Rank""].min()]
    is_year_1965 = (min_rank_song[""Year""].iloc[0] == 1965)
    is_beatles = (min_rank_song[""Artist""].iloc[0] == ""Beatles"")
    result = is_year_1965 and is_beatles
    return result
",bool,False,False
Which artist has the song with the highest rank in 1965?,What is the name of the artist who had the song with the lowest rank value in the year 1965?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    year_1965_data = dataset[dataset[""Year""] == 1965]
    lowest_rank_song = year_1965_data.loc[year_1965_data[""Rank""] == year_1965_data[""Rank""].min()]
    artist_name = lowest_rank_song[""Artist""].iloc[0]
    
    return artist_name",string,sam the sham and the pharaohs,sam the sham and the pharaohs
Who are the artists of the top 3 songs in 1965?,What are the names of the artists corresponding to the top 3 ranked songs in the year 1965?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_1965_songs = dataset[dataset['Year'] == 1965].sort_values('Rank').head(3)
    artists = top_1965_songs['Artist'].tolist()
    return artists",list of string,"['sam the sham and the pharaohs', 'four tops', 'the rolling stones']","['sam the sham and the pharaohs', 'four tops', 'the beach boys']"
What are the years of production of the top 3 songs with the word 'love' in their lyrics by the Beatles?,Retrieve the years of the top 3 ranked songs by the Beatles that contain the word 'love' in their lyrics.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    beatles_songs = dataset[dataset['Artist'] == 'Beatles']
    love_songs = beatles_songs[beatles_songs['Lyrics'].str.contains('love', case=False, na=False)]
    top_3_love_songs = love_songs.nsmallest(3, 'Rank')
    years_list = top_3_love_songs['Year'].tolist()
    
    return years_list
",list of (uint16),[],"[1967, 1965, 1966]"
"Are there records where the 'count' exceeds 20,000?",Does the dataset contain any entries where the count column has a value greater than 20000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_count = (dataset[""count""] > 20000).any()
    return has_high_count",bool,True,True
Do we have any records originating from 'Jefferson'?,Are there any records in the dataset where the origin is 'Jefferson'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_jefferson = 'Jefferson' in dataset['name_origin'].values
    return has_jefferson",bool,True,True
Are there destinations with the name 'Baldwin'?,Does the name_dest column contain any entries with the value 'Baldwin'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    contains_baldwin = 'Baldwin' in dataset['name_dest'].values
    return contains_baldwin",bool,True,True
Are there records where the latitude of the destination is greater than 60?,Does the dataset contain any entries with destination latitude exceeding 60?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_lat = (dataset[""lat_dest""] > 60).any()
    return has_high_lat",bool,True,True
How many unique destinations are there in the dataset?,What is the count of distinct destination values present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_dest_count = dataset[""dest""].nunique()
    return distinct_dest_count",int64,3219,3219
"On average, how many times is each origin-destination pair reported?",What is the average count for each unique combination of origin and destination?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_count = dataset.groupby(['origin', 'dest'])['count'].mean().reset_index()
    answer = avg_count['count'].mean()
    return answer
",float64,63.31629800000000,67.7453800000000
What's the highest count value in the dataset?,What is the maximum value in the count column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_count = dataset[""count""].max()
    return max_count",uint16,40580,40580
How many unique origin names are there in the dataset?,What is the count of distinct origin names present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_origin_names = dataset[""name_origin""].nunique()
    return distinct_origin_names",int64,1904,1904
From which origin do we have the highest 'count' recorded?,What is the origin value corresponding to the maximum count in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_count_row = dataset.loc[dataset[""count""] == dataset[""count""].max()]
    origin_value = max_count_row[""origin""].iloc[0]
    
    return origin_value",float64,,
To which destination do we find the highest 'count' reported?,What is the destination name corresponding to the maximum count value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_count_row = dataset.loc[dataset[""count""] == dataset[""count""].max()]
    dest_name = max_count_row[""name_dest""].iloc[0]
    
    return dest_name",string,Los Angeles,Los Angeles
Which origin has the lowest latitude?,What is the origin name corresponding to the minimum latitude value in the lat_origin column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_lat_row = dataset.loc[dataset[""lat_origin""] == dataset[""lat_origin""].min()]
    origin_name = min_lat_row[""name_origin""].iloc[0]
    
    return origin_name",string,GuÃ¡nica,Guáanica
Which destination has the highest longitude?,What is the name of the destination with the maximum longitude value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_lon_dest = dataset.loc[dataset[""lon_dest""] == dataset[""lon_dest""].max()]
    dest_name = max_lon_dest[""name_dest""].iloc[0]
    
    return dest_name
",string,Fajardo,Fajardo
What are the 3 origins with the highest average count?,Which 3 origin locations have the highest average count values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_counts = dataset.groupby('name_origin')['count'].mean().reset_index()
    top_origins = avg_counts.sort_values('count', ascending=False).head(3)['name_origin'].tolist()
    return top_origins",list of string,"['Los Angeles', 'New York', 'San Francisco']","['Los Angeles', 'New York', 'San Francisco']"
Which are the 4 destinations with the lowest average count?,What are the 4 destination names with the smallest average count values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_counts = dataset.groupby('name_dest')['count'].mean().reset_index()
    sorted_dest = avg_counts.sort_values('count')
    smallest_avg_dest = sorted_dest['name_dest'].head(4).tolist()
    
    return smallest_avg_dest",list of string,"['Kalawao', 'Loving', 'Kenedy', 'Wheatland']","['Kalawao', 'Loving', 'Kenedy', 'Wheatland']"
List the 5 origins with the highest average latitude values.,What are the top 5 origin names with the highest average latitude values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_lat_by_origin = dataset.groupby('name_origin')['lat_origin'].mean()
    top_5_origins = avg_lat_by_origin.nlargest(5).index.tolist()
    return top_5_origins",list of string,"['North Slope', 'Northwest Arctic', 'Yukon-Koyukuk', 'Nome', 'Fairbanks North Star']","['North Slope', 'Northwest Arctic', 'Yukon-Koyukuk', 'Nome', 'Fairbanks North Star']"
Which 2 origins have the lowest non-null average longitude values?,"What are the 2 origin names with the smallest average longitude values, excluding nulls?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Filter out null values in lon_origin
    filtered_data = dataset.dropna(subset=['lon_origin'])
    # Group by name_origin and calculate average longitude
    avg_lon = filtered_data.groupby('name_origin')['lon_origin'].mean()
    # Sort by average longitude and get the 2 smallest
    smallest_avg_lon = avg_lon.sort_values().head(2)
    # Get the origin names as a list
    origin_names = smallest_avg_lon.index.tolist()
    
    return origin_names
",list of string,"['Aleutians West', 'Nome']","['Aleutians West', 'Nome']"
List the highest 5 count values.,What are the top 5 values in the count column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_counts = dataset.nlargest(5, 'count')['count'].tolist()
    return top_counts
",list of int64,"[40580, 39899, 38430, 28524, 24452]","[40580, 39899, 38430, 28524, 24452]"
What are the 3 highest latitude values for destinations?,Retrieve the top 3 latitude values from the destination locations.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_lat_dest = dataset.nlargest(3, 'lat_dest')['lat_dest'].tolist()
    return top_lat_dest",list of (float64),"[69.42718361, 69.42718361, 69.42718361]","[69.42718361, 69.42718361, 69.42718361]"
Rank the lowest 4 longitude values for origins.,What are the 4 smallest longitude values in the origin column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_lon_origin = dataset.nsmallest(4, 'lon_origin')['lon_origin'].tolist()
    return smallest_lon_origin
",list of (float64),"[-167.08526, -167.08526, -167.08526, -167.08526]","[-167.08526, -167.08526, -167.08526, -167.08526]"
Which 6 destination IDs have the highest average counts?,What are the top 6 destination IDs with the highest average count values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_destinations = dataset.groupby('dest')['count'].mean().nlargest(6).index.tolist()
    return top_destinations
",list of (uint32),"[6037, 36061, 48201, 6059, 6071, 6085]","[6037, 36061, 48201, 6059, 6071, 6085]"
Are there talks with more than a million views?,Does the dataset contain any talks where the views count exceeds one million?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_million_views = (dataset[""views""] > 1000000).any()
    return has_million_views
",bool,True,True
Is there a talk by 'Elon Musk'?,Does the dataset contain any talk where 'Elon Musk' is listed as a speaker?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_elon_musk = any(dataset['speaker_1'].str.contains('Elon Musk', na=False)) or any(dataset['all_speakers'].str.contains('Elon Musk', na=False))
    return has_elon_musk
",bool,True,True
Are there any TEDx events included?,Does the event column contain any TEDx events?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_tedx = dataset['event'].str.contains('TEDx', case=False, na=False).any()
    return has_tedx",bool,True,True
Are there talks available in more than 10 languages?,Does any talk have more than 10 languages listed in the available_lang column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Split the available_lang string by comma and count the number of languages for each talk
    lang_counts = dataset['available_lang'].str.split(',').apply(lambda x: len(x) if isinstance(x, list) else 0)
    # Check if any talk has more than 10 languages
    has_more_than_10 = any(lang_counts > 10)
    
    return has_more_than_10",bool,False,True
How many unique speakers are there in the dataset?,What is the count of distinct speakers in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_speakers_count = dataset[""speaker_1""].nunique()
    return distinct_speakers_count
",int64,3274,3274
What's the average number of views for the talks?,Calculate the mean value of the views column across all talks.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_views = dataset[""views""].mean()
    return mean_views
",float64,2148005.5737830000,2148005.5737830000
What's the maximum duration of a talk (in seconds)?,What is the highest value in the duration column (in seconds)?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_duration = dataset[""duration""].max()
    return max_duration
",uint16,3922,3922
How many talks have more than 500 comments?,What is the count of talks where the comments field exceeds 500?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = len(dataset[dataset['comments'] > 500])
    return count",int64,186,186
Which event has the highest average views?,What is the name of the event with the greatest mean number of views across its talks?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    event_views_mean = dataset.groupby('event')['views'].mean()
    max_mean_event = event_views_mean.idxmax()
    
    return max_mean_event",string,TEDxPuget Sound,TEDxPuget Sound
Which speaker's talk has the most comments?,What is the name of the speaker whose talk received the highest number of comments?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_comments_talk = dataset.loc[dataset[""comments""] == dataset[""comments""].max()]
    speaker_name = max_comments_talk[""speaker_1""].iloc[0]
    
    return speaker_name",string,Richard Dawkins,Richard Dawkins
Which talk's title has the least views?,What is the title of the talk with the minimum number of views?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_views_talk = dataset.loc[dataset[""views""] == dataset[""views""].min()]
    title = min_views_talk[""title""].iloc[0]
    
    return title
",string,Por qué necesitamos proteger el alta mar,Por qué necesitamos proteger el alta mar
In which event was the longest talk held?,What is the name of the event where the talk with the maximum duration took place?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_duration_talk = dataset.loc[dataset[""duration""] == dataset[""duration""].max()]
    event_name = max_duration_talk[""event""].iloc[0]
    
    return event_name",string,Countdown,Countdown
Which are the top 4 events with the highest average number of comments?,What are the names of the top 4 events with the highest average comments per talk?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_comments = dataset.groupby('event')['comments'].mean().reset_index()
    top_events = avg_comments.sort_values('comments', ascending=False).head(4)['event'].tolist()
    return top_events",list of string,"['TEDxPuget Sound', 'TEDxHouston', 'TEDxFiDiWomen', 'TEDxUW']","['TEDxPuget Sound', 'TEDxHouston', 'TEDxFiDiWomen', 'TEDxUW']"
List the top 3 most frequent speakers in the dataset. If two have the same count go by alphabetical order. ,"Return the names of the top 3 speakers who appear most frequently in the dataset, sorted alphabetically in case of ties.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    speaker_counts = dataset['speaker_1'].value_counts().sort_values(ascending=False)
    top_speakers = speaker_counts.head(3).index.tolist()
    top_speakers_sorted = sorted(top_speakers)
    
    return top_speakers_sorted",list of string,"['Alex Gendler', 'Emma Bryce', 'Iseult Gillespie']","['Alex Gendler', 'Iseult Gillespie', 'Emma Bryce']"
Which 5 events have the shortest average talk durations?,What are the names of the 5 events with the smallest average duration of talks?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_duration_by_event = dataset.groupby('event')['duration'].mean().sort_values()
    smallest_avg_events = avg_duration_by_event.head(5).index.tolist()
    return smallest_avg_events
",list of string,"['TEDxConcorde', 'Small Thing Big Idea', 'The TED Interview', 'TEDxConcordiaUPortland', 'The Way We Work']","['TEDxConcorde', 'Small Thing Big Idea', 'The TED Interview', 'TEDxConcordiaUPortland', 'The Way We Work']"
List 2 events with the most number of talks.,What are the names of the top 2 events that have the highest count of talks?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    event_counts = dataset['event'].value_counts()
    top_events = event_counts.head(2).index.tolist()
    return top_events",list of string,"['TED-Ed', 'TED2018']","['TED-Ed', 'TED2018']"
What are the top 4 most viewed talks' view counts?,Retrieve the view counts of the four talks with the highest number of views.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_talks = dataset.sort_values(by=""views"", ascending=False)
    top_four_views = sorted_talks[""views""].head(4).tolist()
    return top_four_views
",list of (uint32),"[65051954, 57074270, 56932551, 49730580]","[65051954, 57074270, 56932551, 49730580]"
List the 3 shortest talk durations in the dataset.,What are the 3 smallest values in the duration column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_durations = dataset.nsmallest(3, 'duration')['duration'].tolist()
    return smallest_durations
",list of (uint16),"[60, 78, 78]","[60, 78, 78]"
What are the 5 highest number of comments?,Retrieve the top 5 values from the comments column in descending order.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_comments = dataset.nlargest(5, 'comments')['comments'].tolist()
    return top_comments
",list of (float64),"[6449.0, 4931.0, 3424.0, 3006.0, 2984.0]","[6449.0, 4931.0, 3424.0, 3006.0, 2984.0]"
List the view counts of the 6 least viewed talks.,What are the view counts of the 6 talks with the lowest number of views?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_views = dataset.nsmallest(6, 'views')['views'].tolist()
    return lowest_views
",list of int64,"[0, 0, 0, 0, 0, 0]","[0, 0, 0, 0, 0, 0]"
Is it true that the oldest person in the dataset has a stroke?,,,,ERROR,True
Do all smokers have hypertension?,Is the hypertension attribute set to 1 for every individual who has a smoking status other than never smoked?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    non_never_smoked = dataset[dataset[""smoking_status""] != ""never smoked""]
    all_have_hypertension = (non_never_smoked[""hypertension""] == 1).all()
    
    return all_have_hypertension
",bool,False,False
Are all people with heart diseases married?,"For all individuals with heart disease, is the ever_married attribute set to 'Yes'?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    heart_disease_patients = dataset[dataset[""heart_disease""] == 1]
    all_married = (heart_disease_patients[""ever_married""] == 'Yes').all()
    
    return all_married
",bool,False,False
Is the average glucose level higher for males than females?,Is the mean glucose level greater for male patients compared to female patients?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    male_glucose = dataset[dataset[""gender""] == ""Male""][""avg_glucose_level""].mean()
    female_glucose = dataset[dataset[""gender""] == ""Female""][""avg_glucose_level""].mean()
    is_male_higher = male_glucose > female_glucose
    
    return is_male_higher",bool,True,True
How many people in the dataset have a stroke?,What is the count of individuals in the dataset who have a stroke value of 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    stroke_count = dataset[dataset[""stroke""] == 1].shape[0]
    return stroke_count",int64,249,249
What is the average age of people who smoke?,Calculate the mean age of individuals with a smoking status indicating they smoke.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smokers = dataset[dataset[""smoking_status""] == ""smokes""]
    mean_age = smokers[""age""].mean()
    
    return mean_age",float64,47.09632400000000,47.09632400000000
What is the highest glucose level recorded in the dataset?,What is the maximum value in the avg_glucose_level column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_glucose = dataset[""avg_glucose_level""].max()
    return max_glucose
",float64,271.74,271.74
How many unique 'work_type' categories are there in the dataset?,What is the count of distinct work_type categories present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_work_types_count = dataset[""work_type""].nunique()
    return distinct_work_types_count
",int64,5,5
What is the most common work type among stroke patients?,Which work type appears most frequently in the records of patients who had a stroke?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    stroke_patients = dataset[dataset[""stroke""] == 1]
    work_type_counts = stroke_patients[""work_type""].value_counts()
    most_frequent_work_type = work_type_counts.idxmax()
    
    return most_frequent_work_type",string,Private,Private
What is the smoking status of the youngest person in the dataset?,What is the smoking status category of the individual with the minimum age in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_age_individual = dataset.loc[dataset[""age""] == dataset[""age""].min()]
    smoking_status = min_age_individual[""smoking_status""].values[0]
    
    return smoking_status",category,Unknown,Unknown
What is the residence type of the person with the highest BMI?,What is the residence type of the individual who has the maximum BMI value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_bmi_individual = dataset.loc[dataset[""bmi""] == dataset[""bmi""].max()]
    residence_type = max_bmi_individual[""Residence_type""].values[0]
    
    return residence_type",category,Rural,Rural
What is the gender of the person with the lowest glucose level?,What is the gender category of the individual who has the minimum average glucose level?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_glucose_individual = dataset.loc[dataset[""avg_glucose_level""] == dataset[""avg_glucose_level""].min()]
    gender_category = min_glucose_individual[""gender""].iloc[0]
    
    return gender_category",category,Female,Female
What are the top 3 work types among people with heart diseases?,Retrieve the top 3 work types for individuals who have heart disease.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    heart_disease_patients = dataset[dataset['heart_disease'] == 1]
    work_type_counts = heart_disease_patients['work_type'].value_counts().head(3)
    top_work_types = work_type_counts.index.tolist()
    
    return top_work_types",list of (string),"['Private', 'Self-employed', 'Govt_job']","['Private', 'Self-employed', 'Govt_job']"
What are the 5 most common smoking statuses among people with a stroke?,Retrieve the top 5 most frequently occurring smoking status values for individuals who have had a stroke.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    stroke_patients = dataset[dataset['stroke'] == 1]
    smoking_counts = stroke_patients['smoking_status'].value_counts().head(5)
    top_smoking_statuses = smoking_counts.index.tolist()
    
    return top_smoking_statuses",list of (string),"['never smoked', 'formerly smoked', 'Unknown', 'smokes']","['never smoked', 'formerly smoked', 'Unknown', 'smokes']"
What are the top 2 residence types of people with hypertension?,What are the two most common residence types among individuals who have hypertension?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    hypertensive_individuals = dataset[dataset['hypertension'] == 1]
    residence_counts = hypertensive_individuals['Residence_type'].value_counts()
    top_two_residence = residence_counts.head(2).index.tolist()
    
    return top_two_residence",list of (string),"['Rural', 'Urban']","['Rural', 'Urban']"
What are the top 2 work types among people who have never married?,Which are the two most common work types for individuals where ever married is No?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unmarried = dataset[dataset[""ever_married""] == ""No""]
    work_type_counts = unmarried[""work_type""].value_counts()
    top_two_work_types = work_type_counts.head(2).index.tolist()
    
    return top_two_work_types",list of string,"['Private', 'children']","['Private', 'children']"
What are the oldest 5 ages of people with strokes?,Retrieve the top 5 highest age values for individuals who have had a stroke.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    stroke_individuals = dataset[dataset[""stroke""] == 1]
    top_ages = stroke_individuals.nlargest(5, ""age"")[""age""].tolist()
    return top_ages
",list of (float64),"[82.0, 82.0, 82.0, 82.0, 82.0]","[82.0, 82.0, 82.0, 82.0, 82.0]"
What are the 3 lowest BMIs among people who smoke?,Retrieve the three smallest BMI values for individuals who have a smoking status indicating they smoke.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smokers = dataset[dataset['smoking_status'] == 'smokes']
    smallest_bmis = smokers.nsmallest(3, 'bmi')['bmi'].tolist()
    return smallest_bmis
",list of (float64),"[15.7, 16.7, 16.7]","[15.7, 16.7, 16.7]"
What are the top 4 glucose levels of people who have heart diseases?,Retrieve the four highest glucose levels from individuals diagnosed with heart disease.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    heart_disease_patients = dataset[dataset['heart_disease'] == 1]
    sorted_glucose = heart_disease_patients.sort_values('avg_glucose_level', ascending=False)
    top_glucose_levels = sorted_glucose['avg_glucose_level'].head(4).tolist()
    
    return top_glucose_levels",list of float64,"[271.74, 254.63, 254.6, 252.72]","[271.74, 254.63, 254.6, 252.72]"
What are the 6 highest ages of people who have never married?,Return the top 6 highest ages where ever_married is No.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unmarried_data = dataset[dataset[""ever_married""] == ""No""]
    top_ages = unmarried_data.nlargest(6, ""age"")[""age""].tolist()
    return top_ages
",list of (float64),"[82.0, 82.0, 82.0, 82.0, 82.0, 82.0]","[82.0, 82.0, 82.0, 82.0, 82.0, 82.0]"
Are there any reflections with more than 10 sentences?,Does the dataset contain any reflections where the number of sentences exceeds 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_exceeding_sentences = (dataset[""num_sentence""] > 10).any()
    return has_exceeding_sentences
",bool,True,True
Is there a reflection from 'USA' with over 5 sentences?,Does any entry from the USA have a reflection with more than 5 sentences in the cleaned_hm column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    usa_entries = dataset[dataset[""country""] == ""USA""]
    has_more_than_5 = any(usa_entries[""num_sentence""] > 5)
    
    return has_more_than_5",bool,True,True
Are there any reflections categorized as 'affection'?,Does the dataset contain any entries where the ground truth category is 'affection'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_affection = (dataset['ground_truth_category'] == 'affection').any()
    return has_affection",bool,True,True
Are there any married individuals who reflected on 'exercise'?,Is there any person with marital status as married who mentioned 'exercise' in their reflection?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    married_people = dataset[dataset['marital'] == 'married']
    contains_exercise = married_people['cleaned_hm'].str.contains('exercise', case=False, na=False)
    result = any(contains_exercise)
    
    return result
",bool,True,True
How many unique reflection periods are there?,What is the count of distinct reflection periods in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_reflection_periods = dataset[""reflection_period""].nunique()
    return distinct_reflection_periods
",int64,2,2
"On average, how many sentences are there in the reflections?",What is the average value of the num_sentence column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_num_sentence = dataset[""num_sentence""].mean()
    return average_num_sentence
",float64,1.3407670000000000,1.3407670000000000
What's the highest age of an individual in the dataset?,What is the maximum age value present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_age = dataset[""age""].max()
    return max_age",float64,233.0,233.0
How many reflections are from 'IND'?,What is the count of reflections where the country is 'IND'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = dataset[dataset['country'] == 'IND'].shape[0]
    return count",int64,16729,16729
Which country has the highest average number of sentences in their reflections?,What is the country with the greatest mean value of num_sentence?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    country_mean = dataset.groupby('country')['num_sentence'].mean()
    max_mean_country = country_mean.idxmax()
    
    return max_mean_country",string,UKR,UKR
Which gender has the most reflections categorized as 'affection'?,What is the gender with the highest count of reflections where the ground truth category is 'affection'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    affection_reflections = dataset[dataset['ground_truth_category'] == 'affection']
    gender_counts = affection_reflections['gender'].value_counts()
    top_gender = gender_counts.idxmax()
    
    return top_gender",string,m,f
From which country is the oldest individual who reflected?,What is the country of the person with the highest age who has a reflection period?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_reflection = dataset[dataset[""reflection_period""].notna()]
    max_age_person = has_reflection.loc[has_reflection[""age""] == has_reflection[""age""].max()]
    country = max_age_person[""country""].iloc[0]
    
    return country",string,USA,USA
Which marital status has the most reflections on 'bonding'?,What is the marital status with the highest count of reflections categorized as 'bonding'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    bonding_reflections = dataset[dataset['ground_truth_category'] == 'bonding']
    marital_counts = bonding_reflections['marital'].value_counts()
    most_common_marital = marital_counts.idxmax()
    
    return most_common_marital",string,single,single
Which are the top 3 countries with the highest average number of sentences in their reflections?,What are the names of the 3 countries that have the highest average num_sentence values in their reflections?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    country_avg = dataset.groupby('country')['num_sentence'].mean().sort_values(ascending=False)
    top_countries = country_avg.head(3).index.tolist()
    return top_countries",list of (string),"['UKR', 'CRI', 'HKG']","['UKR', 'CRI', 'HKG']"
List the 4 most common predicted categories in the dataset.,What are the top 4 most frequently occurring values in the predicted_category column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_categories = dataset['predicted_category'].value_counts().head(4).index.tolist()
    return top_categories",list of (category),"['affection', 'achievement', 'enjoy_the_moment', 'bonding']","['affection', 'achievement', 'enjoy_the_moment', 'bonding']"
Which 5 countries have the youngest average age of reflectors?,What are the top 5 countries with the lowest average age of reflectors?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_age_by_country = dataset.groupby('country')['age'].mean().sort_values()
    top_5_countries = avg_age_by_country.head(5).index.tolist()
    return top_5_countries",list of (string),"['KAZ', 'ALB', 'LKA', 'SLV', 'MAR']","['KAZ', 'ALB', 'LKA', 'MAR', 'SLV']"
List 2 genders with the most number of reflections.,What are the top 2 genders that have the highest count of reflections?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    gender_counts = dataset['gender'].value_counts()
    top_genders = gender_counts.head(2).index.tolist()
    return top_genders
",list of string,"['m', 'f']","['m', 'f']"
What are the lowest 4 number of sentences?,Retrieve the smallest 4 values from the num_sentence column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_values = dataset[""num_sentence""].nsmallest(4).tolist()
    return smallest_values
",list of (uint8),"[1, 1, 1, 1]","[1, 1, 1, 1]"
List the 3 highest ages in the dataset.,What are the top 3 highest age values present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_ages = dataset.nlargest(3, 'age')['age'].tolist()
    return top_ages",list of (float64),"[233.0, 233.0, 233.0]","[233.0, 233.0, 233.0]"
Which are the highest 5 number of sentences?,What are the top 5 values in the num_sentence column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_values = dataset['num_sentence'].value_counts().head(5).index.tolist()
    return top_5_values
",list of (uint8),"[1, 2, 3, 4, 5]","[69, 60, 58, 56, 53, 51]"
List the age of the 6 youngest individuals in the dataset.,What are the ages of the 6 individuals with the smallest age values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_ages = dataset.sort_values('age').head(6)['age'].tolist()
    return sorted_ages
",list of float64,"[2.0, 2.0, 2.0, 2.0, 2.0, 2.0]","[2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0]"
Is it true that the youngest participant has met their match?,,,,ERROR,False
Do all people who got a match have the same race as their partner?,"For all individuals who have a match, is their race the same as their partner's race?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    matched_individuals = dataset[dataset['match'] == 1]
    all_same_race = (matched_individuals['race'] == matched_individuals['race_o']).all()
    
    return all_same_race",bool,False,False
Are all participants who expected more than 5 matches male?,Is the gender of every participant with expected_num_matches greater than 5 categorized as male?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    participants = dataset[dataset[""expected_num_matches""] > 5]
    all_male = (participants[""gender""] == ""male"").all()
    
    return all_male",bool,False,True
Is the average age of participants who got a match higher than those who didn't?,Is the mean age of participants with a match greater than the mean age of participants without a match?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_age_match = dataset[dataset['match'] == 1]['age'].mean()
    mean_age_no_match = dataset[dataset['match'] == 0]['age'].mean()
    answer = mean_age_match > mean_age_no_match
    return answer
",bool,False,False
How many participants had a match?,What is the count of participants where the match attribute is equal to 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    match_count = dataset[dataset[""match""] == 1].shape[0]
    return match_count",int64,1380,1380
What is the average age of participants who have the same race as their partner?,Calculate the mean age of participants where the race of the participant matches the race of their partner.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    matching_race_participants = dataset[dataset['samerace'] == 1]
    mean_age = matching_race_participants['age'].mean()
    
    return mean_age",float64,26.390237000000000,26.390237000000000
What is the highest number of matches expected by any participant in the dataset?,What is the maximum value in the expected_num_matches column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_value = dataset[""expected_num_matches""].max()
    return max_value
",float64,18.0,18.0
How many unique 'race' categories are there in the dataset?,What is the count of distinct race categories present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_race_count = dataset[""race""].nunique()
    return distinct_race_count",int64,5,5
What is the most common race among participants who got a match?,Which race category appears most frequently among participants where the match column is 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    matched_participants = dataset[dataset[""match""] == 1]
    race_counts = matched_participants[""race""].value_counts()
    most_frequent_race = race_counts.idxmax()
    
    return most_frequent_race",string,european/caucasian-american,european/caucasian-american
What is the gender of the youngest participant in the dataset?,What is the gender value for the participant with the minimum age in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_age_participant = dataset.loc[dataset[""age""] == dataset[""age""].min()]
    gender_value = min_age_participant[""gender""].iloc[0]
    
    return gender_value
",category,male,male
What is the race of the participant with the highest number of expected matches?,What is the race category of the participant who has the highest value in the expected_num_matches column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_matches_participant = dataset.loc[dataset[""expected_num_matches""] == dataset[""expected_num_matches""].max()]
    race_category = max_matches_participant[""race""].iloc[0]
    
    return race_category",category,other,other
What is the wave of the participant with the youngest age?,What is the wave value of the participant who has the minimum age?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_age_participant = dataset.loc[dataset[""age""] == dataset[""age""].min()]
    wave_value = min_age_participant[""wave""].iloc[0]
    
    return wave_value",uint8,5,5
What are the top 3 waves among people who got a match?,Which three wave values are most common among individuals who have a match?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    matched_individuals = dataset[dataset['match'] == 1]
    top_waves = matched_individuals['wave'].value_counts().nlargest(3).index.tolist()
    return top_waves
",list of (uint8),"[21, 4, 11]","[21, 4, 11]"
What are the 5 most common races among people who expected more than 5 matches?,What are the top 5 race categories for individuals who have an expected number of matches greater than 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[dataset['expected_num_matches'] > 5]
    race_counts = filtered_data['race'].value_counts().head(5)
    top_races = race_counts.index.tolist()
    
    return top_races",list of string,"['european/caucasian-american', 'asian/pacific islander/asian-american', 'black/african american', 'latino/hispanic american', 'other']","['european/caucasian-american', 'asian/pacific islander/asian-american', 'black/african american', 'latino/hispanic american', 'other']"
What are the top 4 waves of people who have the same race as their partner?,Which are the top 4 waves where individuals share the same race as their partner?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    same_race_waves = dataset[dataset['samerace'] == 1]['wave'].value_counts().nlargest(4).index.tolist()
    return same_race_waves",list of uint8,"[15, 9, 21, 11]","[15, 9, 21, 11]"
What are the top 2 genders among people who expected no match?,Which two genders are most common among individuals who anticipated zero matches?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    zero_matches = dataset[dataset['expected_num_matches'] == 0]
    gender_counts = zero_matches['gender'].value_counts()
    top_two_genders = gender_counts.nlargest(2).index.tolist()
    
    return top_two_genders",list of string,"['female', 'male']","['female', 'male']"
What are the top 5 ages of participants who got a match?,Retrieve the 5 highest ages of participants where the match column is 1.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    matched_participants = dataset[dataset['match'] == 1]
    top_ages = matched_participants['age'].nlargest(5).tolist()
    return top_ages
",list of float64,"[42.0, 42.0, 42.0, 42.0, 39.0]","[42.0, 42.0, 42.0, 42.0, 39.0]"
What are the 3 lowest numbers of matches expected by people who got a match?,Retrieve the three smallest values from the expected_num_matches column where the match column is equal to 1.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    matched_data = dataset[dataset['match'] == 1]
    smallest_values = matched_data['expected_num_matches'].nsmallest(3).tolist()
    return smallest_values",list of (float64),"[0.0, 0.0, 0.0]","[0.0, 0.0, 0.0]"
What are the top 4 ages of people who have the same race as their partner?,Retrieve the top 4 ages of individuals whose race matches their partner's race.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    matching_race = dataset[dataset['samerace'] == 1]
    top_ages = matching_race['age'].sort_values(ascending=False).head(4).tolist()
    return top_ages",list of float64,"[55.0, 55.0, 55.0, 42.0]","[55.0, 55.0, 55.0, 42.0]"
What are the 6 youngest ages of participants who expected no match?,Retrieve the ages of the 6 youngest participants where the expected number of matches is zero.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[dataset['expected_num_matches'] == 0]
    sorted_data = filtered_data.sort_values('age')
    youngest_ages = sorted_data['age'].head(6).tolist()
    
    return youngest_ages",list of float64,"[18.0, 18.0, 18.0, 18.0, 18.0, 18.0]","[18.0, 18.0, 18.0, 18.0, 18.0, 18.0]"
Are there any tweets with more than 10 retweets?,Does the dataset contain any tweets where the retweet count exceeds 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_retweets = (dataset[""retweet_count""] > 10).any()
    return has_high_retweets
",bool,True,True
Is there a negative sentiment tweet from 'United' airline?,Does the dataset contain any tweet from 'United' airline where the airline sentiment is negative?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    united_negative_tweets = dataset[(dataset['airline'] == 'United') & (dataset['airline_sentiment'] == 'negative')]
    has_united_negative_tweets = not united_negative_tweets.empty
    
    return has_united_negative_tweets",bool,True,True
Are there any tweets categorized with 'Late Flight' as the negative reason?,Does the dataset contain any tweets where the negative reason is 'Late Flight'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_late_flight = 'Late Flight' in dataset['negativereason'].values
    return has_late_flight",bool,True,True
Are there any tweets from 'Eastern Time (US & Canada)' timezone with positive sentiment?,Does the dataset contain any tweets from the 'Eastern Time (US & Canada)' timezone where the airline sentiment is positive?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    eastern_tweets = dataset[dataset['user_timezone'] == 'Eastern Time (US & Canada)']
    positive_tweets = eastern_tweets[eastern_tweets['airline_sentiment'] == 'positive']
    has_positive_tweets = len(positive_tweets) > 0
    
    return has_positive_tweets",bool,True,True
How many unique user timezones are there in the dataset?,What is the count of distinct user timezone values present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_timezones_count = dataset[""user_timezone""].nunique()
    return distinct_timezones_count",int64,85,85
"On average, what is the sentiment confidence of the tweets?",What is the mean value of the airline sentiment confidence for all tweets?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_confidence = dataset[""airline_sentiment_confidence""].mean()
    return mean_confidence",float64,0.9001690000000000,0.9001690000000000
What's the maximum number of retweets a tweet has received?,What is the highest value in the retweet_count column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_retweet = dataset[""retweet_count""].max()
    return max_retweet
",int64,44,44
How many tweets are from 'Virgin America' airline?,What is the count of tweets where the airline is 'Virgin America'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = dataset[dataset['airline'] == 'Virgin America'].shape[0]
    return count",int64,504,504
Which airline has the highest average sentiment confidence?,What is the name of the airline with the greatest mean value of airline sentiment confidence?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_confidence = dataset.groupby('airline')['airline_sentiment_confidence'].mean()
    max_confidence_airline = mean_confidence.idxmax()
    
    return max_confidence_airline",string,US Airways,US Airways
Which negative reason is most commonly associated with 'American' airline?,What is the most frequent negative reason mentioned in tweets for the airline named 'American'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    american_tweets = dataset[dataset['airline'] == 'American']
    negative_reasons = american_tweets['negativereason'].dropna()
    most_frequent_reason = negative_reasons.mode()[0]
    
    return most_frequent_reason",string,Customer Service Issue,Customer Service Issue
From which timezone is the tweet with the highest sentiment confidence?,What is the user timezone of the tweet that has the maximum airline sentiment confidence value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_confidence_tweet = dataset.loc[dataset[""airline_sentiment_confidence""] == dataset[""airline_sentiment_confidence""].max()]
    user_timezone = max_confidence_tweet[""user_timezone""].iloc[0]
    
    return user_timezone
",string,Eastern Time (US & Canada),Eastern Time (US & Canada)
Which airline has the most tweets with negative sentiment?,What is the name of the airline that has the highest count of tweets classified as negative sentiment?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    negative_tweets = dataset[dataset['airline_sentiment'] == 'negative']
    airline_counts = negative_tweets['airline'].value_counts()
    top_airline = airline_counts.idxmax()
    
    return top_airline",string,United,United
Which are the top 3 airlines with the highest average sentiment confidence?,What are the names of the 3 airlines with the greatest mean sentiment confidence values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_confidence = dataset.groupby('airline')['airline_sentiment_confidence'].mean()
    top_airlines = mean_confidence.nlargest(3).index.tolist()
    return top_airlines",list of string,"['US Airways', 'American', 'United']","['US Airways', 'American', 'United']"
List the 3 most common negative reasons in the dataset.,What are the top 3 most frequently occurring negative reasons in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    negative_reasons = dataset['negativereason'].value_counts().head(3).index.tolist()
    return negative_reasons",list of string,"['Customer Service Issue', 'Late Flight', ""Can't Tell""]","['Customer Service Issue', 'Late Flight', 'Can't Tell']"
Which 3 user timezones have the most number of tweets?,What are the top 3 user timezones with the highest count of tweets?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_timezones = dataset['user_timezone'].value_counts().head(3).index.tolist()
    return top_timezones",list of (string),"['Eastern Time (US & Canada)', 'Central Time (US & Canada)', 'Pacific Time (US & Canada)']","['Eastern Time (US & Canada)', 'Central Time (US & Canada)', 'Pacific Time (US & Canada)']"
List the 2 airlines with the least number of tweets in the dataset.,Which two airlines have the lowest count of tweets in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    airline_counts = dataset['airline'].value_counts().nsmallest(2)
    lowest_airlines = airline_counts.index.tolist()
    
    return lowest_airlines",list of string,"['Virgin America', 'Delta']","['Virgin America', 'Delta']"
What are the top 4 tweet IDs with the lowest sentiment confidence?,Retrieve the tweet IDs of the 4 tweets with the smallest sentiment confidence values.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_tweets = dataset.sort_values(by='airline_sentiment_confidence', ascending=True)
    smallest_confidence_tweets = sorted_tweets.head(4)
    tweet_ids = smallest_confidence_tweets['tweet_id'].tolist()
    
    return tweet_ids
",list of int64,"[569972097453137920, 568092537786748928, 568028183267639297, 568993773277069312]","[570306133677760513, 570301031407624196, 570300817074462722, 570300767074181121]"
List the 3 highest retweet counts in the dataset.,What are the top 3 values in the retweet_count column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_retweets = dataset.nlargest(3, 'retweet_count')['retweet_count'].tolist()
    return top_retweets",list of int64,"[44, 32, 31]","[44, 32, 31]"
What are the 2 lowest values for sentiment confidence?,Retrieve the two smallest values from the airline_sentiment_confidence column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_confidences = dataset[""airline_sentiment_confidence""].sort_values().head(2)
    smallest_two = sorted_confidences.tolist()
    return smallest_two
",list of float64,"[0.335, 0.3353]","[0.335, 0.335]"
List the 6 highest sentiment confidence values.,Provide the top 6 values from the airline_sentiment_confidence column in descending order.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_confidence = dataset[""airline_sentiment_confidence""].sort_values(ascending=False).head(6).tolist()
    return top_confidence
",list of float64,"[1.0, 1.0, 1.0, 1.0, 1.0, 1.0]","[1.0, 1.0, 1.0, 1.0, 1.0, 1.0]"
Is it true that the student with the highest number of absences is from a rural area?,Does the student who has the maximum absences have an address value corresponding to rural?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_absences_student = dataset.loc[dataset[""absences""] == dataset[""absences""].max()]
    is_rural = max_absences_student[""address""].iloc[0] == ""rural""
    
    return is_rural
",bool,False,True
Are all students who are in a romantic relationship older than 17?,Is the age of every student with romantic status as yes greater than 17?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    romantic_students = dataset[dataset['romantic'] == 'yes']
    all_above_17 = (romantic_students['age'] > 17).all()
    
    return all_above_17",bool,False,False
Is the average final grade (G3) of students who consume a lot of alcohol (Dalc > 2) lower than those who don't?,Is the mean G3 score of students with Dalc greater than 2 less than the mean G3 score of students with Dalc 2 or lower?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_g3_high_dalc = dataset[dataset['Dalc'] > 2]['G3'].mean()
    mean_g3_low_dalc = dataset[dataset['Dalc'] <= 2]['G3'].mean()
    is_less = mean_g3_high_dalc < mean_g3_low_dalc
    
    return is_less
",bool,True,True
Do all students who have both parents at home (Pstatus = 'T') have more than 3 free time after school (freetime > 3)?,Is it true that every student with Pstatus equal to 'T' has a freetime value greater than 3?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    t_status_students = dataset[dataset[""Pstatus""] == 'T']
    all_gt_3 = (t_status_students[""freetime""] > 3).all()
    
    return all_gt_3
",bool,False,False
How many students have their mother's education (Medu) level above 3?,What is the count of students whose mother's education level (Medu) is greater than 3?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = len(dataset[dataset[""Medu""] > 3])
    return count
",int64,131,131
What is the average age of students who want to take higher education (higher = 'yes')?,Calculate the mean age of students where the higher education preference is 'yes'.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    higher_yes = dataset[dataset['higher'] == 'yes']
    mean_age = higher_yes['age'].mean()
    
    return mean_age
",float64,16.634667000000000,16.634667000000000
What is the highest number of absences among students?,What is the maximum value in the absences column for all students?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_absences = dataset[""absences""].max()
    return max_absences
",uint8,75,75
How many unique schools are there in the dataset?,What is the count of distinct school values present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_school_count = dataset[""school""].nunique()
    return distinct_school_count
",int64,2,2
What is the most common mother's job among students who want to take higher education?,Which mother's job appears most frequently for students who have indicated they want to pursue higher education?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    higher_education_students = dataset[dataset['higher'] == 'yes']
    most_frequent_mjob = higher_education_students['Mjob'].mode()[0]
    
    return most_frequent_mjob",string,other,other
What is the gender of the student with the highest final grade (G3)?,What is the sex category value of the student who has the maximum G3 score?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_g3_student = dataset.loc[dataset[""G3""] == dataset[""G3""].max()]
    sex_category = max_g3_student[""sex""].iloc[0]
    
    return sex_category",category,M,M
What is the school of the student with the highest number of absences?,Which school does the student with the maximum absences belong to?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_absences_student = dataset.loc[dataset[""absences""] == dataset[""absences""].max()]
    school = max_absences_student[""school""].iloc[0]
    
    return school
",category,GP,GP
What is the family size of the student with the highest final grade (G3)?,What is the family size (famsize) of the student who has the maximum value in the G3 column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_g3_student = dataset.loc[dataset[""G3""] == dataset[""G3""].max()]
    famsize = max_g3_student[""famsize""].iloc[0]
    
    return famsize",category,GT3,GT3
What are the top 3 reasons for choosing a school among students who want to take higher education?,What are the three most common values in the reason column for students who have higher set to yes?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    higher_yes = dataset[dataset['higher'] == 'yes']
    reason_counts = higher_yes['reason'].value_counts()
    top_3_reasons = reason_counts.head(3).index.tolist()
    return top_3_reasons",list of (category),"['course', 'home', 'reputation']","['course', 'home', 'reputation']"
What are the 5 most common mother's jobs among students with a final grade above 10?,Return the top 5 most frequent mother's jobs (Mjob) for students whose final grade (G3) is greater than 10.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[dataset['G3'] > 10]
    top_mjobs = filtered_data['Mjob'].value_counts().head(5).index.tolist()
    return top_mjobs",list of string,"['other', 'services', 'teacher', 'health', 'at_home']","['other', 'services', 'teacher', 'health', 'at_home']"
What are the top 4 schools among students with absences above 10?,Which are the 4 most common schools for students who have more than 10 absences?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    students_with_more_than_10_absences = dataset[dataset[""absences""] > 10]
    school_counts = students_with_more_than_10_absences[""school""].value_counts()
    top_4_schools = school_counts.head(4).index.tolist()
    
    return top_4_schools",list of (string),"['GP', 'MS']","['GP', 'MS']"
What are the top 2 family relations among students with a final grade below 10?,Which two family relations are most common for students whose final grade (G3) is less than 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    low_g3_students = dataset[dataset[""G3""] < 10]
    famrel_counts = low_g3_students[""famrel""].value_counts()
    top_2_famrel = famrel_counts.nlargest(2).index.tolist()
    
    return top_2_famrel",list of (category),"[4, 5]","[4, 5]"
What are the top 5 ages of students who want to take higher education?,Retrieve the top 5 highest ages among students who have indicated an interest in pursuing higher education.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    higher_education_students = dataset[dataset['higher'] == 'yes']
    top_5_ages = higher_education_students.nlargest(5, 'age')['age'].tolist()
    return top_5_ages
",list of (uint8),"[21, 20, 20, 20, 19]","[16, 17, 15, 18, 19]"
What are the 3 lowest final grades of students who have more than 10 absences?,"Retrieve the final grades (G3) of students with absences greater than 10, sorted in ascending order, and return the first 3 values.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_students = dataset[dataset[""absences""] > 10]
    sorted_grades = filtered_students[""G3""].sort_values()
    first_three_grades = sorted_grades.head(3).tolist()
    
    return first_three_grades
",list of (uint8),"[4, 5, 5]","[4, 14, 17]"
What are the top 4 ages of students whose mother's education level is above 3?,Retrieve the 4 highest ages of students where the mother's education level (Medu) is greater than 3.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[dataset['Medu'] > 3]
    top_ages = filtered_data['age'].nlargest(4).tolist()
    return top_ages
",list of (uint8),"[20, 19, 19, 19]","[15, 16, 18, 17]"
What are the 6 lowest final grades of students who don't want to take higher education?,Retrieve the 6 smallest values in the G3 column for students who have higher attribute set to no.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    higher_no_students = dataset[dataset[""higher""] == ""no""]
    smallest_g3_values = higher_no_students[""G3""].nsmallest(6).tolist()
    return smallest_g3_values
",list of (uint8),"[0, 0, 0, 0, 0, 0]","[8, 10, 12, 9, 7, 13]"
Is it true that the oldest company (based on approval year) is from an urban (UrbanRural=1) area?,Does the company with the earliest approval year have UrbanRural value equal to 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    earliest_approval = dataset.loc[dataset[""ApprovalFY""] == dataset[""ApprovalFY""].min()]
    urban_rural_value = earliest_approval[""UrbanRural""].iloc[0] == 1
    
    return urban_rural_value
",bool,False,False
Are all companies with more than 10 employees located in an urban (UrbanRural=1) area?,Do all businesses with employee count greater than 10 have UrbanRural value equal to 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    businesses_gt_10 = dataset[dataset[""NoEmp""] > 10]
    all_urban = (businesses_gt_10[""UrbanRural""] == 1).all()
    
    return all_urban",bool,False,False
"Are all companies with a default amount greater than $250,000 in the food sector?",Do all records with default_amount exceeding 250000 have Sector equal to food?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    high_default = dataset[dataset[""default_amount""] > 250000]
    all_food_sector = (high_default[""Sector""] == ""food"").all()
    
    return all_food_sector
",bool,False,False
Is the average number of retained jobs higher for companies located in urban (UrbanRural=1) areas than those in rural (UrbanRural=0) areas?,Is the mean of retained jobs greater for companies with UrbanRural value 1 compared to those with UrbanRural value 0?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_retained_urban = dataset[dataset[""UrbanRural""] == 1][""RetainedJob""].mean()
    mean_retained_rural = dataset[dataset[""UrbanRural""] == 0][""RetainedJob""].mean()
    is_greater = mean_retained_urban > mean_retained_rural
    
    return is_greater
",bool,True,True
How many companies have a franchise code of 1?,What is the count of companies where the franchise code equals 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    franchise_code_1_count = dataset[dataset[""FranchiseCode""] == 1].shape[0]
    return franchise_code_1_count
",int64,57340,57340
What is the average disbursement gross for companies in the retail sector?,Calculate the mean disbursement gross for all companies where sector is retail.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    retail_companies = dataset[dataset[""Sector""] == ""Retail""]
    mean_disbursement = retail_companies[""DisbursementGross""].mean()
    
    return mean_disbursement
",float64,,164636.4123070000
What is the highest approval year in the dataset?,What is the maximum value in the ApprovalFY column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_approval_fy = dataset[""ApprovalFY""].max()
    return max_approval_fy
",uint16,2010,2010
How many unique sectors are there in the dataset?,What is the count of distinct values in the Sector column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_sector_count = dataset[""Sector""].nunique()
    return distinct_sector_count
",int64,20,20
What is the most common sector among companies with a franchise code of 1?,Which sector appears most frequently for companies that have a franchise code value of 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    franchise_1_companies = dataset[dataset[""FranchiseCode""] == 1]
    sector_counts = franchise_1_companies[""Sector""].value_counts()
    most_frequent_sector = sector_counts.idxmax()
    
    return most_frequent_sector",string,Retail trade,Retail trade
What is the state of the company with the highest disbursement gross?,Which state has the company that received the largest disbursement gross amount?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_disbursement = dataset.loc[dataset[""DisbursementGross""] == dataset[""DisbursementGross""].max()]
    state = max_disbursement[""State""].iloc[0]
    
    return state",string,ME,ME
What is the bank for the company with the highest default amount?,Which bank is associated with the company that has the largest default amount?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_default_company = dataset.loc[dataset[""default_amount""] == dataset[""default_amount""].max()]
    bank_name = max_default_company[""Bank""].iloc[0]
    
    return bank_name
",string,COMMUNITY BANK & TRUST,COMMUNITY BANK & TRUST
What is the sector of the company with the most number of employees?,Which sector has the company with the highest number of employees?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_emp_company = dataset.loc[dataset[""NoEmp""] == dataset[""NoEmp""].max()]
    sector = max_emp_company[""Sector""].iloc[0]
    
    return sector",string,Health care and social assistance,Health care and social assistance
What are the top 3 sectors among companies with a franchise code of 1?,Which three sectors appear most frequently for companies where the franchise code equals 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    franchise_1_data = dataset[dataset['FranchiseCode'] == 1]
    top_sectors = franchise_1_data['Sector'].value_counts().head(3).index.tolist()
    return top_sectors
",list of (string),"['Retail trade', 'Other services (except public administration)', 'Manufacturing']","['Retail trade', 'Other services (except public administration)', 'Manufacturing']"
What are the 5 most common banks among companies with an approval year earlier than 2000?,Which 5 banks appear most frequently for companies whose approval year is before 2000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    pre_2000_companies = dataset[dataset[""ApprovalFY""] < 2000]
    top_banks = pre_2000_companies[""Bank""].value_counts().head(5).index.tolist()
    return top_banks",list of string,"['WELLS FARGO BANK NATL ASSOC', 'BANK OF AMERICA NATL ASSOC', 'U.S. BANK NATIONAL ASSOCIATION', 'JPMORGAN CHASE BANK NATL ASSOC', 'PNC BANK, NATIONAL ASSOCIATION']","['WELLS FARGO BANK NATL ASSOC', 'BANK OF AMERICA NATL ASSOC', 'U.S. BANK NATIONAL ASSOCIATION', 'JPMORGAN CHASE BANK NATL ASSOC', 'PNC BANK, NATIONAL ASSOCIATION']"
"What are the top 4 states among companies with a disbursement gross greater than $1,000,000?","Which are the four most common states for companies where the disbursement gross exceeds 1,000,000 dollars?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    high_disbursement = dataset[dataset['DisbursementGross'] > 1000000]
    state_counts = high_disbursement['State'].value_counts().head(4)
    top_states = state_counts.index.tolist()
    
    return top_states
",list of (string),"['CA', 'TX', 'FL', 'AZ']","['CA', 'TX', 'FL', 'AZ']"
"What are the top 2 sectors among companies with a default amount greater than $500,000?","Which two sectors appear most frequently among companies where the default amount exceeds 500,000?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[dataset[""default_amount""] > 500000]
    sector_counts = filtered_data[""Sector""].value_counts()
    top_sectors = sector_counts.head(2).index.tolist()
    
    return top_sectors",list of (string),"['Retail trade', 'Accommodation and food services']","['Retail trade', 'Accommodation and food services']"
What are the top 5 approval years for companies in the retail sector?,Retrieve the 5 most frequent approval years for companies where the sector is retail.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    retail_companies = dataset[dataset[""Sector""] == ""Retail""]
    approval_years = retail_companies[""ApprovalFY""].value_counts().head(5).index.tolist()
    
    return approval_years",list of (uint16),[],"[2005, 2004, 2006, 2007, 2003]"
What are the 3 highest disbursement gross for companies with a franchise code of 1?,Retrieve the top 3 DisbursementGross values where FranchiseCode equals 1.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[dataset[""FranchiseCode""] == 1]
    top_3_values = filtered_data.nlargest(3, ""DisbursementGross"")[""DisbursementGross""].tolist()
    return top_3_values
",list of (uint32),"[5294366, 4656672, 4000048]","[50000.0, 100000.0, 10000.0]"
What are the top 4 approval years for companies in the state of CA?,Which are the 4 most frequent approval years for companies located in California?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    california_companies = dataset[dataset['State'] == 'CA']
    approval_years = california_companies['ApprovalFY'].value_counts().head(4).index.tolist()
    return approval_years",list of (uint16),"[2007, 2004, 2006, 2003]","[2007, 2004, 2006, 2003]"
What are the 6 highest default amounts among companies in the state of NY?,Retrieve the top 6 default amounts for companies located in the state of New York.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    ny_companies = dataset[dataset[""State""] == ""New York""]
    top_defaults = ny_companies.nlargest(6, ""default_amount"")[""default_amount""].tolist()
    return top_defaults
",list of (uint32),[],"[0.0, 50000.0, 25000.0, 100000.0, 35000.0, 10000.0]"
Is it true that the oldest movie (based on year) in the drama genre is from the USA?,Does the movie with the earliest year in the drama genre have USA as its country?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    drama_movies = dataset[dataset['genre'].str.contains('Drama', case=False, na=False)]
    earliest_drama_movie = drama_movies.loc[drama_movies['year'] == drama_movies['year'].min()]
    is_usa = earliest_drama_movie['country'].str.contains('USA', case=False, na=False).bool()
    
    return is_usa",bool,False,False
"Are all movies from the USA, with more than 80 minutes duration in the drama genre, in English?",Do all movies from the USA with a duration greater than 80 minutes belong to the drama genre and have English as their language?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    usa_movies = dataset[(dataset['country'] == 'USA') & (dataset['duration'] > 80)]
    all_drama_english = ((usa_movies['genre'] == 'Drama') & (usa_movies['language'] == 'English')).all()
    
    return all_drama_english",bool,False,False
Are all movies with votes greater than 90 from the USA in English?,"For all movies where the votes count exceeds 90, are they from the USA and have English as their language?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    high_vote_movies = dataset[dataset[""votes""] > 90]
    is_usa_english = ((high_vote_movies[""country""] == ""USA"") & (high_vote_movies[""language""] == ""English"")).all()
    
    return is_usa_english",bool,False,True
Is the average duration of English language movies from the USA longer than those from non-USA countries?,Is the mean duration of movies in English language produced in the USA greater than the mean duration of movies in English language produced in other countries?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Filter movies in English language produced in USA
    usa_english_movies = dataset[(dataset['language'] == 'English') & (dataset['country'] == 'USA')]
    # Filter movies in English language produced in other countries
    other_english_movies = dataset[(dataset['language'] == 'English') & (dataset['country'] != 'USA')]
    
    # Calculate mean durations
    mean_duration_usa = usa_english_movies['duration'].mean()
    mean_duration_other = other_english_movies['duration'].mean()
    
    # Compare the means
    is_usa_greater = mean_duration_usa > mean_duration_other
    
    return is_usa_greater
",bool,False,False
"How many movies from the USA, in the drama genre, have a metascore of 100?","What is the count of movies that are from the USA, belong to the drama genre, and have a metascore of 100?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_movies = dataset[
        (dataset['country'] == 'USA') & 
        (dataset['genre'] == 'Drama') & 
        (dataset['metascore'] == 100.0)
    ]
    count = len(filtered_movies)
    
    return count",int64,1,6
"What is the average duration for movies in the drama genre, from the USA, in English?","Calculate the mean duration of movies that are in the drama genre, from the USA, and in English language.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[
        (dataset['genre'] == 'Drama') & 
        (dataset['country'] == 'USA') & 
        (dataset['language'] == 'English')
    ]
    mean_duration = filtered_data['duration'].mean()
    
    return mean_duration
",float64,94.53737900000000,96.07927000000000
What is the latest year for English language movies from the USA in the dataset?,What is the maximum year value for movies where the language is English and the country is USA?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[(dataset['language'] == 'English') & (dataset['country'] == 'USA')]
    max_year = filtered_data['year'].max()
    
    return max_year
",float64,2020.0,2020.0
How many unique languages are there in the dataset for movies from the USA?,What is the count of distinct languages present in the dataset for movies where the country is USA?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    usa_movies = dataset[dataset['country'] == 'USA']
    distinct_languages_count = usa_movies['language'].nunique()
    
    return distinct_languages_count",int64,650,650
What is the most common genre among English language movies from the USA with a metascore of 100?,Which genre appears most frequently in movies from the USA that are in English and have a metascore of 100?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    usa_english_movies = dataset[(dataset['country'] == 'USA') & (dataset['language'] == 'English') & (dataset['metascore'] == 100)]
    genre_counts = usa_english_movies['genre'].value_counts()
    most_frequent_genre = genre_counts.idxmax()
    
    return most_frequent_genre",string,"Mystery, Thriller","Adventure, Family, Fantasy"
What is the country of the English language movie with the longest duration?,Which country produced the English language film that has the highest duration value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    english_films = dataset[dataset['language'] == 'English']
    max_duration_film = english_films.loc[english_films['duration'] == english_films['duration'].max()]
    country = max_duration_film['country'].iloc[0]
    
    return country",string,UK,Argentina
What is the language of the movie from the USA with the highest metascore?,What is the language of the film produced in the USA that has the maximum metascore value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    usa_films = dataset[dataset['country'] == 'USA']
    max_metascore_film = usa_films.loc[usa_films['metascore'] == usa_films['metascore'].max()]
    language = max_metascore_film['language'].iloc[0]
    
    return language
",string,English,English
What is the genre of the English language movie from the USA with the most votes?,Which genre does the English language movie from the USA with the highest number of votes belong to?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Filter for English language movies from the USA
    filtered = dataset[(dataset['language'] == 'English') & (dataset['country'] == 'USA')]
    # Find the movie with the highest number of votes
    max_votes_movie = filtered.loc[filtered['votes'] == filtered['votes'].max()]
    # Get the genre of that movie
    genre = max_votes_movie['genre'].iloc[0]
    
    return genre",string,Drama,Drama
What are the top 3 genres among English language movies from the USA with a metascore of 100?,Which three genres appear most frequently in movies from the USA that are in English and have a metascore of 100?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[
        (dataset['country'] == 'USA') & 
        (dataset['language'] == 'English') & 
        (dataset['metascore'] == 100)
    ]
    genre_counts = filtered_data['genre'].value_counts()
    top_3_genres = genre_counts.head(3).index.tolist()
    
    return top_3_genres",list of (string),"['Mystery, Thriller', 'Mystery, Romance, Thriller', 'Drama, Film-Noir']","['Adventure, Family, Fantasy', 'Drama, Mystery', 'Drama, Romance, War']"
What are the 5 most common countries among English language movies with a year earlier than 2000?,Which 5 countries appear most frequently in movies that are in English and released before the year 2000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[(dataset['language'] == 'English') & (dataset['year'] < 2000)]
    country_counts = filtered_data['country'].value_counts().head(5)
    top_countries = country_counts.index.tolist()
    
    return top_countries",list of (string),"['USA', 'UK', 'Canada', 'UK, USA', 'Australia']","['USA', 'UK', 'Canada', 'UK, USA', 'Australia']"
What are the top 4 languages among movies from the USA with a duration greater than 180 minutes?,Which four languages appear most frequently in movies that are from the USA and have a duration exceeding 180 minutes?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Filter movies from USA with duration > 180 minutes
    filtered_movies = dataset[(dataset['country'] == 'USA') & (dataset['duration'] > 180)]
    # Count language occurrences and get top 4
    top_languages = filtered_movies['language'].value_counts().head(4).index.tolist()
    return top_languages",list of (string),"['English', 'English, Spanish', 'English, French', 'English, Mandarin']","['English', 'English, Spanish', 'English, Russian', 'English, Hungarian']"
What are the top 2 genres among English language movies from the USA with a metascore greater than 90?,Which two genres appear most frequently in movies from the USA that are in English and have a metascore above 90?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Filter movies from USA, in English, with metascore > 90
    filtered = dataset[(dataset['country'] == 'USA') & 
                      (dataset['language'] == 'English') & 
                      (dataset['metascore'] > 90)]
    
    # Split genres and count occurrences
    genre_counts = filtered['genre'].str.split(', ').explode().value_counts()
    
    # Get top 2 genres
    top_genres = genre_counts.head(2).index.tolist()
    
    return top_genres",list of (string),"['Drama', 'Comedy']","['Drama', 'Crime, Drama']"
What are the top 5 years for English language movies from the USA in the drama genre?,Retrieve the top 5 years with the highest number of English language movies from the USA in the drama genre.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered = dataset[
        (dataset['language'] == 'English') & 
        (dataset['country'] == 'USA') & 
        (dataset['genre'] == 'Drama')
    ]
    top_years = filtered['year'].value_counts().head(5).index.tolist()
    return top_years
",list of (float64),"[2018.0, 2013.0, 2017.0, 2012.0, 2010.0]","[2017.0, 2016.0, 2015.0, 2013.0, 2018.0]"
What are the 3 longest durations for English language movies from the USA with a metascore of 100?,"Retrieve the top 3 duration values for movies where the language is English, the country is USA, and the metascore is 100.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[(dataset['language'] == 'English') & 
                          (dataset['country'] == 'USA') & 
                          (dataset['metascore'] == 100)]
    top_durations = filtered_data.nlargest(3, 'duration')['duration'].tolist()
    return top_durations
",list of (uint16),"[128, 112, 102]","[102, 119, 112]"
What are the four years with more English language movies from the USA?,Which four years have the highest count of movies where the language is English and the country is USA?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_data = dataset[(dataset['language'] == 'English') & (dataset['country'] == 'USA')]
    year_counts = filtered_data['year'].value_counts().nlargest(4)
    top_years = year_counts.index.tolist()
    
    return top_years
",list of (float64),"[2017.0, 2016.0, 2018.0, 2015.0]","[2017.0, 2016.0, 2018.0, 2013.0]"
Can you show the 6 highest metascores among English language movies from the USA?,What are the top 6 metascores for movies from the USA with English as their language?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    usa_english_movies = dataset[(dataset['country'] == 'USA') & (dataset['language'] == 'English')]
    top_metascores = usa_english_movies.nlargest(6, 'metascore')['metascore'].tolist()
    return top_metascores
",list of (float64),"[100.0, 100.0, 100.0, 100.0, 99.0, 99.0]","[49.0, 55.0, 57.0, 48.0, 54.0, 52.0]"
Is it true that the song with the lowest popularity in the dataset is longer than 300000 ms?,Does the track with the minimum popularity value have a duration greater than 300000 milliseconds?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_popularity_track = dataset.loc[dataset[""popularity""] == dataset[""popularity""].min()]
    duration_gt_300000 = min_popularity_track[""duration_ms""].iloc[0] > 300000
    
    return duration_gt_300000",bool,False,True
Did any song released in the year 2020 in the dataset achieve the maximum popularity?,Is there a song from the year 2020 that has the highest popularity value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_popularity = dataset[""popularity""].max()
    songs_from_2020 = dataset[dataset[""release_year""] == 2020]
    has_max_popularity = max_popularity in songs_from_2020[""popularity""].values
    
    return has_max_popularity
",bool,True,False
Does the song with the longest duration also have the highest energy?,Is the track with the maximum duration also the one with the highest energy value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_duration_track = dataset.loc[dataset[""duration_ms""] == dataset[""duration_ms""].max()]
    max_energy_track = dataset.loc[dataset[""energy""] == dataset[""energy""].max()]
    is_same_track = max_duration_track[""id""].values[0] == max_energy_track[""id""].values[0]
    
    return is_same_track
",bool,False,False
Does the song with the highest energy also have the highest popularity?,Is the track with the maximum energy value also the one with the highest popularity score?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_energy_track = dataset.loc[dataset[""energy""] == dataset[""energy""].max()]
    max_popularity_track = dataset.loc[dataset[""popularity""] == dataset[""popularity""].max()]
    is_same_track = max_energy_track[""id""].values[0] == max_popularity_track[""id""].values[0]
    
    return is_same_track",bool,False,False
How many unique artists are there in the dataset?,,,,ERROR,13056
What's the average song duration in the dataset?,Calculate the mean duration in milliseconds for all songs in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_duration = dataset[""duration_ms""].mean()
    return mean_duration
",float64,228986.69315400000,228998.0798100000
What's the maximum popularity score in the dataset?,What is the highest value in the popularity column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_popularity = dataset[""popularity""].max()
    return max_popularity
",uint8,94,94
How many songs were released in the year with the most releases?,What is the count of songs in the release year that has the highest number of song releases?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    year_counts = dataset[""release_year""].value_counts()
    max_year = year_counts.idxmax()
    count = year_counts.max()
    
    return count",int64,489,489
Who is the artist with the highest popularity score?,What is the name of the artist who has the maximum popularity score?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_popularity = dataset.loc[dataset[""popularity""] == dataset[""popularity""].max()]
    artist_name = max_popularity[""artists""].iloc[0]
    
    return artist_name",string,['Giveon'],['Giveon']
In which month was the most popular song released?,What is the release month of the song with the highest popularity value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_popularity_song = dataset.loc[dataset[""popularity""] == dataset[""popularity""].max()]
    release_month = max_popularity_song[""release_month""].iloc[0]
    
    return release_month",float64,3.0,3.0
What's the name of the longest song?,Which song has the highest duration in milliseconds?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_duration_song = dataset.loc[dataset[""duration_ms""] == dataset[""duration_ms""].max(), ""name""].iloc[0]
    return max_duration_song",string,Monster Tunes Yearmix 2011 - Mixed by Mark Eteson,Monster Tunes Yearmix 2011 - Mixed by Mark Eteson
What's the name of the song with the most energy?,Which song has the highest energy value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_energy_song = dataset.loc[dataset[""energy""] == dataset[""energy""].max(), ""name""].iloc[0]
    return max_energy_song
",string,Marathon (Mix Cut) - Simon O'Shine Mix,Marathon (Mix Cut) - Simon O'Shine Mix
What are the the 2 shortest songs in the dataset?,What are the names of the 2 songs with the smallest duration in milliseconds?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_songs = dataset.sort_values(by='duration_ms').head(2)
    song_names = sorted_songs['name'].tolist()
    return song_names",list of string,"['Rhapsody on a Theme of Paganini, Op. 43: Introduction - Allegro vivace', 'Intro']","['Rhapsody on a Theme of Paganini, Op. 43: Introduction - Allegro vivace', 'Intro']"
What are the names of the top 3 most popular songs?,Retrieve the names of the 3 songs with the highest popularity values.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_songs = dataset.nlargest(3, 'popularity')
    song_names = top_songs['name'].tolist()
    return song_names",list of string,"['Heartbreak Anniversary', 'Good Days', 'Paradise (feat. Dermot Kennedy)']","[Heartbreak Anniversary, Good Days, Paradise (feat. Dermot Kennedy)]"
What are the top 3 artists who released songs with the longest durations?,,,,ERROR,"['Mark Eteson', 'Various Artists', 'Serge Reggiani']"
What are the names of the top 2 songs with the most energy?,Retrieve the names of the two songs that have the highest energy values.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_energy_songs = dataset.nlargest(2, 'energy')
    song_names = top_energy_songs['name'].tolist()
    return song_names",list of string,"[""Marathon (Mix Cut) - Simon O'Shine Mix"", 'Applause; Martha Tilton Returns to Stage - Live']","[Marathon (Mix Cut) - Simon O'Shine Mix, Applause; Martha Tilton Returns to Stage - Live]"
What are the top 5 most popular scores?,Retrieve the top 5 values from the popularity column in descending order.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_popularity = dataset.nlargest(5, 'popularity')['popularity'].tolist()
    return top_5_popularity
",list of (float64),"[94, 93, 92, 88, 87]","[0, 35, 23, 1, 26]"
What are the 3 longest song durations?,Retrieve the top 3 highest values from the duration_ms column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_durations = dataset.nlargest(3, 'duration_ms')['duration_ms'].tolist()
    return top_durations
",list of float64,"[4792587.0, 4658245.0, 4585640.0]","[4792587.0, 4658245.0, 4585640.0]"
What are the 4 latest release years in the dataset?,Retrieve the four most recent release years present in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    recent_years = dataset['release_year'].sort_values(ascending=False).unique()[:4]
    return [int(year) for year in recent_years]
",list of uint16,"[2021, 2020, 2019, 2018]","[2021, 2021, 2021, 2021]"
What are the top 3 energy scores in the dataset?,Retrieve the three highest values from the energy column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_energy = dataset.nlargest(3, 'energy')['energy'].tolist()
    return top_energy
",list of float64,"[1.0, 1.0, 1.0]","[1.0, 1.0, 1.0]"
Is it true that the athlete with the lowest ID is older than 30 years?,Does the athlete with the smallest ID value have an age greater than 30?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_id_athlete = dataset.loc[dataset[""ID""] == dataset[""ID""].min()]
    age_gt_30 = min_id_athlete[""Age""].values[0] > 30
    
    return age_gt_30",bool,False,True
Did any athlete from the team with the most participants win two gold medals?,Were there any athletes from the team that had the highest number of participants who won two gold medals?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Find the team with the highest number of participants
    team_counts = dataset['Team'].value_counts()
    top_team = team_counts.idxmax()
    
    # Filter dataset for athletes from the top team who won gold medals
    gold_medalists = dataset[(dataset['Team'] == top_team) & (dataset['Medal'] == 'Gold')]
    
    # Count gold medals per athlete
    gold_counts = gold_medalists['Name'].value_counts()
    
    # Check if any athlete has exactly 2 gold medals
    has_two_golds = (gold_counts == 2).any()
    
    return has_two_golds",bool,True,False
Does the athlete with the highest weight also participate in the sport with the most athletes?,Is the sport with the maximum number of participants also the sport of the athlete who has the highest weight?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Get the sport with maximum number of participants
    sport_participants = dataset['Sport'].value_counts()
    max_participant_sport = sport_participants.idxmax()
    
    # Get the sport of the athlete with highest weight
    max_weight_athlete = dataset.loc[dataset['Weight'] == dataset['Weight'].max()]
    max_weight_sport = max_weight_athlete['Sport'].iloc[0]
    
    # Compare the two sports
    result = (max_participant_sport == max_weight_sport)
    
    return result",bool,False,False
Does the athlete with the highest height also have a medal?,Is there a medal awarded to the tallest athlete in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    tallest_athlete = dataset.loc[dataset[""Height""] == dataset[""Height""].max()]
    has_medal = not tallest_athlete[""Medal""].isna().any()
    
    return has_medal",bool,False,False
How many unique teams are there in the dataset?,What is the count of distinct teams present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_teams_count = dataset[""Team""].nunique()
    return distinct_teams_count",int64,1184,230
What's the average age of athletes in the dataset?,Calculate the mean age of all athletes in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_age = dataset[""Age""].mean()
    return mean_age
",float64,25.556898000000000,25.556898000000000
What's the maximum weight of athletes in the dataset?,What is the highest value in the Weight column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_weight = dataset[""Weight""].max()
    return max_weight",float64,214.0,214.0
How many athletes participated in the year with the most participants?,What is the count of athletes in the year that has the highest number of participants?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    year_counts = dataset['Year'].value_counts()
    max_year = year_counts.idxmax()
    count = year_counts[max_year]
    
    return count
",int64,16413,2536
Who is the athlete with the highest weight?,What is the name of the athlete who has the maximum weight value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_weight_athlete = dataset.loc[dataset[""Weight""] == dataset[""Weight""].max()]
    name = max_weight_athlete[""Name""].iloc[0]
    
    return name
",string,"Ricardo Blas, Jr.",Ricardo Blas Jr.
In which city did the athlete with the highest height participate?,What is the city where the tallest athlete competed?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    tallest_athlete = dataset.loc[dataset[""Height""] == dataset[""Height""].max()]
    city = tallest_athlete[""City""].iloc[0]
    
    return city",string,Sydney,London
What's the name of the athlete who participated in the most number of games?,Which athlete's name appears the most times in the Games column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    athlete_counts = dataset.groupby('Name')['Games'].count()
    most_frequent_athlete = athlete_counts.idxmax()
    
    return most_frequent_athlete",string,Robert Tait McKenzie,Robert Tait McKenzie
What's the sport of the athlete with the most medals?,Which sport does the athlete with the highest number of medals belong to?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Group by athlete and count medals, then find the athlete with max medals
    medal_counts = dataset.groupby(['Name', 'Sport'])['Medal'].count().reset_index()
    max_medals_athlete = medal_counts.loc[medal_counts['Medal'].idxmax()]
    sport = max_medals_athlete['Sport']
    
    return sport",string,Swimming,Art Competitions
What are the top 5 most common team names in the dataset?,Retrieve the 5 team names that appear most frequently in the dataset.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    team_counts = dataset['Team'].value_counts().head(5)
    top_teams = team_counts.index.tolist()
    return top_teams",list of string,"['United States', 'France', 'Great Britain', 'Italy', 'Germany']","[United States, France, Great Britain, Italy, Germany]"
What are the names of the top 3 athletes with the highest weights?,Retrieve the names of the 3 athletes who have the highest weight values.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_athletes = dataset.sort_values(""Weight"", ascending=False).head(3)
    names = top_athletes[""Name""].tolist()
    return names",list of (string),"['Ricardo Blas, Jr.', 'Ricardo Blas, Jr.', 'Aytami Ruano Vega']","[Ricardo Blas Jr., Shinichi Shinohara, Emmanuel Yarborough]"
What are the 4 most common cities of participation?,Which four cities appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    city_counts = dataset['City'].value_counts()
    top_cities = city_counts.head(4).index.tolist()
    return top_cities",list of (string),"['London', 'Athina', 'Sydney', 'Atlanta']","[London, Athina, Sydney, Atlanta]"
What are the names of the top 2 athletes who participated in the most number of games?,Retrieve the names of the two athletes who have the highest count of games participated in.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    games_count = dataset.groupby('Name')['Games'].nunique().reset_index()
    games_count.columns = ['Name', 'GamesCount']
    top_two = games_count.nlargest(2, 'GamesCount')['Name'].tolist()
    
    return top_two
",list of string,"['Ian Millar', 'Afanasijs Kuzmins']","[Robert Tait McKenzie, Heikki Ilmari Savolainen]"
What are the top five most common ages of athletes?,Retrieve the five most frequently occurring age values among the athletes.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    age_counts = dataset['Age'].value_counts().head(5)
    most_frequent_ages = age_counts.index.tolist()
    return most_frequent_ages",list of (float64),"[23.0, 24.0, 22.0, 25.0, 21.0]","[23.0, 24.0, 22.0, 25.0, 21.0]"
What are the three highest weights of athletes?,Retrieve the top three highest weight values from the Weight column.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_weights = dataset[""Weight""].nlargest(3).tolist()
    return top_weights
",list of (float64),"[214.0, 214.0, 198.0]","[214.0, 198.0, 190.0]"
What are the 4 most common years of participation?,Which 4 years appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    year_counts = dataset['Year'].value_counts()
    top_4_years = year_counts.head(4).index.tolist()
    return top_4_years",list of (uint16),"[1992, 1988, 2000, 1996]","[1992, 1988, 2000, 1996]"
What are the three most common heights of athletes?,Retrieve the top three most frequently occurring height values among the athletes.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    height_counts = dataset['Height'].value_counts().head(3)
    top_heights = height_counts.index.tolist()
    return top_heights
",list of (float64),"[180.0, 170.0, 178.0]","[180.0, 170.0, 178.0]"
Does the dataset contain customers who are under the age of 18?,Are there any customers in the dataset with customer_age less than 18?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_underage_customers = (dataset['customer_age'] < 18).any()
    return has_underage_customers",bool,False,False
Are there any customers with a total transaction amount of zero?,Does any customer have a total transaction amount equal to zero?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_zero_transaction = (dataset[""total_trans_amt""] == 0).any()
    return has_zero_transaction
",bool,False,False
"Does the dataset include customers with a credit limit exceeding $50,000?",Are there any customers in the dataset who have a credit limit greater than 50000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_credit = (dataset[""credit_limit""] > 50000).any()
    return has_high_credit
",bool,False,False
Are there any customers in the dataset who are inactive for more than 12 months?,Does the dataset contain any customers with months_inactive_12_mon greater than 12?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_inactive_customers = (dataset[""months_inactive_12_mon""] > 12).any()
    return has_inactive_customers",bool,False,False
What is the highest credit limit in the dataset?,What is the maximum value in the credit_limit column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_credit_limit = dataset[""credit_limit""].max()
    return max_credit_limit
",float64,34516.0,34516.0
What is the maximum total transaction amount recorded?,What is the highest value in the total_trans_amt column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_trans_amt = dataset[""total_trans_amt""].max()
    return max_trans_amt
",uint16,18484,18484
What is the largest total revolving balance in the dataset?,What is the maximum value in the total_revolving_bal column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_revolving_bal = dataset[""total_revolving_bal""].max()
    return max_revolving_bal
",uint16,2517,2517
What is the highest customer age in the dataset?,What is the maximum value in the customer age column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_age = dataset[""customer_age""].max()
    return max_age
",uint8,73,73
What is the most common level of education among the customers?,Which education level appears most frequently in the customer data?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    education_counts = dataset[""education_level""].value_counts()
    most_frequent_education = education_counts.idxmax()
    
    return most_frequent_education",string,Graduate,Graduate
What is the most common income category of the customers?,Which income category appears most frequently among the customers?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    income_category_counts = dataset[""income_category""].value_counts()
    most_frequent_category = income_category_counts.idxmax()
    
    return most_frequent_category",string,Less than $40K,Less than $40K
Which gender is most represented among the customers?,What is the gender category that appears most frequently among the customers?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    gender_counts = dataset[""gender""].value_counts()
    most_frequent_gender = gender_counts.idxmax()
    
    return most_frequent_gender",string,F,F
What is the most common attrition flag value?,What is the mode value of the attrition flag column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mode_value = dataset[""attrition_flag""].mode().iloc[0]
    return mode_value
",uint8,0,0
What are the top 3 most common education levels among the customers?,Which three education levels appear most frequently in the customer data?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    education_counts = dataset['education_level'].value_counts()
    top_three_education = education_counts.head(3).index.tolist()
    return top_three_education",list of (string),"['Graduate', 'High School', 'Unknown']","['Graduate', 'High School', 'Unknown']"
Which are 4 most frequent income categories?,What are the top 4 income categories that appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    income_category_counts = dataset['income_category'].value_counts().head(4)
    top_income_categories = income_category_counts.index.tolist()
    
    return top_income_categories",list of (string),"['Less than $40K', '$40K - $60K', '$80K - $120K', '$60K - $80K']","['Less than $40K', '$40K - $60K', '$80K - $120K', '$60K - $80K']"
Which are the top 3 most frequent income categories?,What are the three most common values in the income category column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    income_counts = dataset['income_category'].value_counts().head(3)
    top_three_income = income_counts.index.tolist()
    return top_three_income",list of (string),"['Less than $40K', '$40K - $60K', '$80K - $120K']","['Less than $40K', '$40K - $60K', '$80K - $120K']"
Which are the two most frequent income categories?,What are the top two income categories that appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    income_counts = dataset['income_category'].value_counts()
    top_two_income = income_counts.head(2).index.tolist()
    return top_two_income
",list of (string),"['Less than $40K', '$40K - $60K']","['Less than $40K', '$40K - $60K']"
How old are the 5 oldest customers in the dataset?,What are the ages of the top 5 customers with the highest customer_age values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_ages = dataset.nlargest(5, 'customer_age')['customer_age'].tolist()
    return top_ages
",list of (uint8),"[73, 70, 68, 67, 67]","[73, 70, 68, 67, 67]"
What are the five customer IDs with the highest credit limit?,Retrieve the IDs of the top 5 customers who have the highest credit limit.,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_customers = dataset.nlargest(5, 'credit_limit')
    ids = top_customers['id'].tolist()
    return ids
",list of (uint16),"[6142, 8479, 1571, 6788, 2933]","[34516.0, 34516.0, 34516.0, 34516.0, 34516.0]"
Who are the 6 customers with the highest total transaction amount?,What are the names of the top 6 customers when sorted by total transaction amount in descending order?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_customers = dataset.sort_values(""total_trans_amt"", ascending=False).head(6)
    customer_names = top_customers[""id""].astype(str).tolist()
    return customer_names",list of string,"['9667', '6883', '5578', '4026', '5500', '1160']","[18484, 17744, 17634, 17498, 17437, 17350]"
Who are the six customer ids with the highest total revolving balance?,What are the customer ids of the top 6 customers with the highest total revolving balance?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_customers = dataset.nlargest(6, 'total_revolving_bal')
    customer_ids = top_customers['id'].tolist()
    return customer_ids
",list of (uint16),"[4257, 5256, 9909, 1714, 2471, 5437]","[2517, 2517, 2517, 2517, 2517, 2517]"
"Are there any job positions available in 'New York, NY'?","Does the dataset contain any job listings where the location is 'New York, NY'?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_new_york_jobs = (dataset['Location'] == 'New York, NY').any()
    return has_new_york_jobs",bool,True,True
Are there any job listings from companies founded before 1900?,Does the dataset contain any job postings from companies with a founded year earlier than 1900?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_old_companies = (dataset[""Founded""] < 1900).any()
    return has_old_companies",bool,True,True
Are there any job listings that require Python skills?,Does the dataset contain any job listings where the python_yn attribute is set to 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_python_jobs = (dataset['python_yn'] == 1).any()
    return has_python_jobs
",bool,True,True
Is there a job listing for a 'Data Engineer' role?,Does the dataset contain any job listings where the job title is 'Data Engineer'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_data_engineer = (dataset['Job Title'] == 'Data Engineer').any()
    return has_data_engineer
",bool,True,True
How many unique job titles are listed?,What is the count of distinct job titles present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_job_titles_count = dataset[""Job Title""].nunique()
    return distinct_job_titles_count
",int64,264,264
"On average, how old are the companies that have job listings?",What is the average age of companies that have job postings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_age = dataset['age'].mean()
    return average_age
",float64,46.591644000000000,46.591644000000000
What's the highest rating a company has received?,What is the maximum value in the Rating column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_rating = dataset[""Rating""].max()
    return max_rating
",float64,5.0,5.0
How many job listings are there from 'Government' type of ownership?,What is the count of job listings where the type of ownership is 'Government'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    gov_jobs_count = dataset[dataset['Type of ownership'] == 'Government'].shape[0]
    return gov_jobs_count
",int64,15,15
Which job title has the highest average salary?,What is the job title with the greatest mean avg_salary?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    job_salary_mean = dataset.groupby('Job Title')['avg_salary'].mean()
    highest_salary_job = job_salary_mean.idxmax()
    
    return highest_salary_job
",string,"Director II, Data Science - GRM Actuarial","Director II, Data Science - GRM Actuarial"
Which state has the most number of job listings?,What is the job_state value that appears most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_state = dataset[""job_state""].mode()[0]
    return most_frequent_state",string, CA, CA
From which sector is the job listing with the highest salary?,What is the sector of the job listing that has the highest max_salary?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_salary_job = dataset.loc[dataset[""max_salary""] == dataset[""max_salary""].max()]
    sector = max_salary_job[""Sector""].values[0]
    
    return sector",string,Insurance,Insurance
Which company size has the most job listings?,What is the company size category with the highest number of job listings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    size_counts = dataset[""Size""].value_counts()
    most_common_size = size_counts.idxmax()
    
    return most_common_size",string,1001 to 5000 employees,1001 to 5000 employees
Which are the top 3 sectors with the most job listings?,What are the 3 sectors that have the highest number of job listings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sector_counts = dataset['Sector'].value_counts().head(3)
    top_sectors = sector_counts.index.tolist()
    return top_sectors",list of (string),"['Information Technology', 'Biotech & Pharmaceuticals', 'Business Services']","['Information Technology', 'Biotech & Pharmaceuticals', 'Business Services']"
List the 4 most common industries in the dataset.,What are the top 4 industries that appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_industries = dataset['Industry'].value_counts().head(4).index.tolist()
    return top_industries",list of (string),"['Biotech & Pharmaceuticals', 'Insurance Carriers', 'Computer Hardware & Software', 'IT Services']","['Biotech & Pharmaceuticals', 'Insurance Carriers', 'Computer Hardware & Software', 'IT Services']"
Which 5 states have the most number of job listings?,What are the top 5 states with the highest count of job listings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    state_counts = dataset['job_state'].value_counts().head(5)
    top_states = state_counts.index.tolist()
    return top_states",list of (string),"[' CA', ' MA', ' NY', ' VA', ' IL']","[' CA', ' MA', ' NY', ' VA', ' IL']"
List the 3 company sizes with the least number of job listings.,What are the 3 least common company sizes based on the count of job listings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    size_counts = dataset['Size'].value_counts().nsmallest(3)
    least_common_sizes = size_counts.index.tolist()
    return least_common_sizes",list of (string),"['-1', 'Unknown', '1 to 50 employees']","['-1', '1 to 50 employees', 'Unknown']"
What are the top 4 average salaries for job titles in the dataset?,What are the four highest average salaries for different job titles in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_salaries = dataset.groupby('Job Title')['avg_salary'].max().nlargest(4).tolist()
    return top_salaries",list of (float64),"[254.0, 237.5, 232.5, 225.0]","[254.0, 232.5, 225.0, 205.0]"
List the year the 3 oldest companies that have job listings were founded.,What are the founding years of the 3 companies with job listings that have the highest age values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_oldest = dataset.nlargest(3, 'age')
    founding_years = top_3_oldest['Founded'].tolist()
    return founding_years",list of (int16),"[1744, 1781, 1781]","[1744, 1781, 1781]"
Which are the highest 3 ratings given?,What are the top 3 values in the Rating column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_ratings = dataset.nlargest(3, 'Rating')['Rating'].tolist()
    return top_ratings
",list of (float64),"[5.0, 5.0, 5.0]","[5.0, 5.0, 5.0]"
List the average salaries of the 6 most recent companies.,What are the average salaries for the 6 companies with the most recent founding dates?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    # Sort the dataset by 'Founded' in descending order to get most recent companies
    recent_companies = dataset.sort_values('Founded', ascending=False).head(6)
    # Get the average salaries for these companies
    avg_salaries = recent_companies['avg_salary'].tolist()
    
    return avg_salaries
",list of (float64),"[88.5, 78.0, 124.5, 225.0, 110.0, 20.5]","[78.0, 88.5, 110.0, 40.5, 132.5, 20.5]"
Are there any authors in the dataset who have more followers than people they are following?,,,,ERROR,True
Is there any tweet in the dataset that has more replies<gx:number> than retweets<gx:number>?,,,,ERROR,True
Are there any verified users who have tweeted in a language other than English?,,,,ERROR,True
Does the dataset contain any tweets that include image links?,,,,ERROR,True
How many unique authors are present in the dataset?,What is the count of distinct author_id values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_author_count = dataset[""author_id<gx:category>""].nunique()
    return distinct_author_count
",int64,1,1
What is the highest number of retweets<gx:number> a single tweet has received?,,,,ERROR,117386
What is the average number of favorites per tweet?,,,,ERROR,5081.805590000000
What's the total number of tweets from verified users?,,,,ERROR,3220
Which author has the most tweets in the dataset?,,,,ERROR,3131144855
Which language is most commonly used in the tweets?,What is the most frequently occurring language in the tweets?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_lang = dataset[""lang<gx:category>""].mode()[0]
    return most_frequent_lang",string,en,en
What is the most common source of tweets?,,,,ERROR,"<a href=""http://twitter.com/download/iphone"" rel=""nofollow"">Twitter for iPhone</a>"
"Which type of tweet (e.g., original, retweet, quote) is most common in the dataset?",What is the most frequently occurring value in the type column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_type = dataset[""type<gx:category>""].mode()[0]
    return most_frequent_type",string,original,original
Who are the top three authors (by ID) with the most followers?,,,,ERROR,"[3131144855, 3131144855, 3131144855]"
What are the top five most frequently mentioned names in the tweets?,,,,ERROR,"['G7', 'foreignoffice', 'UN', 'Conservatives', 'COP26']"
List the top four most commonly used languages in the tweets.,,,,ERROR,"['en', 'und', 'fr', 'es']"
What are the highest three numbers of followers count present in the dataset?,,,,ERROR,"[3543402, 3543402, 3543402]"
What are the bottom four numbers of favorites count?,,,,ERROR,"[7, 7, 8, 9]"
List the top six numbers of retweets.,,,,ERROR,"[117386, 53527, 35698, 31449, 24824, 19982]"
What are the bottom five numbers of replies?,,,,ERROR,"[2, 2, 3, 3, 4]"
