Question,Rewritten Question,Code,Answer Type,Generated Answer,Expected Answer
Is the person with the highest net worth self-made?,Does the person with the maximum final worth have the selfMade attribute set to True?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_worth_individual = dataset.loc[dataset[""finalWorth""].idxmax()]
    is_self_made = max_worth_individual[""selfMade""]

    return is_self_made",bool,True,True
Does the youngest billionaire identify as male?,,,,ERROR,True
Is the city with the most billionaires in the United States?,What is the city in the United States with the highest number of billionaires?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    us_cities = dataset[dataset['country'] == 'United States']
    city_counts = us_cities['city'].value_counts()
    max_city = city_counts.idxmax()
    
    return max_city",string,New York,True
Is there a non-self-made billionaire in the top 5 ranks?,Are there any billionaires in the top 5 ranks where the selfMade attribute is False?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_ranks = dataset.loc[dataset[""rank""] <= 5]
    billionaires = top_5_ranks.loc[top_5_ranks[""finalWorth""] >= 1000000000]
    not_self_made = billionaires.loc[billionaires[""selfMade""] == False]

    return not not_self_made.empty",bool,False,True
Does the oldest billionaire have a philanthropy score of 5?,Is the philanthropy score of the oldest billionaire equal to 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
oldest_billionaire = dataset.loc[dataset[""age""] == dataset[""age""].max()]
philanthropy_score = oldest_billionaire[""philanthropyScore""].values[0]
return philanthropy_score == 5",bool,False,False
What is the age of the youngest billionaire?,What is the minimum age of the billionaires in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_age = dataset[""age""].min()
    return min_age",float64,19.0,19.0
How many billionaires are there from the 'Technology' category?,What is the total count of billionaires in the 'Technology' category?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    tech_billionaires = dataset[dataset['category'] == 'Technology']
    total_count = len(tech_billionaires)

    return total_count",int64,343,343
What's the total worth of billionaires in the 'Automotive' category?,What is the sum of the final worth of billionaires who are classified under the 'Automotive' category?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    automotive_billionaires = dataset[dataset[""category""] == ""Automotive""]
    sum_final_worth = automotive_billionaires[""finalWorth""].sum()

    return sum_final_worth",int64,583600,583600
How many billionaires have a philanthropy score above 3?,What is the count of billionaires with a philanthropy score greater than 3?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    billionaires_with_high_philanthropy = dataset[(dataset[""philanthropyScore""] > 3)]
    count = len(billionaires_with_high_philanthropy)

    return count",int64,25,25
What's the rank of the wealthiest non-self-made billionaire?,What is the rank of the billionaire with the highest final worth who is not self-made?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    not_self_made_individuals = dataset[dataset[""selfMade""] == False]
    max_worth_individual = not_self_made_individuals.loc[not_self_made_individuals[""finalWorth""].idxmax()]
    rank = max_worth_individual[""rank""]
    
    return rank",uint16,3,3
Which category does the richest billionaire belong to?,What is the category of the billionaire with the highest final worth?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_worth_individual = dataset.loc[dataset[""finalWorth""].idxmax()]
    category = max_worth_individual[""category""]

    return category",category,Automotive,Automotive
What's the country of origin of the oldest billionaire?,What is the country of the billionaire with the maximum age?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_age_individual = dataset.loc[dataset[""age""] == dataset[""age""].max()]
    country = max_age_individual[""country""].iloc[0]

    return country",category,United States,United States
What's the gender of the billionaire with the highest philanthropy score?,What is the gender of the billionaire who has the maximum philanthropy score?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_philanthropy_individual = dataset.loc[dataset[""philanthropyScore""] == dataset[""philanthropyScore""].max()]
    gender = max_philanthropy_individual[""gender""].iloc[0]

    return gender",category,M,M
What's the source of wealth for the youngest billionaire?,What is the source of wealth for the billionaire with the minimum age?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_age_individual = dataset.loc[dataset[""age""] == dataset[""age""].min()]
source_of_wealth = min_age_individual[""source""].iloc[0]

return source_of_wealth",category,drugstores,drugstores
What is the title of the billionaire with the lowest rank?,What is the title of the billionaire who has the minimum rank?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_rank_individual = dataset.loc[dataset[""rank""] == dataset[""rank""].min()]
    title = min_rank_individual[""title""].iloc[0]

    return title",category,CEO,
List the top 3 countries with the most billionaires.,What are the names of the top 3 countries that have the highest number of billionaires in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    country_counts = dataset['country'].value_counts()
    top_3_countries = country_counts.nlargest(3).index.tolist()
    
    return top_3_countries",list of (string),"['United States', 'China', 'India']","['United States', 'China', 'India']"
List the top 2 most common sources of wealth for billionaires.,What are the two most frequently occurring sources of wealth among billionaires in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    source_counts = dataset['source'].value_counts()
    top_two_sources = source_counts.nlargest(2).index.tolist()
    
    return top_two_sources",list of (string),"['real estate', 'investments']","['real estate', 'investments']"
List the 4 cities where the four youngest billionaires live.,What are the names of the cities where the four billionaires with the lowest age reside?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    youngest_four = dataset.nsmallest(4, 'age')
    city_names = youngest_four['city'].tolist()
    
    return city_names",list of (string),"[nan, 'Los Angeles', 'Jiaozuo', 'Oslo']","['', 'Los Angeles', 'Jiaozuo', 'Oslo']"
List the 4 categories with the fewest billionaires.,What are the four categories that have the smallest number of billionaires based on the category column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    category_counts = dataset['category'].value_counts()
    smallest_categories = category_counts.nsmallest(4).index.tolist()
    
    return smallest_categories",list of (string),"['Gambling & Casinos', 'Sports', 'Logistics', 'Telecom']","['Telecom', 'Logistics', 'Sports', 'Gambling & Casinos']"
List the 2 countries with the least number of billionaires. If there are more than two with the same number take the first two alphabetically.,"What are the first two countries in alphabetical order that have the lowest number of billionaires, in the event of a tie in the number of billionaires?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    country_counts = dataset['country'].value_counts()
    min_count = country_counts.min()
    countries_with_min_count = country_counts[country_counts == min_count].index.tolist()
    countries_with_min_count.sort()
    return countries_with_min_count[:2]",list of (string),"['Algeria', 'Andorra']","['Algeria', 'Andorra']"
List the top 5 ranks of billionaires who are not self-made.,What are the ranks of the top 5 billionaires who have the selfMade attribute set to False?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    not_self_made_individuals = dataset[dataset[""selfMade""] == False]
    top_5_billionaires = not_self_made_individuals.nlargest(5, ""finalWorth"")
    ranks = top_5_billionaires[""rank""].tolist()
    
    return ranks",list of (uint16),"[3, 10, 14, 16, 18]","[3, 10, 14, 16, 18]"
List the youngest 3 ages of billionaires who have a philanthropy score of 5.,What are the three smallest age values of billionaires with a philanthropy score of exactly 5 in the Forbes dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    billionaires_with_philanthropy_score_5 = dataset[dataset[""philanthropyScore""] == 5]
    smallest_three_ages = billionaires_with_philanthropy_score_5[""age""].nsmallest(3).tolist()
    
    return smallest_three_ages",list of (float64),"[48.0, 83.0, 83.0]","[48.0, 83.0, 83.0]"
List the highest 6 final worth values of billionaires in the 'Technology' category.,What are the top 6 highest final worth values of billionaires who are categorized as 'Technology' in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    technology_billionaires = dataset[dataset['category'] == 'Technology']
    top_6_highest_worth = technology_billionaires.nlargest(6, 'finalWorth')['finalWorth'].tolist()
    
    return top_6_highest_worth",list of (uint32),"[171000, 129000, 111000, 107000, 106000, 91400]","[171000, 129000, 111000, 107000, 106000, 91400]"
List the top 4 ranks of female billionaires.,What are the ranks of the top 4 female billionaires in the Forbes list?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_female_billionaires = dataset[dataset['gender'] == 'Female'].sort_values(by='finalWorth', ascending=False).head(4)
    ranks = top_female_billionaires['rank'].tolist()
    
    return ranks",list of (int64),[],"[14, 18, 21, 30]"
List the top 2 final worth values of billionaires in the 'Automotive' category.,What are the two highest final worth values of billionaires who are categorized as 'Automotive'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    automotive_billionaires = dataset[dataset['category'] == 'Automotive']
    top_two_worth = automotive_billionaires['finalWorth'].nlargest(2).tolist()
    
    return top_two_worth",list of (uint32),"[219000, 44800]","[219000, 44800]"
Did any children below the age of 18 survive?,Were there any passengers under the age of 18 for whom the survived attribute is True?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    minors = dataset[dataset[""Age""] < 18]
    survived_minors = minors[minors[""Survived""] == True]
    
    return not survived_minors.empty",bool,True,True
Were there any passengers who paid a fare of more than $500?,Does the dataset contain any passengers with a fare greater than 500?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    passengers_with_high_fare = dataset[dataset[""Fare""] > 500]
    return not passengers_with_high_fare.empty",bool,True,True
Is every passenger's name unique?,Does the count of unique names in the Name column equal the total number of rows in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_names_count = dataset[""Name""].nunique()
    total_rows_count = dataset.shape[0]
    is_equal = unique_names_count == total_rows_count

    return is_equal",bool,True,True
Were there any female passengers in the 3rd class who survived?,"Does the dataset contain any records where the sex is female, the passenger class is 3 and the survived attribute is True?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    female_passengers = dataset[(dataset[""Sex""] == ""female"") & (dataset[""Pclass""] == 3) & (dataset[""Survived""] == True)]
    return not female_passengers.empty",bool,True,True
How many unique passenger classes are present in the dataset?,What is the number of distinct values in the Pclass column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_pclass_values = dataset[""Pclass""].nunique()
    return distinct_pclass_values",int64,3,3
What's the maximum age of the passengers?,What is the highest age value among all the passengers?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_age = dataset[""Age""].max()
    return max_age",float64,80.0,80.0
How many passengers boarded without any siblings or spouses?,What is the number of passengers who have zero siblings or spouses aboard?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    zero_siblings_spouses = dataset[dataset[""Siblings_Spouses Aboard""] == 0]
    num_passengers = len(zero_siblings_spouses)

    return num_passengers",int64,604,604
"On average, how much fare did the passengers pay?",What is the mean fare paid by all the passengers?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_fare = dataset[""Fare""].mean()
    return mean_fare",float64,32.30542000000000,32.31
Which passenger class has the highest number of survivors?,What is the passenger class with the maximum count of survivors?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    survivors = dataset[dataset[""Survived""] == True]
    max_survivor_class = survivors[""Pclass""].value_counts().idxmax()
    
    return max_survivor_class",int64,1,1
What's the most common gender among the survivors?,Which gender appears most frequently among the passengers where the survived attribute is True?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
survived_passengers = dataset[dataset[""Survived""] == True]
most_frequent_gender = survived_passengers[""Sex""].mode().iloc[0]

return most_frequent_gender",string,female,female
"Among those who survived, which fare range was the most common: (0-50, 50-100, 100-150, 150+)?","What is the most common fare range among survivors, categorized as 0-50, 50-100, 100-150, or 150 and above?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    survivors = dataset[dataset[""Survived""] == True]
    fare_ranges = pd.cut(survivors[""Fare""], bins=[0, 50, 100, 150, float(""inf"")], labels=[""0-50"", ""50-100"", ""100-150"", ""150 and above""])
    most_common_fare_range = fare_ranges.value_counts().index[0]
    
    return most_common_fare_range",string,0.0-50,0.0-50
"What's the most common age range among passengers: (0-18, 18-30, 30-50, 50+)?","Which age group, either 0-18, 18-30, 30-50, or 50 and above, is most frequently occurring among the passengers based on their age?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    bins = [0, 18, 30, 50, float('inf')]
    labels = ['0-18', '18-30', '30-50', '50 and above']
    dataset['Age Group'] = pd.cut(dataset['Age'], bins=bins, labels=labels, right=False)
    most_frequent_age_group = dataset['Age Group'].mode().values[0]
    
    return most_frequent_age_group",string,18.0-30,18.0-30
Name the top 3 passenger classes by survival rate.,What are the top three passenger classes with the highest survival rates based on the Pclass column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    survival_rates = dataset.groupby(""Pclass"")[""Survived""].mean().reset_index()
    survival_rates = survival_rates.sort_values(by=""Survived"", ascending=False)
    top_three_classes = survival_rates.head(3)
    top_three_classes = top_three_classes[""Pclass""].astype(str).tolist()
    
    return top_three_classes",list of (string),"['1', '2', '3']","[1, 2, 3]"
"Could you list the 3 fare ranges present in the dataset with the least survivors: (0-50, 50-100, 100-150, 150+)?","What are the three fare categories with the lowest number of survivors, given the categories are 0-50, 50-100, 100-150, and 150 or more?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    bins = [0, 50, 100, 150, float('inf')]
    labels = ['0-50', '50-100', '100-150', '150 or more']
    dataset['Fare Category'] = pd.cut(dataset['Fare'], bins=bins, labels=labels)
    fare_categories = dataset.groupby('Fare Category')['Survived'].sum().reset_index()
    fare_categories = fare_categories.sort_values(by='Survived').head(3)
    lowest_fare_categories = fare_categories['Fare Category'].tolist()
    return lowest_fare_categories",list of (string),"['100-150', '150 or more', '50-100']","['50-100', '150+', '100-150']"
"What are the top 4 age ranges ('30-50', '18-30', '0-18', '50+') with the highest number of survivors?","List the top 4 age groups with the most survivors from the given age categories '30-50', '18-30', '0-18', '50+'?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    age_groups = ['30-50', '18-30', '0-18', '50+']
    dataset = dataset[dataset['Age Group'].isin(age_groups)]
    survivors = dataset[dataset['Survived'] == True]
    age_group_counts = survivors['Age Group'].value_counts()
    top_4_age_groups = age_group_counts.nlargest(4).index.tolist()
    
    return top_4_age_groups",list of (string),"['30-50', '18-30', '0-18', '50 and above']","['30-50', '18-30', '0-18', '50+']"
What are the top 2 genders by average fare paid?,Which two genders have the highest average fare paid when ranked in descending order by average fare?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_fare_by_gender = dataset.groupby(""Sex"")[""Fare""].mean().reset_index()
    average_fare_by_gender = average_fare_by_gender.sort_values(by=""Fare"", ascending=False)
    top_two_genders = average_fare_by_gender.head(2)[""Sex""].tolist()
    
    return top_two_genders",list of (string),"['female', 'male']","['female', 'male']"
What are the oldest 3 ages among the survivors?,What are the top 3 highest ages of the passengers who survived the Titanic?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    survived_passengers = dataset[dataset[""Survived""] == True]
    top_3_highest_ages = survived_passengers[""Age""].sort_values(ascending=False).head(3).tolist()
    
    return top_3_highest_ages",list of (float64),"[80.0, 63.0, 63.0]","[80, 63, 63]"
Which are the top 4 fares paid by survivors?,What are the four highest fares paid by passengers who survived the Titanic?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
survived_passengers = dataset[dataset[""Survived""] == True]
survived_passengers_fares = survived_passengers[""Fare""]
highest_fares = survived_passengers_fares.nlargest(4).tolist()

return highest_fares",list of (float64),"[512.3292, 512.3292, 512.3292, 263.0]","[512.329, 512.329, 512.329, 263]"
Could you list the youngest 3 ages among the survivors?,What are the three smallest age values among the passengers where the survived attribute is True?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    survived_passengers = dataset[dataset[""Survived""] == True]
    smallest_ages = survived_passengers[""Age""].nsmallest(3).tolist()
    
    return smallest_ages",list of (float64),"[1.0, 1.0, 1.0]","[1, 1, 1]"
Which are the lowest 4 fares among those who didn't survive?,What are the four smallest fare values for passengers where the survived attribute is False?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    not_survived_passengers = dataset[dataset[""Survived""] == False]
    smallest_fare_values = not_survived_passengers[""Fare""].nsmallest(4).tolist()
    
    return smallest_fare_values",list of (float64),"[0.0, 0.0, 0.0, 0.0]","[0, 0, 0, 0]"
Is the average age of the respondents above 30?,Is the mean value of the age of respondents greater than 30?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_age = dataset[""What is your age? 👶🏻👵🏻""].mean()
    return mean_age > 30",bool,True,True
Are there more single individuals than married ones in the dataset?,Does the count of individuals with civil status as single exceed the count of individuals with civil status as married in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
single_count = len(dataset[dataset[""What is your civil status? 💍""] == ""Single""])
married_count = len(dataset[dataset[""What is your civil status? 💍""] == ""Married""])
return single_count > married_count",bool,True,True
Do the majority of respondents have a height greater than 170 cm?,Is it true that more than half of the respondents have a height greater than 170 cm?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
tall_respondents = dataset[dataset[""What's your height? in cm 📏""] > 170].shape[0]
total_respondents = dataset.shape[0]
more_than_half_tall = tall_respondents > total_respondents / 2

return more_than_half_tall",bool,True,True
Is the most frequent hair color black?,Is black the most common hair color in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
hair_color_counts = dataset[""What is your hair color? 👩🦰👱🏽""].value_counts()
is_black_most_common = hair_color_counts.index[0] == 'black'

return is_black_most_common",bool,False,False
How many unique nationalities are present in the dataset?,What is the number of distinct nationalities present in the What's your nationality column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_nationalities = dataset[""What's your nationality?""].nunique()
    return distinct_nationalities",int64,13,13
What is the average gross annual salary?,What is the mean value of the gross annual salary in euros?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_gross_annual_salary = dataset[""Gross annual salary (in euros) 💸""].mean()
    return mean_gross_annual_salary",float64,56332.81720400000,56332.81720400000
How many respondents wear glasses all the time?,,,,ERROR,98
What's the median age of the respondents?,What is the middle value of the ages of the respondents when they are arranged in ascending order?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
ages = dataset[""What is your age? 👶🏻👵🏻""].sort_values().tolist()
middle_index = len(ages) // 2
if len(ages) % 2 == 0:
middle_value = (ages[middle_index - 1] + ages[middle_index]) / 2
else:
middle_value = ages[middle_index]
return middle_value",float64,33,33.0
What is the most common level of studies achieved?,What is the mode of the maximum level of studies achieved by the respondents?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mode_max_level_studies = dataset[""What is the maximum level of studies you have achieved? 🎓""].mode().iloc[0]
    return mode_max_level_studies",string,Master,Master
Which body complexity has the least number of respondents?,Which category of body complexity has the minimum count of respondents in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
body_complexity_counts = dataset[""What is your body complexity? 🏋️""].value_counts()
min_count_body_complexity = body_complexity_counts.idxmin()

return min_count_body_complexity",string,Very thin,Very thin
What's the most frequent eye color?,Which eye color appears most frequently in the dataset,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
most_frequent_eye_color = dataset[""What is your eye color? 👁️""].mode().iloc[0]
return most_frequent_eye_color",string,Brown,Brown
Which sexual orientation has the highest representation?,What is the most common sexual orientation in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
most_common_sexual_orientation = dataset[""What's your sexual orientation?""].mode().values[0]
return most_common_sexual_orientation",string,Heterosexual,Heterosexual
List the top 3 most common areas of knowledge.,,,,ERROR,"['Computer Science', 'Business', 'Enginering & Architecture']"
List the bottom 3 hair lengths in terms of frequency.,What are the three least frequent hair lengths in the How long is your hair category?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    hair_length_counts = dataset['How long is your hair? 💇🏻♀️💇🏽♂️'].value_counts()
    least_frequent_hair_lengths = hair_length_counts.nsmallest(3).index.tolist()
    return least_frequent_hair_lengths",list of (string),"['Bald', 'Long', 'Medium']","['Medium', 'Long', 'Bald']"
Name the top 5 civil statuses represented in the dataset.,"What are the top 5 most frequent civil statuses in the dataset, ordered by their frequency of occurrence?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    civil_status_counts = dataset[""What is your civil status? 💍""].value_counts()
    top_5_civil_statuses = civil_status_counts.nlargest(5).index.tolist()
    
    return top_5_civil_statuses",list of (string),"['Single', 'Married', 'In a Relationship', 'In a Relationship Cohabiting', 'Divorced']","['Single', 'Married', 'In a Relationship', 'In a Relationship Cohabiting', 'Divorced']"
What are the 4 least common hair colors?,What are the four least frequently occurring hair colors in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
hair_color_counts = dataset[""What is your hair color? 👩🦰👱🏽""].value_counts()
least_frequent_hair_colors = hair_color_counts.nsmallest(4).index.tolist()
return least_frequent_hair_colors",list of (string),"['Blue', 'White', 'Other', 'Red']","['Red', 'Other', 'White', 'Blue']"
What are the top 4 maximum gross annual salaries?,What are the four highest values in the Gross annual salary column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
salary_values = dataset[""Gross annual salary (in euros) 💸""].sort_values(ascending=False).head(4).tolist()
return salary_values",list of (float64),"[500000.0, 360000.0, 300000.0, 300000.0]","[500000.0, 360000.0, 300000.0, 300000.0]"
Name the 3 happiness values for the 3 unhappiest people in the happiness scale.,What are the three lowest happiness scale values in the dataset,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
happiness_scale_values = dataset[""Happiness scale""].sort_values(ascending=True).head(3).tolist()
return happiness_scale_values",list of (uint8),"[2, 2, 2]","[2, 2, 2]"
What are the 5 highest ages present in the dataset?,What are the top 5 highest values in the 'What is your age?' column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_ages = dataset['What is your age? 👶🏻👵🏻'].nlargest(5).tolist()
    return top_5_ages",list of (int64),"[65, 62, 60, 60, 59]","[65, 62, 60, 60, 59]"
List the bottom 6 skin tone values based on frequency.,"What are the six least frequent skin tone values in the dataset, ordered from least frequent to sixth least frequent?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
skin_tone_counts = dataset[""What is your skin tone?""].value_counts()
least_frequent_six = skin_tone_counts.nsmallest(6).index.tolist()
return least_frequent_six",list of (uint8),"[8, 7, 0, 6, 1, 2]","[2, 1, 6, 0, 7, 8]"
Are there any trips with a total distance greater than 30 miles?,Does the dataset contain any trips where the trip_distance is greater than 30 miles?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    return (dataset['trip_distance'] > 30).any()",bool,False,False
Were there any trips that cost more than $100 in total?,Does the total amount of any trip exceed 100 dollars?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_amount_exceeds_100 = dataset[""total_amount""].max() > 100
    return total_amount_exceeds_100",bool,False,False
Is there any trip with more than 6 passengers?,Does any trip have a passenger count greater than 6?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_passenger_count_greater_than_6 = (dataset[""passenger_count""] > 6).any()
    return has_passenger_count_greater_than_6",bool,False,False
Did all the trips use a payment type of either 1 or 2?,Is the payment type for every trip either 1 or 2?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    payment_types = dataset[""payment_type""].unique()
    is_valid_payment_type = all((payment_type == 1 or payment_type == 2) for payment_type in payment_types)

    return is_valid_payment_type",bool,False,False
What is the maximum fare amount charged for a trip?,What is the highest fare amount charged for any trip in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_fare_amount = dataset[""fare_amount""].max()
    return max_fare_amount",float64,75.25,75.25
How many unique pickup locations are in the dataset?,What is the number of distinct PULocationID values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_pulocationid_count = dataset[""PULocationID""].nunique()
    return distinct_pulocationid_count",int64,96,96
What is the average tip amount given by passengers?,What is the mean of the tip_amount given by all the passengers in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_tip_amount = dataset[""tip_amount""].mean()
    return mean_tip_amount",float64,2.7366810000000000,2.74
How many trips took place in the airport area?,What is the total number of trips that occurred in the airport area?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    airport_trips = dataset[(dataset[""store_and_fwd_flag""] == ""Y"") | (dataset[""airport_fee""] == ""Y"")]
    total_airport_trips = len(airport_trips)

    return total_airport_trips",int64,889,99807
Which payment type is the most common in the dataset?,What is the payment type that appears most frequently in the payment_type column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_payment_type = dataset[""payment_type""].mode().iloc[0]
    return most_frequent_payment_type",uint8,1,1
Which vendor has the most trips recorded?,What is the VendorID with the highest number of trips recorded in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    vendor_id_counts = dataset[""VendorID""].value_counts()
    max_trips_vendor_id = vendor_id_counts.idxmax()

    return max_trips_vendor_id",uint8,2,2
What is the most common drop-off location?,Which DOLocationID appears most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_dolocationid = dataset['DOLocationID'].mode().values[0]
    return str(most_frequent_dolocationid)",string,236,236
On which date did the first recorded trip occur?,What is the earliest tpep_pickup_datetime in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
earliest_pickup = dataset[""tpep_pickup_datetime""].min()
earliest_pickup_str = str(earliest_pickup)

return earliest_pickup_str",string,31-01-2023 23:52,31-01-2023
Which are the top 2 most frequent pickup locations?,What are the two most frequently occurring PULocationID values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    pulocation_counts = dataset[""PULocationID""].value_counts()
    most_frequent_pulocations = pulocation_counts.nlargest(2).index.tolist()
    
    return most_frequent_pulocations",list of (uint16),"[161, 237]","[161, 237]"
Name the 4 most common rate codes used.,What are the top 4 most frequently occurring RatecodeID values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    ratecode_counts = dataset[""RatecodeID""].value_counts()
    top_4_ratecodes = ratecode_counts.nlargest(4).index.tolist()
    
    return top_4_ratecodes",list of (uint8),"[1, 2, 5, 4]","[1, 2, 5, 4]"
list the 2 most frequent store and forward flags.,What are the two most common store and forward flags used in the taxi trips?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    store_and_fwd_flag_counts = dataset[""store_and_fwd_flag""].value_counts()
    two_most_common_flags = store_and_fwd_flag_counts.nlargest(2).index.tolist()
    
    return two_most_common_flags",list of (string),"['N', 'Y']","['N', 'Y']"
Identify the top 4 payment types used by frequency,"What are the top 4 most frequently occurring payment types in the dataset, based on the payment_type column?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
payment_type_counts = dataset[""payment_type""].value_counts()
top_4_payment_types = payment_type_counts.nlargest(4).index.tolist()

return top_4_payment_types",list of (uint8),"[1, 2, 4, 3]","[1, 2, 4, 3]"
Report the 4 highest toll amounts paid.,What are the top 4 highest toll amounts paid for taxi rides?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_4_tolls = dataset['tolls_amount'].nlargest(4).tolist()
    return top_4_tolls",list of (float64),"[0, 0, 0, 0]","[0, 0, 0, 0]"
list the top 3 longest trip distances,What are the top three largest trip_distance values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_three_largest_trip_distance = dataset['trip_distance'].nlargest(3).tolist()
    return top_three_largest_trip_distance",list of (float64),"[19.83, 19.74, 19.68]","[19.83, 19.74, 19.68]"
Identify the 5 largest total amounts paid for trips.,"What are the top 5 highest total amounts paid for trips in the dataset, based on the total_amount column?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_highest_total_amounts = dataset['total_amount'].nlargest(5).tolist()
    return top_5_highest_total_amounts",list of (float64),"[80.0, 80.0, 80.0, 80.0, 79.55]","[80.0, 80.0, 80.0, 80.0, 80.0]"
Report the 6 highest fare amounts charged.,What are the top 6 highest fare amounts charged for taxi rides?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_6_fare_amounts = dataset['fare_amount'].nlargest(6).tolist()
    return top_6_fare_amounts",list of (float64),"[75.25, 74.4, 73.0, 73.0, 73.0, 73.0]","[75.25, 74.4, 73.0, 73.0, 73.0, 73.0]"
Are there any complaints made in Brooklyn?,Is there at least one complaint where the borough is Brooklyn?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    brooklyn_complaints = dataset[dataset[""borough""] == ""Brooklyn""]
    return len(brooklyn_complaints) > 0",bool,False,True
Do any complaints have 'Dog' as a descriptor?,Are there any complaints where the descriptor is 'Dog'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_dog_complaint = dataset[""descriptor""].eq(""Dog"").any()
    return has_dog_complaint",bool,True,True
Were there any complaints raised in April?,Is there at least one complaint in the dataset where the month_name is April?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    april_complaints = dataset[dataset[""month_name""] == ""April""]
    return not april_complaints.empty",bool,True,True
Is the Mayor's office of special enforcement one of the agencies handling complaints?,Does the list of agencies handling complaints include the Mayor's office of special enforcement?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
agencies = dataset[""agency_name""].unique()
includes_mayor_office = ""Mayor's Office of Special Enforcement"" in agencies

return includes_mayor_office",bool,False,True
How many complaints have been made in Queens?,What is the total number of complaints made in the borough of Queens?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_complaints_queens = len(dataset[dataset[""borough""] == ""Queens""])
    return total_complaints_queens",int64,0,23110
What's the total number of unique agencies handling complaints?,How many distinct agencies are there that handle complaints in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_agencies = dataset[""agency""].nunique()
    return distinct_agencies",int64,22,22
How many complaints were raised at midnight?,What is the total count of complaints that were created at 12 AM!,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_count = dataset[dataset[""hour""] == 0].shape[0]
    return total_count",int64,14811,14811
How many unique descriptors are present in the dataset?,What is the number of distinct values in the descriptor column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
num_distinct_descriptor = dataset[""descriptor""].nunique()
return num_distinct_descriptor",int64,1131,1131
Which borough has the most complaints?,What is the borough with the highest number of complaints in the NYC dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
borough_counts = dataset[""borough""].value_counts()
max_count_borough = borough_counts.idxmax()

return max_count_borough",string,BROOKLYN,BROOKLYN
Which month sees the highest number of complaints?,What is the month_name that has the maximum number of complaints?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_complaints_month = dataset['month_name'].value_counts().idxmax()
return max_complaints_month",string,July,July
Which weekday has the least complaints?,What is the weekday name with the minimum number of complaints?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    weekday_counts = dataset[""weekday_name""].value_counts()
    min_weekday = weekday_counts.idxmin()

    return min_weekday",string,Sunday,Sunday
Which agency is least frequently handling complaints?,What is the agency name that appears least often in the agency_name column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
agency_name_counts = dataset[""agency_name""].value_counts()
least_common_agency_name = agency_name_counts.idxmin()

return least_common_agency_name",string,School - PS 207,ACS
List the top 5 most frequent complaint types.,What are the top 5 complaint types with the highest frequency in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
complaint_type_counts = dataset[""complaint_type""].value_counts()
top_5_complaint_types = complaint_type_counts.nlargest(5).index.tolist()
return top_5_complaint_types",list of (string),"['Noise - Residential', 'HEAT/HOT WATER', 'Illegal Parking', 'Blocked Driveway', 'Street Condition']","['Noise - Residential', 'HEAT/HOT WATER', 'Illegal Parking', 'Blocked Driveway', 'Street Condition']"
Which 4 agencies handle the most complaints?,What are the names of the top 4 agencies that have handled the most complaints in the given dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
agency_counts = dataset[""agency_name""].value_counts()
top_4_agencies = agency_counts.nlargest(4).index.tolist()
return top_4_agencies",list of (string),"['New York City Police Department', 'Department of Housing Preservation and Development', 'Department of Transportation', 'Department of Sanitation']","['NYPD', 'HPD', 'DOT', 'DSNY']"
Name the 2 least frequent descriptors for complaints by inverse alphabetical order.,What are the two least frequent complaint descriptors in descending alphabetical order?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
complaint_descriptor_counts = dataset[""descriptor""].value_counts()
least_frequent_descriptors = complaint_descriptor_counts.nsmallest(2)
least_frequent_descriptors = least_frequent_descriptors.index.tolist()
least_frequent_descriptors.sort(reverse=True)

return least_frequent_descriptors",list of (string),"['Telco Connection Blk', 'Summer Camp']","['Booting Company', 'Ready NY - Businesses', 'Animal']"
Mention the 2 most common weekdays for complaints.,What are the top two most frequent weekday names for complaints in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
weekday_counts = dataset[""weekday_name""].value_counts()
top_two_weekdays = weekday_counts.nlargest(2).index.tolist()
return top_two_weekdays",list of (string),"['Tuesday', 'Monday']","['Tuesday', 'Monday']"
What are the top 4 hours with the most complaints?,What are the four most frequent hour values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
hour_counts = dataset[""hour""].value_counts()
most_frequent_hours = hour_counts.nlargest(4).index.tolist()
return most_frequent_hours",list of (int64),"[0, 12, 10, 11]","[0, 12, 10, 11]"
State the 3 lowest unique complaint keys.,What are the three smallest unique complaint keys in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
unique_keys = dataset[""unique_key""].sort_values().head(3).astype(str).tolist()
return unique_keys",list of (string),"['15628852', '15634748', '15634996']","[15628852, 15634748, 15634996]"
Which 2 hours see the least complaints?,What are the two hours of the day with the lowest number of complaints?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    hour_counts = dataset['hour'].value_counts()
    lowest_hours = hour_counts.nsmallest(2).index.tolist()
    
    return lowest_hours",list of (int64),"[4, 5]","[6, 2]"
List the 6 highest complaint numbers from the dataset.,What are the top 6 complaint numbers with the highest frequency in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
complaint_counts = dataset['complaint_type'].value_counts()
top_6_complaints = complaint_counts.nlargest(6)
top_6_complaint_numbers = top_6_complaints.index.tolist()

return top_6_complaint_numbers",list of (int64),"['Noise - Residential', 'HEAT/HOT WATER', 'Illegal Parking', 'Blocked Driveway', 'Street Condition', 'Street Light Condition']","[54954250, 54954040, 54952675, 54950924, 54950765, 54950581]"
Are all properties in the dataset located in the same neighbourhood?,Is the neighbourhood the same for all properties in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    neighbourhoods = dataset[""neighbourhood_cleansed""].unique()
    is_same_neighbourhood = len(neighbourhoods) == 1

    return is_same_neighbourhood",bool,False,False
Do all hosts verify their identity?,Is the host_identity_verified attribute True for all hosts in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    host_identity_verified = dataset[""host_identity_verified""].unique()
    is_all_true = all(x == ""t"" for x in host_identity_verified)

    return is_all_true",bool,False,False
Are all reviews_per_month values greater than 5?,Is every value in the reviews_per_month column greater than 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    reviews_per_month_values = dataset[""reviews_per_month""]
    is_greater_than_5 = (reviews_per_month_values > 5).all()

    return is_greater_than_5",bool,False,False
Are there any listings without a specified room type?,Are there any listings where the room type is not specified or is null?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    null_or_not_specified = dataset[""room_type""].isnull().any() or (dataset[""room_type""] == ""not specified"").any()
    return null_or_not_specified",bool,False,False
How many unique neighbourhoods are there in the dataset?,What is the total count of distinct neighbourhoods present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_neighbourhoods = dataset[""neighbourhood_cleansed""].nunique()
    return total_neighbourhoods",int64,33,563
How many listings don't have a valid price?,What is the count of listings where the price is not a valid number?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    import numpy as np
    dataset['price'] = pd.to_numeric(dataset['price'], errors='coerce')
    count = dataset[dataset['price'].isnull()].shape[0]
    return count",int64,75241,0
How many properties have received the worst possible (0-5) review score for communication?,What is the count of properties that have received a review score of 0 for communication?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = dataset[dataset[""review_scores_communication""] == 0].shape[0]
    return count",int64,6,6
What is the maximum number of bedrooms a property has in this dataset?,What is the highest value in the bedrooms column in the given dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_bedrooms = dataset[""bedrooms""].max()
    return max_bedrooms",float64,22.0,22.0
Which neighbourhood has the most listings?,What is the neighbourhood with the highest number of listings in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    neighbourhood_counts = dataset['neighbourhood_cleansed'].value_counts()
    max_neighbourhood = neighbourhood_counts.idxmax()

    return max_neighbourhood",string,Westminster,Westminster
What is the most common room type in the listings?,Which room type appears most frequently in the room_type column of the listings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_room_type = dataset['room_type'].mode().iloc[0]
    return most_frequent_room_type",string,Entire home/apt,Entire home/apt
What property type has the most listings?,Which category of property_type appears most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_property_type = dataset['property_type'].mode().iloc[0]
    return most_frequent_property_type",string,Entire rental unit,Entire rental unit
Which host verification method is the least used?,,,,,photographer
List the top 3 neighbourhoods with the most listings.,What are the names of the top 3 neighbourhoods with the most listings based on the calculated_host_listings_count column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_neighbourhoods = dataset.groupby(""neighbourhood_cleansed"")[""calculated_host_listings_count""].sum().sort_values(ascending=False).head(3)
    top_neighbourhoods_names = top_neighbourhoods.index.tolist()
    
    return top_neighbourhoods_names",list of (string),"['Westminster', 'Kensington and Chelsea', 'Camden']","['Westminster', 'Tower Hamlets', 'Hackney']"
Which are the top 4 most common property types?,What are the four most frequently occurring values in the property_type column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    property_type_counts = dataset[""property_type""].value_counts()
    most_frequent_property_types = property_type_counts.nlargest(4).index.tolist()
    
    return most_frequent_property_types",list of (string),"['Entire rental unit', 'Private room in rental unit', 'Private room in home', 'Entire condo']","['Entire rental unit', 'Private room in rental unit', 'Private room in home', 'Entire condo']"
List the 2 most common host verification methods.,What are the two most frequently occurring host verification methods in the host_verifications column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    host_verifications = dataset['host_verifications'].str.split(',').explode()
    most_frequent_verifications = host_verifications.value_counts().head(2).index.tolist()
    return most_frequent_verifications",list of (string),[],"['phone', 'email']"
Which are the 2 most preferred room types?,What are the top 2 room types that appear most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
room_type_counts = dataset[""room_type""].value_counts()
top_2_room_types = room_type_counts.nlargest(2).index.tolist()
return top_2_room_types",list of (string),"['Entire home/apt', 'Private room']","['Entire home/apt', 'Private room']"
What are the top 3 highest review scores for location?,What are the top three highest review scores for the location attribute in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_three_highest_review_scores = dataset['review_scores_location'].nlargest(3).tolist()
    return top_three_highest_review_scores",list of (float64),"[5.0, 5.0, 5.0]","[5.0, 5.0, 5.0]"
What are the 4 most common number of bedrooms in properties?,What are the four most frequent values of the number of bedrooms in the properties listed in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    bedrooms_counts = dataset['bedrooms'].value_counts()
    most_frequent_bedrooms = bedrooms_counts.nlargest(4).index.tolist()
    return most_frequent_bedrooms",list of (int64),"[1.0, 2.0, 3.0, 4.0]","[1.0, 2.0, 3.0, 4.0]"
What are the 5 highest counts of listings by a single host for entire homes?,What are the top 5 counts of entire home listings by a single host in the calculated_host_listings_count_entire_homes column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_counts = dataset['calculated_host_listings_count_entire_homes'].value_counts().head(5).index.tolist()
    return top_5_counts",list of (int64),"[1, 0, 2, 3, 4]","[288, 288, 288, 288, 288]"
List the 6 lowest review scores for communication.,What are the six lowest review scores for communication in the given dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_six_review_scores = dataset['review_scores_communication'].nsmallest(6).tolist()
    return lowest_six_review_scores",list of (float64),"[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]","[0.0, 0.0, 0.0, 0.0, 0.0, 0.0]"
Are there players who have a greater overall score than their potential score?,,,,ERROR,False
Are there any players who joined their current club before they were 18 years old?,,,,ERROR,True
Are there any players whose preferred foot is left and are from a nationality that starts with 'B'?,,,,ERROR,True
Are there any players who are taller than 6 feet and have an agility score above 90?,,,,ERROR,False
What is the average overall score of players from France?,,,,ERROR,67.861432
How many unique clubs are there in the dataset?,,,,ERROR,683
What is the highest value (in €) of a player in the dataset?,,,,ERROR,105500000
How many players have the position 'ST'?,,,,ERROR,414
What is the most common nationality in the dataset?,Which nationality appears most frequently in the Nationality column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_nationality = dataset['Nationality<gx:category>'].mode().iloc[0]
    return most_frequent_nationality",string,England,England
What is the most common preferred foot amongst players?,,,,ERROR,Right
Which club has the most players in the dataset?,,,,ERROR,Crystal Palace
What is the most common position of players in the dataset?,,,,ERROR,SUB
Which are the top 5 nationalities in terms of the average overall score of their players?,,,,ERROR,"['Tanzania', 'Syria', 'Mozambique', 'Chad', 'Central African Rep.']"
Which are the top 3 clubs in terms of the total value (in €) of their players?,,,,ERROR,"['Liverpool', 'Manchester City', 'Real Madrid']"
Which are the bottom 4 nationalities in terms of the average agility of their players?,,,,ERROR,"['Macau', 'Andorra', 'Moldova', 'Liechtenstein']"
Which are the top 6 clubs in terms of the average potential score of their players?,,,,ERROR,"['FC Bayern München', 'Real Madrid', 'FC Barcelona', 'Paris Saint-Germain', 'Juventus', 'Manchester City']"
What are the top 3 overall scores in the dataset?,,,,ERROR,"[93, 92, 91]"
What are the bottom 5 potential scores in the dataset?,,,,ERROR,"[48, 48, 49, 50, 50]"
What are the top 4 values (in €) of players in the dataset?,,,,ERROR,"[105500000, 90000000, 87000000, 80000000]"
What are the top 2 wages (in €) of players in the dataset?,,,,ERROR,"[560000, 370000]"
There are no tornadoes that resulted in more than 500 injuries.,Is it true that there are no tornadoes where the number of injuries is greater than 500?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_injuries_greater_than_500 = (dataset[""inj""] > 500).any()
    return not has_injuries_greater_than_500",bool,False,True
All tornadoes in the dataset occurred in the 21st century.,Did all tornadoes in the dataset occur after the year 2000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_year = dataset[""yr""].min()
    return min_year > 2000",bool,False,False
No tornado has a length greater than 100 miles.,Is it true that no tornado has a length greater than 100 miles?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_length = dataset[""len""].max()
    return max_length <= 100",bool,False,True
There are no tornadoes that resulted in more than 100 fatalities.,Is it true that there are no tornadoes with fatalities greater than 100?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_fatality = dataset[""fat""].max()
    is_no_tornado_with_fatality_greater_than_100 = max_fatality <= 100

    return is_no_tornado_with_fatality_greater_than_100",bool,False,True
How many unique states are represented in the dataset?,What is the number of distinct states represented in the st column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_states = dataset[""st""].nunique()
    return distinct_states",int64,53,53
What is the highest magnitude of tornado recorded in the dataset?,"What is the maximum magnitude of tornado recorded in the dataset, as indicated by the mag column?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_magnitude = dataset[""mag""].max()
return max_magnitude",int8,5,5
What is the longest length of a tornado path in the dataset?,What is the maximum length of a tornado path in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_length = dataset[""len""].max()
    return max_length",float64,234.7,234.7
What is the maximum number of injuries caused by a single tornado?,What is the maximum value in the inj column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_inj_value = dataset[""inj""].max()
    return max_inj_value",uint16,1740,1740
Which state has experienced the most tornadoes?,What is the state that has recorded the highest number of tornadoes?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    state_counts = dataset['st'].value_counts()
    max_state = state_counts.idxmax()

    return max_state",string,TX,TX
In which month do most tornadoes occur?,Which month has the highest frequency of tornado occurrences?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    month_counts = dataset['mo'].value_counts()
    max_count_month = month_counts.idxmax()

    return max_count_month",int64,5,5
On what date did the most destructive tornado (by injuries) occur?,What is the date of the tornado with the maximum number of injuries?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_injuries_tornado = dataset.loc[dataset[""inj""] == dataset[""inj""].max()]
    date_of_max_injuries_tornado = max_injuries_tornado[""date""].iloc[0]

    return date_of_max_injuries_tornado",datetime64[us],10-04-1979,10-04-1979
On what date did the longest tornado (by path length) occur?,What is the date of the tornado with the maximum path length?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_path_length_tornado = dataset.loc[dataset[""len""] == dataset[""len""].max()]
    date_of_max_path_length_tornado = max_path_length_tornado[""date""].iloc[0]

    return date_of_max_path_length_tornado",datetime64[us],22-03-1953,22-03-1953
Which are the top 5 states with the highest average tornado magnitude?,What are the names of the top 5 states with the highest mean tornado magnitude?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_magnitude_by_state = dataset.groupby(""st"")[""mag""].mean().reset_index()
    top_5_states = mean_magnitude_by_state.sort_values(by=""mag"", ascending=False).head(5)
    top_5_states_list = top_5_states[""st""].tolist()

    return top_5_states_list",list of (string),"['AR', 'KY', 'VT', 'TN', 'MS']","[AR, KY, VT, TN, MS]"
Which are the top 2 states with the most tornado-related injuries? If in a tie then select alphabetically. ,"What are the names of the top 2 states with the highest total number of tornado-related injuries, resolving ties by selecting states in alphabetical order?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    injury_counts = dataset.groupby(""st"")[""inj""].sum().reset_index()
    injury_counts = injury_counts.sort_values(by=[""inj"", ""st""], ascending=[False, True])
    top_2_states = injury_counts.head(2)[""st""].tolist()
    
    return top_2_states",list of (string),"['TX', 'AL']","[TX, AL]"
Which are the top 4 states with the most tornado-related fatalities? If you find a tie select alphabetically.,"What are the names of the top 4 states with the highest number of tornado-related fatalities, resolving any ties by selecting states in alphabetical order?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    state_fatality_counts = dataset.groupby(""st"")[""fat""].sum().reset_index()
    state_fatality_counts = state_fatality_counts.sort_values(by=[""fat"", ""st""], ascending=[False, True])
    top_4_states = state_fatality_counts.head(4)
    top_4_states_list = top_4_states[""st""].tolist()
    
    return top_4_states_list",list of (string),"['AL', 'TX', 'MS', 'OK']","[AL, TX, MS, OK]"
Which are the bottom 2 states in terms of the average tornado path length?,What are the names of the two states with the lowest average tornado path length?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_path_length = dataset.groupby(""st"")[""len""].mean().reset_index()
    average_path_length = average_path_length.sort_values(by=""len"")
    states_with_lowest_average_path_length = average_path_length.head(2)[""st""].tolist()
    
    return states_with_lowest_average_path_length",list of (string),"['AK', 'VI']","[AK, VI]"
What are the top 3 number of injuries caused by tornadoes in the dataset?,What are the three highest injury counts caused by tornadoes in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_injuries = dataset.sort_values(by='inj', ascending=False)
    top_three_injuries = sorted_injuries['inj'].head(3).tolist()
    
    return top_three_injuries",list of (int64),"[1740, 1500, 1228]","[1740, 1500, 1228]"
What are the top 5 magnitudes of tornadoes in the dataset?,"What are the five largest magnitudes of tornadoes in the dataset, based on the mag column?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    largest_magnitudes = dataset['mag'].nlargest(5).tolist()
    return largest_magnitudes",list of (int8),"[5, 5, 5, 5, 5]","[5, 5, 5, 5, 5]"
What are the top 4 path lengths of tornadoes in the dataset?,"What are the four largest path lengths of tornadoes in the dataset, as indicated by the len column?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    largest_path_lengths = dataset['len'].nlargest(4).tolist()
    return largest_path_lengths",list of (float64),"[234.7, 217.8, 202.5, 202.1]","[234.7, 217.8, 202.5, 202.1]"
What are the top 6 number of fatalities caused by tornadoes in the dataset?,What are the six highest fatality counts caused by tornadoes in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_dataset = dataset.sort_values(by='fat', ascending=False)
    top_six_fatality_counts = sorted_dataset['fat'].head(6).tolist()
    
    return top_six_fatality_counts",list of (int64),"[158, 116, 114, 94, 80, 72]","[158, 116, 114, 94, 80, 72]"
There were no days when the precipitation was greater than 5 inches.,Was there ever a day when the precipitation was greater than 5 inches in the given data?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    ever_precipitation_greater_than_5 = (dataset[""PRCP""] > 5).any()
    return ever_precipitation_greater_than_5",bool,True,False
All recorded temperatures are above freezing point.,"Are all the recorded temperatures, specifically TMIN, greater than 32 degrees Fahrenheit, which is the freezing point of water?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    tmin_values = dataset[""TMIN""]
    is_greater_than_freezing = (tmin_values > 32).all()

    return is_greater_than_freezing",bool,False,False
There were no days when the snow depth was more than 10 inches.,Was the snow depth never greater than 10 inches on any given day?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_snow_depth = dataset[""SNWD""].max()
    return max_snow_depth <= 10.0",bool,False,False
There were no days when the maximum temperature was below freezing point.,Is it true that the maximum temperature was never below freezing point on any given day?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    below_freezing = dataset[""TMAX""] < 32
    result = not below_freezing.any()
    return result",bool,False,False
What is the highest recorded precipitation in inches?,What is the maximum value of precipitation in inches recorded in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_precipitation = dataset[""PRCP""].max()
return max_precipitation",float64,8.28,8.28
What is the lowest minimum temperature recorded?,What is the minimum value of TMIN in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_tmin_value = dataset[""TMIN""].min()
    return min_tmin_value",float64,-015.0,-015.0
What is the highest maximum temperature recorded?,What is the maximum value of TMAX in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_tmax_value = dataset[""TMAX""].max()
    return max_tmax_value",float64,106.0,106.0
What is the deepest recorded snow depth in inches?,What is the maximum recorded snow depth in inches in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_snow_depth = dataset[""SNWD""].max()
    return max_snow_depth",float64,26.0,26.0
On which date was the highest precipitation recorded?,What is the date corresponding to the maximum precipitation value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_precipitation_date = dataset.loc[dataset[""PRCP""].idxmax()][""DATE""]
    return max_precipitation_date",datetime64[us],23-09-3782,23-09-3782
On which date was the lowest minimum temperature recorded?,What is the date corresponding to the minimum value in the TMIN column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_tmin_date = dataset.loc[dataset[""TMIN""].idxmin()][""DATE""]
    return min_tmin_date",datetime64[us],09-02-1934,09-02-1934
On which date was the highest maximum temperature recorded?,What is the date corresponding to the maximum TMAX value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_tmax_date = dataset.loc[dataset[""TMAX""] == dataset[""TMAX""].max()][""DATE""].values[0]
    return max_tmax_date",datetime64[us],1936-07-09T00:00:00.000000,09-07-1936
On which date was the deepest snow depth recorded?,What is the date corresponding to the maximum snow depth recorded in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_snow_depth_date = dataset.loc[dataset[""SNWD""].idxmax()][""DATE""]
    return max_snow_depth_date",datetime64[us],27-12-1947,27-12-1947
What are the dates of the top 5 highest recorded precipitation events?,What are the dates corresponding to the top 5 highest PRCP values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_5_prpc = dataset.nlargest(5, 'PRCP')
dates = top_5_prpc['DATE'].tolist()
return dates",list of (datetime64[us]),"[Timestamp('1882-09-23 00:00:00+0000', tz='UTC'), Timestamp('2007-04-15 00:00:00+0000', tz='UTC'), Timestamp('1977-11-08 00:00:00+0000', tz='UTC'), Timestamp('1903-10-09 00:00:00+0000', tz='UTC'), Timestamp('2021-09-01 00:00:00+0000', tz='UTC')]","[1882-09-23, 2007-04-15, 1977-11-08, 1903-10-09, 2021-09-01]"
What are the dates of the top 3 lowest minimum temperatures recorded?,What are the dates corresponding to the three lowest TMIN values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_tmin_dates = dataset.nsmallest(3, 'TMIN')['DATE'].tolist()
    return lowest_tmin_dates",list of (datetime64[us]),"[Timestamp('1934-02-09 00:00:00+0000', tz='UTC'), Timestamp('1917-12-30 00:00:00+0000', tz='UTC'), Timestamp('1943-02-15 00:00:00+0000', tz='UTC')]","[1934-02-09, 1917-12-30, 1943-02-15]"
What are the dates of the top 4 highest maximum temperatures recorded?,What are the dates corresponding to the four highest TMAX values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    tmax_sorted = dataset.sort_values(by='TMAX', ascending=False)
    top_four_tmax = tmax_sorted.head(4)
    dates = top_four_tmax['DATE'].tolist()

    return dates",list of (datetime64[us]),"[Timestamp('1936-07-09 00:00:00+0000', tz='UTC'), Timestamp('1977-07-21 00:00:00+0000', tz='UTC'), Timestamp('1918-08-07 00:00:00+0000', tz='UTC'), Timestamp('2011-07-22 00:00:00+0000', tz='UTC')]","[1936-07-09, 1918-08-07, 1977-07-21, 2011-07-22]"
What are the dates of the top 2 deepest snow depth recorded?,What are the dates corresponding to the two largest snow depth values recorded in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_dataset = dataset.sort_values(by='SNWD', ascending=False)
    top_two_snow_depth_dates = sorted_dataset['DATE'].head(2).tolist()
    
    return top_two_snow_depth_dates",list of (datetime64[us]),"[Timestamp('1947-12-27 00:00:00+0000', tz='UTC'), Timestamp('1947-12-28 00:00:00+0000', tz='UTC')]","[1947-12-27, 1947-12-28]"
What are the 3 highest recorded precipitation events in inches?,What are the top 3 highest values of precipitation in inches recorded in the PRCP column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_precipitation = dataset['PRCP'].nlargest(3).tolist()
    return top_3_precipitation",list of (float64),"[8.28, 7.57, 7.4]","[8.28, 7.57, 7.4]"
What are the 5 lowest minimum temperatures recorded?,What are the five smallest values in the TMIN column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_tmin_values = dataset[""TMIN""].nsmallest(5).tolist()
    return smallest_tmin_values",list of (float64),"[-15.0, -13.0, -8.0, -7.0, -7.0]","[-15.0, -13.0, -8.0, -7.0, -7.0]"
What are the 4 highest maximum temperatures recorded?,What are the top 4 highest TMAX temperatures recorded in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_4_tmax = dataset['TMAX'].nlargest(4).tolist()
    return top_4_tmax",list of (float64),"[106.0, 104.0, 104.0, 104.0]","[106.0, 104.0, 104.0, 104.0]"
What are the 2 deepest snow depth recorded in inches?,What are the two highest snow depth values recorded in the SNOW column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
snow_values = dataset[""SNOW""].sort_values(ascending=False).head(2).tolist()
return snow_values",list of (float64),"[18.0, 14.0]","[26.0, 25.0]"
Are there more than 20 unique clothing items in the dataset?,Does the number of unique clothing items in the dataset exceed 20?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_clothing_items = dataset[""Clothing ID""].nunique()
    return unique_clothing_items > 20",bool,True,True
Is the age of the reviewers above 50 years on average?,Is the mean age of the reviewers greater than 50?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
mean_age = dataset[""Age""].mean()
return mean_age > 50",bool,False,False
Do all reviews come from the same department?,Is there only one unique Department Name across all reviews?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_departments = dataset[""Department Name""].nunique()
    return unique_departments == 1",bool,False,False
Are all products recommended?,Is the Recommended IND value equal to 1 for all products in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    is_recommended_ind_equal_to_one = (dataset[""Recommended IND""] == 1).all()
    return is_recommended_ind_equal_to_one",bool,False,False
What is the average age of the reviewers?,What is the mean value of the Age column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_age = dataset[""Age""].mean()
    return mean_age",float64,43.198544000000000,43.198544000000000
What's the highest number of positive feedback received for a review?,What is the maximum value in the Positive Feedback Count column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_positive_feedback = dataset[""Positive Feedback Count""].max()
    return max_positive_feedback",uint8,122,122
What is the most common rating given by reviewers?,Which rating value appears most frequently in the Rating column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_rating = dataset['Rating'].mode().values[0]
    return str(most_frequent_rating)",string,5,5
How many unique clothing items are there in the dataset?,What is the number of distinct clothing items in the dataset based on Clothing ID?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_clothing_items = dataset[""Clothing ID""].nunique()
    return distinct_clothing_items",int64,1206,1206
Which department has the most reviews?,What is the Department Name that appears most frequently in the reviews?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    department_counts = dataset[""Department Name""].value_counts()
    most_frequent_department = department_counts.idxmax()

    return most_frequent_department",string,Tops,Tops
Which class of clothing is most commonly reviewed?,What is the most frequently occurring Class Name in the reviews?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
class_name_counts = dataset[""Class Name""].value_counts()
most_frequent_class_name = class_name_counts.idxmax()

return most_frequent_class_name",string,Dresses,Dresses
Which division is most commonly mentioned in the reviews?,What is the Division Name that appears most frequently in the Review Text?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    division_names = dataset['Division Name'].value_counts().index[0]
    return division_names",string,General,General
What is the most frequently reviewed clothing item? If you find a tie answer with row order.,"Which clothing item title appears most frequently in the dataset, and in case of a tie, return the one that appears first in the dataset?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    title_counts = dataset[""Title""].value_counts()
    max_count = title_counts.max()
    most_frequent_titles = title_counts[title_counts == max_count].index
    
    most_frequent_title = dataset[""Title""].loc[dataset[""Title""].isin(most_frequent_titles)].iloc[0]
    
    return most_frequent_title",string,Love it!,1078
Which are the 4 most reviewed categories in Department Name?,What are the top 4 categories by review count within each Department Name?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_4_categories = []
    for department in dataset['Department Name'].unique():
        department_data = dataset[dataset['Department Name'] == department]
        review_counts = department_data['Class Name'].value_counts().head(4)
        top_4_categories.append([category for category in review_counts.index])
    return top_4_categories",list of (string),"[['Lounge', 'Swim', 'Sleep', 'Legwear'], ['Dresses', 'Intimates', 'Casual bottoms', 'Layering'], ['Pants', 'Jeans', 'Skirts', 'Shorts'], ['Knits', 'Blouses', 'Sweaters', 'Fine gauge'], ['Jackets', 'Outerwear', 'Intimates', 'Casual bottoms'], ['Trend', 'Intimates', 'Dresses', 'Casual bottoms'], ['Intimates', 'Dresses', 'Casual bottoms', 'Layering']]","['Tops', 'Dresses', 'Bottoms', 'Intimate']"
Which are the top 2 most reviewed categories in Class Name?,What are the two categories with the highest number of reviews within the Class Name?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
class_name_counts = dataset[""Class Name""].value_counts()
top_two_classes = class_name_counts.nlargest(2).index.tolist()

return top_two_classes",list of (string),"['Dresses', 'Knits']","['Dresses', 'Knits']"
Which are the 2 most reviewed categories in Division Name?,What are the top 2 categories by review count within each Division Name?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    result = []
    for division in dataset['Division Name'].unique():
        division_df = dataset[dataset['Division Name'] == division]
        review_counts = division_df['Class Name'].value_counts().head(2)
        top_categories = review_counts.index.tolist()
        result.append(top_categories)
    return result",list of (string),"[['Lounge', 'Swim'], ['Dresses', 'Knits'], ['Dresses', 'Knits'], ['Intimates', 'Dresses']]","['General', 'General Petite']"
What are the 4 highest ratings given by reviewers?,What are the top 4 highest ratings given by reviewers in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_4_ratings = dataset['Rating'].sort_values(ascending=False).unique()[:4].tolist()
    return top_4_ratings",list of (uint8),"[5, 4, 3, 2]","[5, 4, 3, 2]"
What are the 5 oldest Ages of reviewers?,What are the top 5 highest ages of the reviewers in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_highest_ages = dataset['Age'].sort_values(ascending=False).unique()[:5].tolist()
    return top_5_highest_ages",list of (uint8),"[99, 94, 93, 92, 91]","[99, 99, 94, 94, 94]"
What are the 4 most common Positive Feedback Counts of reviewers?,What are the top 4 most frequent values in the Positive Feedback Count column of the reviewers data?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    positive_feedback_counts = dataset[""Positive Feedback Count""].value_counts().head(4).index.tolist()
    return positive_feedback_counts",list of (int64),"[0, 1, 2, 3]","[0, 1, 2, 3]"
What are the 2 most common values for recommendation indicator?,What are the two most frequently occurring values in the Recommended IND column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    recommended_ind_counts = dataset[""Recommended IND""].value_counts()
    most_frequent_values = recommended_ind_counts.nlargest(2).index.tolist()
    most_frequent_values = [str(value) for value in most_frequent_values]
    
    return most_frequent_values",list of (string),"['1', '0']","[1, 0]"
What are the 2 most common clothing IDs in the reviews? If you find a tie answer in row order.,"What are the two most frequently occurring Clothing IDs in the dataset, resolving any ties based on their order of appearance in the data?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    clothing_id_counts = dataset['Clothing ID'].value_counts()
    most_frequent_ids = clothing_id_counts.nlargest(2).index.tolist()
    
    return most_frequent_ids",list of (uint16),"[1078, 862]","[1078, 862]"
Was the highest reported incident in the year 2023 filed online?,Does the incident with the highest incident number in the year 2023 have the filed online attribute set to yes or true?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    incident_2023 = dataset[dataset[""Incident Year""] == 2023]
    max_incident_number = incident_2023[""Incident Number""].max()
    max_incident_number_individual = incident_2023.loc[incident_2023[""Incident Number""] == max_incident_number]
    is_filed_online = max_incident_number_individual[""Filed Online""].str.lower().eq(""yes"") | max_incident_number_individual[""Filed Online""].str.lower().eq(""true"")

    return is_filed_online.bool()",bool,False,False
Are all incidents reported on Mondays resolved?,Is the resolution category not empty for all incidents where the incident day of week is Monday?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    monday_incidents = dataset[dataset[""Incident Day of Week""] == ""Monday""]
    resolution_not_empty = (monday_incidents[""Resolution""] != """").all()

    return resolution_not_empty",bool,True,False
Do any incidents reported in Police District 'Central' fall in Supervisor District 5?,Are there any incidents where the Police District is 'Central' and the Supervisor District is 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    incidents = dataset[(dataset[""Police District""] == ""Central"") & (dataset[""Supervisor District""] == 5.0)]
    return len(incidents) > 0",bool,True,False
Are there any incidents that occurred at the same latitude and longitude more than once?,Are there any duplicate latitude and longitude pairs in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    latitude_longitude_pairs = dataset[['Latitude', 'Longitude']].drop_duplicates()
    unique_pairs_count = len(latitude_longitude_pairs)
    total_pairs_count = len(dataset)

    return unique_pairs_count < total_pairs_count",bool,True,True
How many unique types of incident categories are there in the dataset?,What is the number of distinct values in the Incident Category column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_incident_categories = dataset[""Incident Category""].nunique()
    return distinct_incident_categories",int64,49,49
What's the total number of incidents reported online?,What is the total count of incidents where the report was filed online?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_count = dataset[dataset[""Filed Online""] == ""Yes""].shape[0]
    return total_count",int64,0,144099
How many different police districts are there in the dataset?,What is the number of unique police districts in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_police_districts = dataset[""Police District""].nunique()
    return unique_police_districts",int64,11,11
What is the average incident count per year?,What is the mean of the total incident counts grouped by the Incident Year?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    incident_counts = dataset.groupby(""Incident Year"").size()
    mean_incident_count = incident_counts.mean()

    return mean_incident_count",float64,118851.16666700000,118851.16666700000
What is the most common incident category?,What is the mode of the Incident Category column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mode_incident_category = dataset[""Incident Category""].mode().iloc[0]
    return mode_incident_category",string,Larceny Theft,Larceny Theft
Which day of the week has the highest number of incidents?,What is the Incident Day of Week category that occurs most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_day = dataset['Incident Day of Week'].mode().values[0]
    return most_frequent_day",string,Friday,Friday
What is the most common resolution for incidents reported online?,What is the most frequently occurring value in the Resolution column of the incidents reported online?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    online_incidents = dataset[dataset[""Filed Online""] == ""TRUE""]
    resolution_counts = online_incidents[""Resolution""].value_counts()
    most_frequent_resolution = resolution_counts.idxmax()

    return most_frequent_resolution",string,Open or Active,Open or Active
What is the Police District with the most incidents?,Which Police District has the highest frequency of incidents in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    police_district_counts = dataset[""Police District""].value_counts()
    most_frequent_police_district = police_district_counts.idxmax()

    return most_frequent_police_district",string,Central,Central
What are the three most common incident descriptions?,What are the top three most frequent values in the Incident Description column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    incident_description_counts = dataset[""Incident Description""].value_counts()
    top_three_most_frequent = incident_description_counts.nlargest(3).index.tolist()
    
    return top_three_most_frequent",list of (string),"['Theft, From Locked Vehicle, >$950', 'Malicious Mischief, Vandalism to Property', 'Battery']","['Theft, From Locked Vehicle, >$950', 'Malicious Mischief, Vandalism to Property', 'Battery']"
Name the 4 most frequently occurring police districts.,What are the top 4 most frequent Police Districts in the given dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_4_police_districts = dataset['Police District'].value_counts().head(4).index.tolist()
    return top_4_police_districts",list of (string),"['Central', 'Northern', 'Mission', 'Southern']","[Central, Northern, Mission, Southern]"
List the three most common incident categories on Fridays.,What are the top three most frequent incident categories that occur when the day of the week is Friday?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    friday_incidents = dataset[dataset[""Incident Day of Week""] == ""Friday""]
    incident_categories = friday_incidents[""Incident Category""].value_counts().head(3).index.tolist()
    
    return incident_categories",list of (string),"['Larceny Theft', 'Malicious Mischief', 'Other Miscellaneous']","[Larceny Theft, Malicious Mischief, Other Miscellaneous]"
Give the 6 most common resolutions for incidents.,What are the top 6 most frequent resolutions for incidents in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
resolutions = dataset[""Resolution""].value_counts().head(6).index.tolist()
return resolutions",list of (string),"['Open or Active', 'Cite or Arrest Adult', 'Unfounded', 'Exceptional Adult']","[Open or Active, Cite or Arrest Adult, Unfounded, Exceptional Adult]"
List the years with the top 4 highest incident counts.,What are the top 4 years with the highest number of incidents based on the Incident Year column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    incident_year_counts = dataset['Incident Year'].value_counts()
    top_4_years = incident_year_counts.nlargest(4).index.tolist()
    
    return top_4_years",list of (int64),"[2018, 2019, 2022, 2021]","[2018, 2019, 2022, 2021]"
Which 3 incident years have the lowest number of online filed reports? If two have the same number choose the latest year,,,,ERROR,"[2023, 2020, 2021]"
What are the 2 years with the highest incident counts.,Which two years have the highest number of incident counts in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    incident_counts = dataset['Incident Year'].value_counts()
    top_two_years = incident_counts.nlargest(2).index.tolist()
    
    return top_two_years",list of (int64),"[2018, 2019]","[2018, 2019]"
Name the 6 years with the most number of unique incident categories.,What are the 6 years with the highest count of distinct incident categories in the Incident Category column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    incident_years = dataset['Incident Year'].unique()
    year_category_counts = {}
    for year in incident_years:
        year_data = dataset[dataset['Incident Year'] == year]
        distinct_categories = year_data['Incident Category'].nunique()
        year_category_counts[year] = distinct_categories

    sorted_years = sorted(year_category_counts, key=year_category_counts.get, reverse=True)
    top_6_years = sorted_years[:6]

    return top_6_years",list of (int64),"[np.uint16(2018), np.uint16(2022), np.uint16(2019), np.uint16(2021), np.uint16(2020), np.uint16(2023)]","[2018, 2019, 2020, 2021, 2022, 2023]"
Do all patients experience exercise-induced angina?,"Is the ExerciseAngina attribute the same for all patients, specifically indicating that they all experience exercise-induced angina?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    exercise_angina_values = dataset[""ExerciseAngina""].unique()
    is_same_for_all = len(exercise_angina_values) == 1 and exercise_angina_values[0] == 'Yes'

    return is_same_for_all",bool,False,False
Does any patient have a resting blood pressure above 200?,Is there at least one patient with a resting blood pressure greater than 200 in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_bp = (dataset[""RestingBP""] > 200).any()
    return has_high_bp",bool,False,False
Are there patients without heart disease?,Does the dataset contain any patients where the HeartDisease attribute is 0?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_no_heart_disease = dataset[""HeartDisease""].isin([0]).any()
    return has_no_heart_disease",bool,True,True
Does everyone have normal resting electrocardiographic results?,Are all the RestingECG results normal?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_resting_ecg_values = dataset[""RestingECG""].unique()
    is_all_normal = len(unique_resting_ecg_values) == 1 and unique_resting_ecg_values[0] == 'Normal'

    return is_all_normal",bool,False,False
What is the maximum age of patients in the dataset?,What is the highest age value present in the Age column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_age = dataset[""Age""].max()
    return max_age",uint8,77,77
What is the minimum resting blood pressure among the patients?,What is the lowest value of RestingBP among all the patients in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_resting_bp = dataset[""RestingBP""].min()
    return lowest_resting_bp",uint8,0,0
What is the average cholesterol level in the dataset?,What is the mean value of the Cholesterol column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_cholesterol = dataset[""Cholesterol""].mean()
    return mean_cholesterol",float64,198.7995640000000,198.7995640000000
What is the standard deviation of maximum heart rate among the patients?,What is the standard deviation of the maximum heart rate values in the MaxHR column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_hr_std_dev = dataset[""MaxHR""].std()

    return max_hr_std_dev",float64,25.4603340000000,25.4603340000000
What is the most common chest pain type among patients?,Which category of ChestPainType appears most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_chest_pain_type = dataset[""ChestPainType""].mode().iloc[0]
    return most_frequent_chest_pain_type",string,ASY,ASY
What is the least common resting electrocardiographic result?,What is the resting electrocardiographic result that appears least frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    least_frequent_ecg = dataset[""RestingECG""].value_counts().idxmin()
    return least_frequent_ecg",string,ST,ST
What is the most common ST slope among patients with heart disease?,What is the most frequently occurring ST slope category among patients where HeartDisease is greater than 0?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    patients_with_heart_disease = dataset[dataset[""HeartDisease""] > 0]
    most_frequent_st_slope = patients_with_heart_disease[""ST_Slope""].mode().iloc[0]

    return most_frequent_st_slope",string,Flat,Flat
What is the least common chest pain type among male patients?,Which chest pain type has the lowest frequency among male patients in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    male_patients = dataset[dataset[""Sex""] == ""Male""]
    chest_pain_counts = male_patients[""ChestPainType""].value_counts()
    lowest_frequency_pain = chest_pain_counts.idxmin()

    return lowest_frequency_pain",string,ATA,TA
What are the top 3 most common chest pain types?,What are the three most frequently occurring values in the ChestPainType column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    chest_pain_type_counts = dataset[""ChestPainType""].value_counts()
    top_three_values = chest_pain_type_counts.nlargest(3).index.tolist()
    
    return top_three_values",list of (string),"['ASY', 'NAP', 'ATA']","['ASY', 'NAP', 'ATA']"
Which 4 resting electrocardiographic results are least common?,What are the four least frequent values in the RestingECG column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    least_frequent_values = dataset[""RestingECG""].value_counts().nsmallest(4).index.tolist()
    return least_frequent_values",list of (string),"['ST', 'LVH', 'Normal']","['ST', 'LVH', 'Normal']"
What are the 2 most common ST slopes among patients with heart disease?,What are the two most frequently occurring ST_Slope categories for patients where HeartDisease is greater than 0?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    patients_with_heart_disease = dataset[dataset[""HeartDisease""] > 0]
    st_slope_counts = patients_with_heart_disease[""ST_Slope""].value_counts()
    two_most_frequent_st_slope = st_slope_counts.nlargest(2).index.tolist()
    
    return two_most_frequent_st_slope",list of (string),"['Flat', 'Up']","['Flat', 'Up']"
What are the 4 most common chest pain types among male patients?,List the top 4 most frequent chest pain types for patients where the sex is male?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    male_patients = dataset[dataset[""Sex""] == ""Male""]
    chest_pain_counts = male_patients[""ChestPainType""].value_counts()
    top_4_chest_pain_types = chest_pain_counts.nlargest(4).index.tolist()
    
    return top_4_chest_pain_types",list of (string),"['ATA', 'NAP', 'ASY', 'TA']","['TA', 'ATA', 'NAP', 'ASY']"
What are the ages of the 5 oldest patients in the dataset?,What are the ages of the top 5 oldest patients in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_oldest_patients = dataset.nlargest(5, 'Age')
    ages_of_top_5_oldest_patients = top_5_oldest_patients['Age'].tolist()
    
    return ages_of_top_5_oldest_patients",list of (float64),"[77, 77, 76, 76, 75]","[77, 77, 76, 76, 75]"
What are the 4 highest resting blood pressures?,What are the four largest values in the RestingBP column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    largest_values = dataset['RestingBP'].nlargest(4).tolist()
    return largest_values",list of (int64),"[200, 200, 200, 200]","[200, 200, 200, 200]"
What are the 6 lowest cholesterol levels in the dataset?,What are the six smallest values in the Cholesterol column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_values = dataset['Cholesterol'].nsmallest(6).tolist()
    return smallest_values",list of (uint16),"[0, 0, 0, 0, 0, 0]","[0, 0, 0, 0, 0, 0]"
What are the 3 highest maximum heart rates among the patients?,"What are the top 3 maximum heart rates in the dataset, as represented by the MaxHR column?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_hr_values = dataset[""MaxHR""].sort_values(ascending=False).head(3).tolist()
    return max_hr_values",list of (int64),"[202, 195, 194]","[202, 195, 194]"
Did the oldest roller coaster in the dataset still operate?,,,,ERROR,True
Is there a roller coaster in the dataset that operates at a speed more than 100 mph?,Does any roller coaster in the dataset have a speed greater than 100 mph as indicated by the speed_mph attribute?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_speed_greater_than_100 = (dataset[""speed_mph""] > 100).any()
    return has_speed_greater_than_100",bool,True,True
Are all roller coasters in the dataset designed by 'Werner Stengel' removed?,Are there no roller coasters in the dataset that were designed by 'Werner Stengel' and have a status of not removed?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    werner_stengel_coasters = dataset[(dataset[""Designer""] == ""Werner Stengel"") & (dataset[""Status""] != ""Removed"")]
    return len(werner_stengel_coasters) == 0",bool,False,False
Does every roller coaster have a G-force value?,Is the G-force value present for all roller coasters in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    g_force_values = dataset[""G-force""].notnull()
    is_g_force_present_for_all = g_force_values.all()

    return is_g_force_present_for_all",bool,False,False
What is the maximum speed (in mph) for roller coasters in the dataset?,What is the maximum value of speed_mph for all roller coasters in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_speed_mph = dataset[""speed_mph""].max()
return max_speed_mph",float64,149.1,149.1
How many roller coasters were introduced in the year 2000?,What is the count of roller coasters where the year of introduction is 2000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count_2000_coasters = len(dataset[dataset[""year_introduced""] == 2000])
    return count_2000_coasters",int64,47,47
What is the average G-force across all roller coasters in the dataset?,"What is the mean value of G-force across all the roller coasters in the dataset, considering the G-force values from the Gforce_clean column?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
mean_gforce = dataset[""Gforce_clean""].mean()
return mean_gforce",float64,3.8240060000000000,3.8240060000000000
What is the total number of roller coasters designed by 'Edwin Madeupname' in the dataset?,How many roller coasters in the dataset were designed by Edwin Madeupname?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
roller_coasters_designed_by_edwin = dataset[dataset[""Designer""] == ""Edwin Madeupname""]
count = len(roller_coasters_designed_by_edwin)

return count",int64,0,0
Which manufacturer has built the fastest roller coaster?,What is the manufacturer of the roller coaster with the highest speed in miles per hour?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_speed_coaster = dataset.loc[dataset[""speed_mph""] == dataset[""speed_mph""].max()]
manufacturer = max_speed_coaster[""Manufacturer""].iloc[0]

return manufacturer",string,Intamin,Intamin
What is the status of the roller coaster with the highest G-force?,What is the status of the roller coaster with the maximum G-force value in the Gforce_clean column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    max_gforce_coaster = db.loc[db[""Gforce_clean""] == db[""Gforce_clean""].max()]
    status = max_gforce_coaster[""Status""].iloc[0]

    return status",category,Removed,Removed
What type of the roller coaster is the oldest in the dataset?,What is the type of the roller coaster with the earliest opening date in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
earliest_opening_date_coaster = dataset.loc[dataset[""opening_date_clean""] == dataset[""opening_date_clean""].min()]
coaster_type = earliest_opening_date_coaster[""Type""].iloc[0]

return coaster_type",category,Wood,Wood
What is the location of the roller coaster with the highest number of inversions?,What is the location of the roller coaster with the maximum number of inversions as per the Inversions_clean column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_inversions_coaster = dataset.loc[dataset[""Inversions_clean""] == dataset[""Inversions_clean""].max()]
location = max_inversions_coaster[""Location""].iloc[0]

return location",category,Alton Towers,Alton Towers
What are the names of the top 3 fastest roller coasters?,What are the coaster_name values of the top 3 roller coasters with the highest speed_mph values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_3_coasters = dataset.nlargest(3, 'speed_mph')
coaster_names = top_3_coasters['coaster_name'].tolist()

return coaster_names",list of (string),"['Formula Rossa', 'Kingda Ka', 'Top Thrill Dragster']","[Formula Rossa, Kingda Ka, Top Thrill Dragster]"
Which 2 roller coasters have the highest number of inversions?,What are the names of the top 2 roller coasters with the most inversions?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_2_coasters = dataset.nlargest(2, 'Inversions_clean')
    names = top_2_coasters['coaster_name'].tolist()
    return names",list of (string),"['The Smiler', 'Colossus (Thorpe Park)']","[The Smiler, Colossus (Thorpe Park)]"
What are the locations of the top 5 roller coasters with the highest G-force?,What are the locations of the top 5 roller coasters ranked by their Gforce_clean values in descending order?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_5_coasters = dataset.sort_values(by='Gforce_clean', ascending=False).head(5)
locations = top_5_coasters['Location'].tolist()

return locations",list of (string),"['Sea Lion Park', 'Fuji-Q Highland', 'Six Flags Over Texas', 'Nürburgring', 'Other']","[Sea Lion Park, Fuji-Q Highland, Six Flags Over Texas, Nürburgring, Morey's Piers]"
Name the 4 oldest roller coasters in the dataset.,What are the names of the 4 roller coasters with the earliest opening dates in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    earliest_coasters = dataset.sort_values(by='opening_date_clean').head(4)
    coaster_names = earliest_coasters['coaster_name'].tolist()

    return coaster_names",list of (string),"['Switchback Railway', 'Flip Flap Railway', 'Loop the Loop (Coney Island)', ""Loop the Loop (Young's Pier)""]","[Switchback Railway, Flip Flap Railway, Loop the Loop (Coney Island), Loop the Loop (Young's Pier)]"
What are the top 3 speeds (in mph) of roller coasters in the dataset?,What are the top three values in the speed_mph column of the roller coaster dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    top_three_speeds = db['speed_mph'].nlargest(3).tolist()
    return top_three_speeds",list of (float64),"[149.1, 128.0, 120.0]","[149.1, 128.0, 120.0]"
List the G-force values of the 2 roller coasters with the highest G-force.,"What are the G-force values of the top 2 roller coasters with the highest G-force values in the dataset, based on the Gforce_clean column?","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    top_2_gforce_coasters = db.nlargest(2, 'Gforce_clean')
    gforce_values = top_2_gforce_coasters['Gforce_clean'].tolist()
    
    return gforce_values",list of (float64),"[12.0, 6.5]","[12.0, 6.5]"
What are the heights (in ft) of the top 4 tallest roller coasters?,What are the heights in feet of the four roller coasters with the greatest height in feet?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_height_coasters = dataset.nlargest(4, 'height_ft')
    heights = max_height_coasters['height_ft'].tolist()
    
    return heights",list of (float64),"[377.3, 367.5, 318.2, 306.1]","[377.3, 367.5, 318.2, 306.1]"
Name the introduction years of the 6 oldest roller coasters in the dataset.,"What are the opening years of the 6 oldest roller coasters in the dataset, sorted by their opening date or year introduced?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    dataset['year_introduced'] = pd.to_numeric(dataset['year_introduced'], errors='coerce')
    oldest_coasters = dataset.sort_values(by='year_introduced').head(6)
    opening_years = oldest_coasters['year_introduced'].tolist()
    return opening_years",list of (int64),"[1884, 1895, 1896, 1901, 1901, 1902]","[1884, 1895, 1901, 1901, 1902, 1902]"
Is there a rental property with exactly 5 bedrooms?,Does any rental property have a bedrooms attribute equal to 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_five_bedrooms = dataset[""bedrooms""].eq(5).any()
    return has_five_bedrooms",bool,True,True
Is there a rental property listed by a superhost that is instantly bookable?,Does any rental property exist where the host is a superhost and the property is instantly bookable?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    superhost_and_instantly_bookable = dataset[(dataset[""host_is_superhost""] == ""t"") & (dataset[""instant_bookable""] == ""t"")]
    return not superhost_and_instantly_bookable.empty",bool,True,True
Are there any rental properties that can accommodate more than 10 guests?,Does any rental property have an accommodates value greater than 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_accommodates_greater_than_10 = (dataset[""accommodates""] > 10).any()
    return has_accommodates_greater_than_10",bool,True,True
Is there a rental property that has received a perfect review score?,"Does any rental property have a perfect review score, i.e., a review_scores_rating of 100?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    perfect_review_score = dataset[dataset[""review_scores_rating""] == 100].empty == False
    return perfect_review_score",bool,False,False
How many rental properties are there in the dataset?,What is the total count of unique rental properties in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_properties = dataset['id'].nunique()
    return unique_properties",int64,20776,20776
What is the maximum number of bedrooms in a property?,What is the highest value in the bedrooms column across all properties?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_bedrooms = dataset[""bedrooms""].max()
    return max_bedrooms",float64,18.0,18.0
What is the highest price per night for a rental property?,What is the maximum price per night for any rental property in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_price = dataset['price'].str.replace('$', '').str.replace(',', '').astype(float).max()
    return max_price",float64,95150.0,95150.0
What is the maximum number of reviews a property has received?,What is the highest value in the number_of_reviews column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_number_of_reviews = dataset[""number_of_reviews""].max()
    return max_number_of_reviews",int64,870,870
What is the host response time for the property with the highest number of bedrooms?,What is the host response time for the property with the maximum number of bedrooms?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_bedrooms_property = dataset.loc[dataset[""bedrooms""] == dataset[""bedrooms""].max()]
    host_response_time = max_bedrooms_property[""host_response_time""].iloc[0]

    return host_response_time",string,within an hour,within an hour
What type of room is the most expensive property?,,,,ERROR,Entire home/apt
What is the property type of the listing with the most reviews?,What is the property type of the listing with the maximum number of reviews?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_reviews_listing = dataset.loc[dataset[""number_of_reviews""] == dataset[""number_of_reviews""].max()]
    property_type = max_reviews_listing[""property_type""].iloc[0]

    return property_type",category,Entire rental unit,Entire rental unit
What is the acceptance rate of the host of the property that can accommodate the most number of guests?,What is the host acceptance rate of the property with the maximum number of guests it can accommodate?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_accommodates_property = dataset.loc[dataset[""accommodates""] == dataset[""accommodates""].max()]
    host_acceptance_rate = max_accommodates_property[""host_acceptance_rate""].iloc[0]

    return host_acceptance_rate",category,,100.0%
Which are the 2 lowest values of host response rates above 0% ?,What are the two smallest host response rates that are greater than 0% in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    host_response_rates = dataset['host_response_rate'].str.rstrip('%').astype('float')
    non_zero_response_rates = host_response_rates[host_response_rates > 0]
    two_smallest_response_rates = non_zero_response_rates.nsmallest(2).tolist()
    return two_smallest_response_rates",list of (float64),"[5.0, 10.0]","['5%', '10%']"
Which are the 2 lowest values of host response rates?,What are the two smallest host response rates in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    host_response_rates = dataset['host_response_rate'].str.rstrip('%').astype('float')
    two_smallest_rates = host_response_rates.nsmallest(2).tolist()
    return two_smallest_rates",list of (float64),"[0.0, 0.0]","['0%', '0%']"
What are the 4 highest values of host acceptance rates?,What are the top 4 host acceptance rates in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    host_acceptance_rates = dataset['host_acceptance_rate'].str.rstrip('%').astype('float') / 100
    top_4_host_acceptance_rates = host_acceptance_rates.nlargest(4).tolist()
    
    return top_4_host_acceptance_rates",list of (float64),"[1.0, 1.0, 1.0, 1.0]","['99%', '99%', '99%', '99%']"
What are the 2 least common scraping sources?,What are the two least frequently occurring values in the source column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    source_counts = dataset['source'].value_counts()
    least_frequent_sources = source_counts.nsmallest(2).index.tolist()
    return least_frequent_sources",list of (string),"['previous scrape', 'city scrape']","['previous scrape', 'city scrape']"
What are the 3 prices of the most expensive properties?,What are the top 3 highest prices of properties in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    prices = dataset['price'].str.replace('$', '').str.replace(',', '').astype(float)
    top_3_highest_prices = prices.nlargest(3).tolist()
    return top_3_highest_prices",list of (float64),"[95150.0, 90130.0, 64430.0]","[95150.0, 90130.0, 64430.0]"
What are the 2 prices of the least expensive properties?,What are the two lowest prices in the price column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    prices = pd.to_numeric(dataset[""price""].str.replace(""$"", """").str.replace("","", """"))
    lowest_two_prices = prices.nsmallest(2).tolist()
    return lowest_two_prices",list of (float64),"[0.0, 0.0]","[0.0, 0.0]"
What are the 2 numbers of reviews received by the 2 most reviewed properties?,What are the number of reviews received by the top 2 most reviewed properties based on the number_of_reviews column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_2_most_reviewed = dataset.nlargest(2, 'number_of_reviews')
    reviews = top_2_most_reviewed['number_of_reviews'].tolist()
    return reviews",list of (int64),"[870, 822]","[870, 822]"
What are the 5 numbers of guests accommodated by the properties that can accommodate the most guests?,What are the top 5 accommodates values for the properties that can accommodate the most guests in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_accommodates = dataset['accommodates'].value_counts().head(5).index.tolist()
    return top_5_accommodates",list of (int64),"[2, 4, 1, 3, 6]","[16, 16, 16, 16, 16]"
Is there a food item with 'Fruits' as its group?,Does any food item have 'Fruits' as its group classification?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_fruits_group = (dataset[""GROUP""] == ""Fruits"").any()
    return has_fruits_group",bool,True,True
Are there food items with 'Nuts' as their sub group?,Does the 'SUB GROUP' column contain 'Nuts' as a value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    return 'Nuts' in dataset['SUB GROUP'].values",bool,True,True
Is there a food item with scientific name 'Tilia argentea'?,Does the dataset contain a food item where the scientific name is 'Tilia argentea'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    result = dataset[dataset[""SCIENTIFIC NAME""] == ""Tilia argentea""]
    return not result.empty",bool,True,True
Is 'Angelica' listed as a food name in the dataset?,Does the 'FOOD NAME' column contain the string 'Angelica'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    contains_angelica = dataset['FOOD NAME'].str.contains('Angelica').any()
    return contains_angelica",bool,True,True
How many food items are there in the dataset?,What is the total count of unique food items in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_food_items = dataset[""FOOD NAME""].nunique()
    return unique_food_items",int64,906,906
How many unique food groups are there in the dataset?,What is the number of distinct categories in the GROUP column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_groups = dataset[""GROUP""].nunique()
    return distinct_groups",int64,24,24
How many unique sub groups are there in the dataset?,What is the number of distinct sub groups present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_sub_groups = dataset[""SUB GROUP""].nunique()
    return distinct_sub_groups",int64,123,123
How many unique food items are there in the dataset?,What is the number of distinct food items in the FOOD NAME category?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_food_items = dataset[""FOOD NAME""].nunique()
    return distinct_food_items",int64,906,906
What is the group of the food named 'Kiwi'?,What is the group classification of the food item named 'Kiwi'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    kiwi_group = dataset.loc[dataset[""FOOD NAME""] == ""Kiwi"", ""GROUP""]
    return kiwi_group.iloc[0]",category,Fruits,Fruits
What is the sub group of the food with scientific name 'Tilia argentea'?,What is the sub group category of the food item with the scientific name 'Tilia argentea'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sub_group_category = dataset.loc[dataset[""SCIENTIFIC NAME""] == ""Tilia argentea"", ""SUB GROUP""].iloc[0]
    return sub_group_category",category,Herbs,Herbs
What is the scientific name of the food named 'Colorado pinyon'?,What is the scientific name associated with the food item named 'Colorado pinyon'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    scientific_name = dataset.loc[dataset[""FOOD NAME""] == ""Colorado pinyon"", ""SCIENTIFIC NAME""].iloc[0]
    return scientific_name",string,Pinus edulis,Pinus edulis
What is the food name of the item with scientific name 'Tilia argentea'?,What is the food name associated with the scientific name 'Tilia argentea' in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    food_name = dataset.loc[dataset[""SCIENTIFIC NAME""] == ""Tilia argentea"", ""FOOD NAME""].iloc[0]
    return food_name",string,Silver linden,Silver linden
What are the top 3 most common food groups?,What are the three most frequently occurring food groups in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    food_groups = dataset[""GROUP""].value_counts().index[:3].tolist()
    return food_groups",list of (string),"['Aquatic foods', 'Vegetables', 'Fruits']","['Aquatic foods', 'Vegetables', 'Fruits']"
What are the top 2 most common groups? If there are two that have the same number of appearances give preference alphabetically.,What are the top two most frequent groups in the dataset ordered by frequency and then alphabetically in case of a tie?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    group_counts = dataset[""GROUP""].value_counts()
    top_two_groups = group_counts.nlargest(2, keep='all')
    top_two_groups = top_two_groups.index.tolist()
    top_two_groups.sort()
    
    return top_two_groups",list of (string),"['Aquatic foods', 'Fruits', 'Vegetables']","['Aquatic foods', 'Fruits']"
What are the 5 least common food groups?,What are the five least frequently occurring food groups in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    food_groups = dataset[""GROUP""].value_counts()
    least_frequent_groups = food_groups.nsmallest(5).index.tolist()
    
    return least_frequent_groups",list of (string),"['Eggs', 'Baby foods', 'Unclassified', 'Herbs and spices', 'Teas']","['Teas', 'Eggs', 'Baby foods', 'Unclassified', 'Herbs and spices']"
What are the 5 most common sub groups?,What are the top 5 most frequent sub groups in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sub_group_counts = dataset[""SUB GROUP""].value_counts()
    top_5_sub_groups = sub_group_counts.nlargest(5).index.tolist()
    
    return top_5_sub_groups",list of (string),"['Fishes', 'Herbs', 'Berries', 'Tropical fruits', 'Nuts']","['Fishes', 'Herbs', 'Berries', 'Tropical fruits', 'Nuts']"
What are the lengths of the top 5 most common sub group names?,What are the lengths of the top 5 most frequent sub group names in the SUB GROUP category?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sub_group_counts = dataset[""SUB GROUP""].value_counts()
    top_5_sub_groups = sub_group_counts.nlargest(5)
    lengths = [len(sub_group) for sub_group in top_5_sub_groups.index]
    return lengths",list of (int64),"[6, 5, 7, 15, 4]","[6, 5, 7, 15, 4]"
What are the number of appearances of the 2 least common groups?,What are the counts of the two least frequent groups in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    group_counts = dataset[""GROUP""].value_counts()
    least_frequent_counts = group_counts.nsmallest(2).tolist()
    
    return least_frequent_counts",list of (int64),"[1, 1]","[1, 1]"
What are the number of appearances of the 3 most common groups?,What are the counts of the top 3 most frequent groups in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    group_counts = dataset[""GROUP""].value_counts()
    top_3_counts = group_counts.nlargest(3).tolist()
    
    return top_3_counts",list of (int64),"[166, 130, 130]","[166, 130, 130]"
What are the three most common group name lengths?,What are the lengths of the three most frequently occurring group names in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    group_counts = dataset[""GROUP""].value_counts()
    top_3_groups = group_counts.nlargest(3)
    group_lengths = [len(group) for group in top_3_groups.index]

    return group_lengths",list of (int64),"[13, 10, 6]","[6.0, 13.0, 10.0]"
Is there a customer with 'Large Business' as their occupation?,Does any customer have 'Large Business' as their occupation in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_large_business_occupation = dataset[""Occupation""].eq(""Large Business"").any()
    return has_large_business_occupation",bool,True,True
Are there customers with 'King' as their pitched product?,Does the ProductPitched column contain 'King' for any customer?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    answer = 'King' in dataset['ProductPitched'].values
    return answer",bool,True,True
Is there a customer with designation 'VP'?,Does the designation 'VP' exist in the Designation column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    designation_exists = 'VP' in dataset['Designation'].values
    
    return designation_exists",bool,True,True
Is 'Unmarried' listed as a marital status in the dataset?,Does 'Unmarried' exist as a value in the MaritalStatus column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    marital_status_values = dataset[""MaritalStatus""].unique()
    is_unmarried = ""Unmarried"" in marital_status_values

    return is_unmarried",bool,True,True
How many customers are there in the dataset?,What is the total count of unique CustomerID in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_unique_customers = dataset[""CustomerID""].nunique()
    return total_unique_customers",int64,4888,4888
How many unique occupations are there in the dataset?,What is the number of distinct Occupation categories present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_occupations = dataset[""Occupation""].nunique()
    return distinct_occupations",int64,4,4
How many unique designations are there in the dataset?,What is the number of distinct values in the Designation column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_designations = dataset[""Designation""].nunique()
    return distinct_designations",int64,5,5
How many unique marital statuses are there in the dataset?,What is the number of distinct categories in the MaritalStatus column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_marital_status = dataset[""MaritalStatus""].nunique()
    return distinct_marital_status",int64,4,4
What is the occupation of the customer with ID 200000?,What is the occupation category of the customer who has a CustomerID of 200000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    customer_200000 = dataset.loc[dataset[""CustomerID""] == 200000]
    occupation_category = customer_200000[""Occupation""].iloc[0]

    return occupation_category",category,Salaried,Salaried
What is the product pitched to the customer with ID 200001?,What is the product pitched to the customer with CustomerID equal to 200001 in terms of the ProductPitched attribute?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    customer_id_200001 = dataset.loc[dataset[""CustomerID""] == 200001]
    product_pitched = customer_id_200001[""ProductPitched""].iloc[0]

    return product_pitched",category,Deluxe,Deluxe
What is the designation of the customer with ID 200002?,What is the designation of the customer who has a CustomerID of 200002?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
customer = dataset.loc[dataset[""CustomerID""] == 200002]
designation = customer[""Designation""].iloc[0]

return designation",category,Executive,Executive
What is the marital status of the customer with ID 200003?,What is the MaritalStatus of the customer where CustomerID equals 200003?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    customer_id_200003 = dataset.loc[dataset[""CustomerID""] == 200003]
    marital_status = customer_id_200003[""MaritalStatus""].iloc[0]

    return marital_status",category,Divorced,Divorced
What are the 3 most common occupations?,What are the top three most frequent Occupation categories in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
occupation_counts = dataset[""Occupation""].value_counts()
top_three_occupations = occupation_counts.nlargest(3).index.tolist()
return top_three_occupations",list of (string),"['Salaried', 'Small Business', 'Large Business']","['Salaried', 'Small Business', 'Large Business']"
What are the top 2 most common pitched products?,What are the two most frequently occurring values in the ProductPitched category?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    product_pitched_counts = dataset[""ProductPitched""].value_counts()
    two_most_frequent = product_pitched_counts.nlargest(2).index.tolist()
    
    return two_most_frequent",list of (string),"['Basic', 'Deluxe']","['Basic', 'Deluxe']"
What are the 4 least common occupations?,What are the four least frequently occurring occupations in the Occupation column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
occupation_counts = dataset[""Occupation""].value_counts()
least_frequent_occupations = occupation_counts.nsmallest(4).index.tolist()
return least_frequent_occupations",list of (string),"['Free Lancer', 'Large Business', 'Small Business', 'Salaried']","['Salaried', 'Small Business', 'Large Business', 'Free Lancer']"
What are the 2 least common pitched products?,"What are the two products that have been pitched the least, based on the ProductPitched category in the dataset?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    product_pitched_counts = dataset[""ProductPitched""].value_counts()
    least_pitched_products = product_pitched_counts.nsmallest(2).index.tolist()
    
    return least_pitched_products",list of (string),"['King', 'Super Deluxe']","['Super Deluxe', 'King']"
What are the ages of the 3 oldest customers?,What are the ages of the top 3 oldest customers in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_oldest_customers = dataset.nlargest(3, 'Age')
    ages_of_top_3_oldest_customers = top_3_oldest_customers['Age'].tolist()
    
    return ages_of_top_3_oldest_customers",list of float64,"[61.0, 61.0, 61.0]","[61, 61, 61]"
What are the ages of the 4 youngest customers?,What are the ages of the four customers with the lowest age values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_age_customers = dataset.nsmallest(4, 'Age')
    ages = lowest_age_customers['Age'].tolist()
    
    return ages",list of float64,"[18.0, 18.0, 18.0, 18.0]","[18.0, 18.0, 18.0, 18.0]"
What are the top 2 highest monthly incomes of the customers?,What are the two largest values in the MonthlyIncome column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    monthly_incomes = dataset[""MonthlyIncome""]
    largest_two_incomes = monthly_incomes.nlargest(2).tolist()
    
    return largest_two_incomes",list of (float64),"[98678.0, 95000.0]","[98678, 95000]"
What are the 4 most common duration of pitch?,What are the four most frequent values in the DurationOfPitch column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    duration_of_pitch_counts = dataset[""DurationOfPitch""].value_counts()
    four_most_frequent_values = duration_of_pitch_counts.nlargest(4).index.tolist()
    return four_most_frequent_values",list of (float64),"[9.0, 7.0, 8.0, 6.0]","[9.0, 7.0, 8.0, 6.0]"
Is there any entry posted on a weekend?,Are there any entries where the weekday name is either Saturday or Sunday?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
saturday_or_sunday = dataset[(dataset[""weekday_name""] == ""Saturday"") | (dataset[""weekday_name""] == ""Sunday"")]
return not saturday_or_sunday.empty",bool,True,True
Are there titles with more than 100 characters?,,,,ERROR,False
Do any entries have a negative sentiment according to the Cardiff NLP model?,Are there any entries where the title_gx_cardiff_nlp_sentiment is negative?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    negative_sentiment = dataset[dataset[""title_gx_cardiff_nlp_sentiment""] == ""negative""]
    return not negative_sentiment.empty",bool,False,False
"Is the term 'linux' mentioned in the ""Clusters II"" column?",Does the string 'linux' appear in the values of the Clusters II column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    linux_appears = 'linux' in dataset['Clusters II'].values

    return linux_appears",bool,False,True
How many entries were posted in the morning?,What is the total count of entries where the partofday is morning?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    morning_count = dataset[dataset[""partofday""] == ""morning""].shape[0]
    return morning_count",int64,1516,1516
What's the highest score received by an entry?,What is the maximum score value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_score = dataset[""score""].max()
    return max_score",uint16,6015,6015
"On average, how many descendants does an entry have?",What is the mean value of the descendants column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_descendants = dataset[""descendants""].mean()
    return mean_descendants",float64,339.2486210000000,339.2486210000000
How many entries are in the Autumn season?,What is the total count of entries where the season is Autumn?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_count_autumn = len(dataset[dataset[""season""] == ""Autumn""])

    return total_count_autumn",int64,2301,2301
Which day of the week has the most entries?,What is the weekday name that appears most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_weekday = dataset[""weekday_name""].mode().iloc[0]
    return most_frequent_weekday",string,Tuesday,Tuesday
What is the predominant language used in titles?,What is the most frequently occurring language in the title_gx_lang column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_language = dataset[""title_gx_lang""].mode().iloc[0]
    return most_frequent_language",string,en,en
In which season was the entry with the highest score posted?,What is the season associated with the entry that has the maximum score?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_score_entry = dataset.loc[dataset[""score""] == dataset[""score""].max()]
season = max_score_entry[""season""].iloc[0]

return season",string,Spring,Spring
On which part of the day are most entries posted?,What is the most frequent partofday category in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_partofday = dataset[""partofday""].mode().iloc[0]
    return most_frequent_partofday",string,afternoon,afternoon
"List the top 4 most frequent terms in the ""Clusters II"" column.",What are the four most common categories in the Clusters II column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    clusters_ii_counts = dataset[""Clusters II""].value_counts()
    four_most_common = clusters_ii_counts.nlargest(4).index.tolist()
    
    return four_most_common",list of (string),"['year, work, new', 'google, web, firefox, open', 'apple, linux, rust, iphone', 'facebook, twitter, die, account']","['year, work, new', 'google, web, firefox, open', 'apple, linux, rust, iphone', 'facebook, twitter, die, account']"
Name the 2 month names which appear less in the dataset.,What are the two month names that appear with the lowest frequency in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    month_name_counts = dataset[""month_name""].value_counts()
    lowest_frequency_months = month_name_counts.nsmallest(2).index.tolist()
    
    return lowest_frequency_months",list of (string),"['July', 'December']","['December', 'July']"
Identify the top 3 weekdays based on entry frequency.,What are the top three weekday names with the highest frequency of occurrence in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    weekday_counts = dataset[""weekday_name""].value_counts()
    top_three_weekdays = weekday_counts.nlargest(3).index.tolist()
    
    return top_three_weekdays",list of (string),"['Tuesday', 'Wednesday', 'Thursday']","['Tuesday', 'Wednesday', 'Thursday']"
Provide the bottom 4 seasons in terms of entry count.,What are the four seasons with the lowest number of entries in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    season_counts = dataset['season'].value_counts()
    lowest_seasons = season_counts.nsmallest(4).index.tolist()
    
    return lowest_seasons",list of (string),"['Summer', 'Autumn', 'Winter', 'Spring']","['Spring', 'Winter', 'Autumn', 'Summer']"
List the top 3 scores in the dataset.,What are the top three highest values in the score column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_three_scores = dataset['score'].nlargest(3).tolist()
    return top_three_scores",list of (int64),"[6015, 5771, 4338]","[6015, 5771, 4338]"
Name the bottom 5 title text lengths.,What are the five smallest title text lengths in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_title_lengths = dataset['title_gx_text_length'].nsmallest(5).tolist()
    return smallest_title_lengths",list of (float64),"[1.0, 2.0, 2.0, 2.0, 2.0]","[1.0, 2.0, 2.0, 2.0, 2.0]"
Identify the top 4 numbers of descendants.,What are the top 4 values in the descendants column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_4_descendants = dataset['descendants'].nlargest(4).tolist()
    return top_4_descendants",list of (float64),"[4576.0, 3678.0, 3676.0, 3463.0]","[4576.0, 3678.0, 3676.0, 3463.0]"
Provide the bottom 6 scores in the dataset.,What are the six lowest score values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sorted_scores = dataset[""score""].sort_values(ascending=True)
lowest_six_scores = sorted_scores.head(6).tolist()
return lowest_six_scores",list of (uint16),"[501, 501, 501, 501, 501, 501]","[501, 501, 501, 501, 501, 501]"
Are there any employees with more than 7 projects?,Does any employee have a Number of Projects greater than 7?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_more_than_7_projects = (dataset[""Number of Projects""] > 7).any()
    return has_more_than_7_projects",bool,False,False
Has any employee worked for more than 300 hours on average per month?,Is there at least one employee with average monthly hours exceeding 300?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    return dataset[""Average Monthly Hours""].max() > 300",bool,True,True
Are all satisfaction levels above 0.5?,Is the minimum Satisfaction Level greater than 0.5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_satisfaction_level = dataset[""Satisfaction Level""].min()
return min_satisfaction_level > 0.5",bool,False,False
Were there any employees hired in 2019?,Does the Date Hired column contain any dates from the year 2019?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    year_2019 = dataset[dataset['Date Hired'].dt.year == 2019]
    return not year_2019.empty",bool,True,True
How many unique departments are there?,What is the number of distinct departments in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_departments = dataset[""Department""].nunique()
    return distinct_departments",int64,10,10
What's the maximum number of years an employee has been in the company?,What is the maximum value of years an employee has been in the company based on the Years in the Company column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_years = dataset[""Years in the Company""].max()
return int(max_years)",int64,10,10
How many employees have been promoted in the last 5 years?,What is the total count of employees who have been promoted in the last 5 years?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    promoted_employees = dataset[dataset[""Promoted in the last 5 years?""] == ""Yes""]
    total_promoted = len(promoted_employees)

    return total_promoted",int64,319,319
"On average, how many hours do employees work monthly?",What is the mean of Average Monthly Hours worked by employees?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_average_monthly_hours = dataset[""Average Monthly Hours""].mean()
    return mean_average_monthly_hours",float64,201.0503370000000,201.05
Which department has the highest number of employees?,What is the department with the maximum count of employees?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    department_counts = dataset[""Department""].value_counts()
    max_count_department = department_counts.idxmax()

    return max_count_department",string,sales,sales
What's the most common salary level among employees?,Which salary level appears most frequently in the salary column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
salary_counts = dataset[""salary""].value_counts()
most_frequent_salary = salary_counts.idxmax()

return most_frequent_salary",string,low,low
Which year had the highest number of employees hired?,In which year was the maximum number of employees hired based on the Date Hired column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    dataset['Date Hired'] = pd.to_datetime(dataset['Date Hired'])
    dataset['Year Hired'] = dataset['Date Hired'].dt.year
    max_hired_year = dataset['Year Hired'].value_counts().idxmax()
    
    return max_hired_year",int64,2017,2017
Which salary level has the least number of employees who had an accident at work?,What salary level corresponds to the minimum count of employees where Work Accident is True?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    work_accident_true = dataset[dataset[""Work Accident""] == True]
    salary_counts = work_accident_true[""salary""].value_counts()
    min_count_salary = salary_counts.idxmin()
    
    return min_count_salary",string,low,high
Name the top 4 departments with the most employees.,What are the names of the top 4 departments with the highest number of employees?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    department_counts = dataset[""Department""].value_counts()
    top_4_departments = department_counts.nlargest(4).index.tolist()
    
    return top_4_departments",list of (string),"['sales', 'technical', 'support', 'IT']","['sales', 'technical', 'support', 'IT']"
List the 3 departments with the most number of promotions in the last 5 years that have at least one promotion. ,"What are the top 3 departments with the highest number of employees who were promoted in the last 5 years, considering only departments that have had at least one promotion in the same time period?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    promoted_employees = dataset[dataset['Promoted in the last 5 years?'] == 'Yes']
    department_counts = promoted_employees['Department'].value_counts()
    top_departments = department_counts.nlargest(3).index.tolist()
    
    return top_departments",list of (string),"['sales', 'management', 'marketing']","['hr', 'accounting', 'IT']"
Identify the 3 departments with the lowest average satisfaction levels.,What are the names of the three departments with the lowest mean satisfaction levels?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_satisfaction_levels = dataset.groupby(""Department"")[""Satisfaction Level""].mean().reset_index()
    mean_satisfaction_levels = mean_satisfaction_levels.sort_values(by=""Satisfaction Level"")
    lowest_mean_departments = mean_satisfaction_levels.head(3)[""Department""].tolist()
    
    return lowest_mean_departments",list of (string),"['accounting', 'hr', 'technical']","['accounting', 'hr', 'technical']"
What are the 2 departments with the lowest average monthly hours worked?,Which two departments have the smallest average of Average Monthly Hours worked?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
avg_hours = dataset.groupby(""Department"")[""Average Monthly Hours""].mean().reset_index()
avg_hours = avg_hours.sort_values(by=""Average Monthly Hours"")
smallest_two_departments = avg_hours.head(2)[""Department""].tolist()
return smallest_two_departments",list of (string),"['hr', 'marketing']","['hr', 'marketing']"
Identify the top 3 years with the highest employee hiring.,What are the top three years with the most employees hired based on the Year Hired column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    year_counts = dataset[""Year Hired""].value_counts()
    top_three_years = year_counts.nlargest(3).index.tolist()
    
    return top_three_years",list of (int64),"[2017, 2018, 2016]","['2017', '2018', '2016']"
Which are the highest 3 satisfaction levels among employees who left?,What are the top 3 satisfaction levels of employees who have left the company?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    left_employees = dataset[dataset[""Left""] == ""Yes""]
    top_satisfaction_levels = left_employees[""Satisfaction Level""].sort_values(ascending=False).head(3).tolist()
    
    return top_satisfaction_levels",list of (float64),"[0.92, 0.92, 0.92]","[0.92, 0.92, 0.92]"
List the bottom 5 average monthly hours among employees who were promoted in the last 5 years.,What are the five lowest average monthly hours worked by employees who were promoted in the last five years?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    promoted_employees = dataset[dataset[""Promoted in the last 5 years?""] == ""Yes""]
    lowest_hours = promoted_employees[""Average Monthly Hours""].nsmallest(5).tolist()
    return lowest_hours",list of (float64),"[100, 100, 102, 102, 106]","[215, 133, 159, 241, 247]"
Whhat are the top 6 last evaluation scores?,What are the six highest values in the Last Evaluation column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    last_evaluation_values = dataset[""Last Evaluation""].sort_values(ascending=False).head(6).tolist()
    return last_evaluation_values",list of (float64),"[1.0, 1.0, 1.0, 1.0, 1.0, 1.0]","[1, 1, 1, 1, 1, 1]"
Did any incident result in the total destruction of the aircraft?,Is there any incident where the aircraft damage type is total destruction?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_destruction_incident = dataset[dataset[""Aircaft_Damage_Type""] == ""Total Destruction""]
    return not total_destruction_incident.empty",bool,False,True
Have there been any incidents where the cause was related to the undercarriage of the aircraft?,Are there any incidents in the dataset where the incident cause includes undercarriage related issues?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
undercarriage_related_incidents = dataset[dataset[""Incident_Cause(es)""].str.contains(""undercarriage"", case=False, na=False)]
return not undercarriage_related_incidents.empty",bool,True,True
Has there been any instance where the ground casualties were non-zero?,,,,ERROR,True
Are there incidents where the aircraft was involved in a collision?,Are there any incidents in the dataset where the Incident_Category includes a collision?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    collision_incidents = dataset[dataset[""Incident_Category""].str.contains(""collision"", case=False, na=False)]
    return not collision_incidents.empty",bool,False,True
How many unique aircraft models are in the dataset?,What is the number of distinct aircraft models in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_aircraft_models = dataset[""Aircaft_Model""].nunique()
    return distinct_aircraft_models",int64,3523,3523
What's the highest number of occupants recorded in an incident?,,,,ERROR,524.0
How many incidents occurred in January 2022?,What is the total count of incidents that occurred in the month of January in the year 2022?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    january_2022_incidents = dataset[(dataset['Date'].dt.month == 1) & (dataset['Date'].dt.year == 2022)]
    total_count = january_2022_incidents.shape[0]
    
    return total_count",int64,7,7
How many incidents resulted in non-zero fatalities?,What is the count of incidents where the number of fatalities is greater than zero?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    incidents_with_fatalities = dataset[dataset[""Fatalities""] > 0]
    count_of_incidents = len(incidents_with_fatalities)

    return count_of_incidents",int64,9231,0
Which aircraft model was involved in the most incidents?,What is the aircraft model that appears most frequently in the incident reports?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_aircraft_model = dataset[""Aircaft_Model""].mode().iloc[0]
    return most_frequent_aircraft_model",category,Junkers Ju-52/3m,Junkers Ju-52/3m
What was the cause of the incident that resulted in the most fatalities?,What was the incident cause with the highest number of fatalities in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    incident_cause_fatalities = dataset.groupby(""Incident_Cause(es)"")[""Fatalities""].sum().reset_index()
    max_fatalities_incident_cause = incident_cause_fatalities.loc[incident_cause_fatalities[""Fatalities""] == incident_cause_fatalities[""Fatalities""].max()]
    
    return max_fatalities_incident_cause[""Incident_Cause(es)""].iloc[0]",category,Info-Unavailable,"Airplane - Pressurization, Airplane - Pressurization - Bulkhead failure, Airplane - Pressurization - Explosive decompression, Maintenance - (repair of) previous damage, Result - Loss of control"
What is the most common phase of aircraft during incidents?,What is the most frequently occurring value in the Aircraft_Phase column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_phase = dataset[""Aircraft_Phase""].mode().iloc[0]
    return most_frequent_phase",string,En route (ENR),En route (ENR)
What is the location of the incident with the highest number of onboard occupants?,,,,ERROR,near Ueno Village...
What are the top 3 most common causes of incidents?,What are the three most frequent incident causes in the Incident_Cause(es) column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    incident_causes = dataset['Incident_Cause(es)'].value_counts().head(3).index.tolist()
    return incident_causes",list of (string),"['Info-Unavailable', 'Result - Runway excursion', 'Result - Damaged on the ground']","['Info-Unavailable', 'Result - Runway excursion', 'Result - Damaged on the ground']"
List the top 5 locations where the most incidents have occurred. If there are two or more with the same number order them alphabetically,"What are the names of the top 5 locations with the most incidents, ordered by the number of incidents in descending order and then alphabetically by location name if there are ties?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
incident_counts = dataset[""Incident_Location""].value_counts()
top_5_locations = incident_counts.nlargest(5)
top_5_locations = top_5_locations.index.tolist()
top_5_locations.sort(key=lambda x: (-incident_counts[x], x))
return top_5_locations",list of (string),"['unknown', 'Havana-José ...', 'Miami Intern...', 'Rio de Janei...', 'Beirut Inter...']","['Arnhem', 'Beirut International Airport (BEY)', 'Glasgow-Preswick Airport', 'Havana-José Martí International Airport (HAV)', 'Miami International Airport, FL (MIA)']"
Name the 2 most frequently occurring aircraft operators in the dataset.,What are the top 2 most common Aircaft_Operator values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_2_operators = dataset[""Aircaft_Operator""].value_counts().head(2).index.tolist()
    return top_2_operators",list of (string),"['USAAF', 'USAF']","['USAAF', 'USAF']"
What are the top 2 most common types of aircraft damage?,What are the two most frequently occurring Aircaft_Damage_Type in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    aircaft_damage_type_counts = dataset[""Aircaft_Damage_Type""].value_counts()
    most_frequent_damage_types = aircaft_damage_type_counts.nlargest(2).index.tolist()
    
    return most_frequent_damage_types",list of (string),"['Damaged beyond repair', 'Substantial']","['Damaged beyond repair', 'Substantial']"
What are the 5 highest numbers of onboard passengers in incidents?,,,,ERROR,"[509.0, 503.0, 497.0, 451.0, 440.0]"
List the 3 highest numbers of onboard crew in incidents.,,,,ERROR,"[32.0, 31.0, 29.0]"
Identify the 4 highest numbers of total onboard occupants in incidents.,,,,ERROR,"[524.0, 521.0, 517.0, 469.0]"
What are the 6 highest numbers of ground casualties in incidents?,,,,ERROR,"[1600, 900, 237, 107, 88, 87]"
"Are there any properties with a price over 1,000,000?","Does any property in the dataset have a Precio value greater than 1,000,000?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_precio = (dataset[""Precio""] > 1000000).any()
    return has_high_precio",bool,True,True
Any property with more than 10 bedrooms?,Does any property have a number of bedrooms greater than 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_more_than_10_bedrooms = (dataset[""Habitaciones""] > 10).any()
    return has_more_than_10_bedrooms",bool,True,True
Are there properties with zero bathrooms?,Does the dataset contain any properties where the number of bathrooms is zero?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_zero_bathrooms = dataset[""Baños""].eq(0).any()
    return has_zero_bathrooms",bool,False,False
Has any property been listed for more than 100 days?,Is there at least one property where the duration is greater than 100 days?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_long_duration = (dataset[""Duración""] > 100).any()
    return has_long_duration",bool,True,True
What's the highest price in the dataset?,What is the maximum value in the Precio column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_precio = dataset[""Precio""].max()
    return max_precio",uint32,17000000,17000000.0
What's the total number of properties listed?,How many rows are there in the properties table?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    answer = len(dataset)
    return answer",int64,26026,26026
What's the longest duration a property has been listed?,What is the maximum duration for which a property has been listed in the dataset,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_duration = dataset[""Duración""].max()
return max_duration",uint16,2535,2535.0
What's the largest surface listed?,What is the maximum value of Superficie solar listed in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_superficie_solar = dataset[""Superficie solar""].max()
    return max_superficie_solar",uint32,261000,5504.0
What's the most common type of property listed?,What is the most frequently occurring value in the Tipo column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_tipo = dataset[""Tipo""].mode().iloc[0]
    return most_frequent_tipo",string,Piso,Piso
Which advertiser has listed the most properties?,Which advertiser is associated with the highest number of unique Ids in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    advertiser_counts = dataset['Anunciante'].value_counts()
    max_count_advertiser = advertiser_counts.idxmax()
    
    return max_count_advertiser",string,housell,housell
Which property has the highest price?,Which Id has the maximum Precio value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_precio_id = dataset.loc[dataset[""Precio""] == dataset[""Precio""].max()][""Id""].iloc[0]
return max_precio_id",category,chalet-la_finca-93422633182_102100,GM31-121816
Which property has the largest surface area?,Which property type has the maximum surface area value in the Superficie column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_surface_area = dataset.loc[dataset[""Superficie""].idxmax()]
    property_type = max_surface_area[""Tipo""]
    
    return property_type",string,Chalet rústico,IF5563-FINCA VALLE LOZOYA
What are the five types of properties more frequently listed?,What are the top five most frequent property types listed in the Tipo column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_five_property_types = dataset['Tipo'].value_counts().head(5).index.tolist()
    return top_five_property_types",list of (string),"['Piso', 'Chalet', 'Apartamento', 'Chalet adosado', 'Chalet unifamiliar']","['Piso', 'Chalet', 'Apartamento', 'Chalet adosado', 'Chalet unifamiliar']"
What are the 2 types of properties which are listed more frequently?,What are the two most frequent property types listed in the Tipo column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    tipo_counts = dataset['Tipo'].value_counts()
    most_frequent_tipos = tipo_counts.nlargest(2).index.tolist()
    
    return most_frequent_tipos",list of (string),"['Piso', 'Chalet']","['Piso', 'Chalet']"
What are the 2 most common localities for properties listed?,What are the top 2 most frequent localities for properties in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    locality_counts = dataset[""Localidad""].value_counts()
    top_2_localities = locality_counts.nlargest(2).index.tolist()
    
    return top_2_localities",list of (string),"['Madrid Capital', 'Torrejón de Ardoz']","['Madrid Capital', 'Torrejón de Ardoz']"
What are the 2 most common districts for properties listed?,Which two districts appear most frequently in the property listings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    district_counts = dataset['Distrito'].value_counts()
    top_two_districts = district_counts.nlargest(2).index.tolist()
    
    return top_two_districts",list of (string),"['Centro', 'Salamanca']","['Centro', 'Salamanca']"
What are the 5 highest property prices listed?,What are the top 5 highest Precio values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_precio = dataset.nlargest(5, 'Precio')['Precio'].tolist()
    return top_5_precio",list of (uint32),"[17000000, 13600000, 13250000, 13000000, 12000000]","[17000000.0, 13600000.0, 13250000.0, 13000000.0, 12000000.0]"
List the 3 longest durations properties have been listed.,What are the top 3 longest durations properties have been listed for in the dataset ordered by the Duración column in descending order?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_longest_durations = dataset.nlargest(3, 'Duración')['Duración'].tolist()
    return top_3_longest_durations",list of (uint16),"[2535, 2534, 2285]","[2535.0, 2534.0, 2285.0]"
Identify the 4 largest surfaces listed.,What are the four largest surface areas listed in the Superficie column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    surface_areas = dataset['Superficie'].sort_values(ascending=False).head(4).tolist()
    return surface_areas",list of (uint16),"[5504, 3957, 2974, 2927]","[5504.0, 3957.0, 2974.0, 2927.0]"
What are the 6 highest numbers of bedrooms in properties listed?,What are the six largest numbers of bedrooms in the properties listed in descending order?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    largest_bedrooms = dataset['Habitaciones'].sort_values(ascending=False).unique()[:6].tolist()
    return largest_bedrooms",list of (int64),"[20, 19, 18, 16, 15, 14]","[20, 20, 20, 20, 20, 20]"
Are there more than 2000 customers with a monthly charge higher than $80?,Is the count of customers with monthly charges greater than $80 more than 2000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = len(dataset[dataset[""MonthlyCharges""] > 80])
    return count > 2000",bool,True,True
Do all customers have phone service?,Is the PhoneService attribute set to a value indicating the presence of phone service for every customer in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    phone_service_values = dataset[""PhoneService""].unique()
    has_phone_service = ""Yes"" in phone_service_values
    no_phone_service = ""No"" in phone_service_values
    
    return not no_phone_service",bool,False,True
Are there any customers with no internet service?,Does the dataset contain any customers where the InternetService is None or No?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    internet_service_none_or_no = dataset[dataset[""InternetService""].isin([""None"", ""No""])]
    return not internet_service_none_or_no.empty",bool,True,True
Are there any customers who are senior citizens and have dependents?,Are there any customers where SeniorCitizen is True and Dependents is Yes?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    senior_citizen_and_dependents = dataset[(dataset[""SeniorCitizen""] == 1) & (dataset[""Dependents""] == ""Yes"")]
    return not senior_citizen_and_dependents.empty",bool,True,True
How many unique customers are there in the dataset?,What is the total count of distinct customer IDs in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_distinct_customer_ids = dataset[""customerID""].nunique()
    return total_distinct_customer_ids",int64,7043,7043
What's the highest monthly charge?,What is the maximum value of MonthlyCharges in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_monthly_charges = dataset[""MonthlyCharges""].max()
    return max_monthly_charges",float64,118.75,118.75
What's the total number of customers?,How many unique customer IDs are there in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_customer_ids = dataset[""customerID""].nunique()
    return unique_customer_ids",int64,7043,7043
What's the longest tenure?,What is the maximum tenure of all the customers in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_tenure = dataset[""tenure""].max()
    return max_tenure",uint8,72,72
What's the most common payment method?,Which payment method appears most frequently in the PaymentMethod column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_payment_method = dataset[""PaymentMethod""].mode().iloc[0]
    return most_frequent_payment_method",string,Electronic check,Electronic check
What's the most common contract type?,Which category in the Contract column appears most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_contract = dataset['Contract'].mode().values[0]
    return most_frequent_contract",string,Month-to-month,Month-to-month
Which customer has the highest total charge?,What is the customerID of the customer with the maximum TotalCharges?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_total_charges_customer = dataset.loc[dataset[""TotalCharges""] == dataset[""TotalCharges""].max()]
    customer_id = max_total_charges_customer[""customerID""].iloc[0]

    return customer_id",string,30-11-2888,30-11-2888
Which customer has the highest monthly charge?,What is the customerID of the customer with the maximum MonthlyCharges?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_monthly_charges_customer = dataset.loc[dataset[""MonthlyCharges""] == dataset[""MonthlyCharges""].max()]
    customer_id = max_monthly_charges_customer[""customerID""].iloc[0]

    return customer_id",string,30-11-7568,30-11-7568
What are the top 3 most common internet services?,What are the top three most frequently occurring internet services in the InternetService column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    internet_services = dataset['InternetService'].value_counts().head(3).index.tolist()
    return internet_services",list of (string),"['Fiber optic', 'DSL', 'No']","['Fiber optic', 'DSL', 'No']"
Name the 4 most common payment methods.,What are the top 4 most frequently occurring payment methods in the PaymentMethod column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
payment_methods = dataset[""PaymentMethod""].value_counts().head(4).index.tolist()
return payment_methods",list of (string),"['Electronic check', 'Mailed check', 'Bank transfer (automatic)', 'Credit card (automatic)']","['Electronic check', 'Mailed check', 'Bank transfer (automatic)', 'Credit card (automatic)']"
What are the 2 most common types of contract?,What are the top two most frequent values in the Contract column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    contract_counts = dataset[""Contract""].value_counts()
    top_two_contracts = contract_counts.nlargest(2).index.tolist()
    
    return top_two_contracts",list of (string),"['Month-to-month', 'Two year']","['Month-to-month', 'Two year']"
What are the 2 most common services for which customers have multiple lines?,"Which two services are most frequently used by customers who have multiple lines, considering services such as PhoneService, InternetService, OnlineSecurity, OnlineBackup, DeviceProtection, TechSupport, StreamingTV, and StreamingMovies?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    multiple_lines_customers = dataset[dataset[""MultipleLines""] == ""Yes""]
    services = [""PhoneService"", ""InternetService"", ""OnlineSecurity"", ""OnlineBackup"", ""DeviceProtection"", ""TechSupport"", ""StreamingTV"", ""StreamingMovies""]
    service_counts = []
    for service in services:
        service_counts.append((service, multiple_lines_customers[service].value_counts().index[0]))
    service_counts.sort(key=lambda x: multiple_lines_customers[x[0]].value_counts().iloc[0], reverse=True)
    most_frequent_services = [service_counts[0][0], service_counts[1][0]]
    return most_frequent_services",list of (string),"['PhoneService', 'InternetService']","['No', 'Yes']"
What are the 5 highest total charges?,What are the top 5 highest values in the TotalCharges column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_highest_total_charges = dataset['TotalCharges'].nlargest(5).tolist()
    return top_5_highest_total_charges",list of (float64),"[8684.8, 8672.45, 8670.1, 8594.4, 8564.75]","[8684.8, 8672.45, 8670.1, 8594.4, 8564.75]"
What are the 4 highest monthly charges?,What are the top 4 values in the MonthlyCharges column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_4_monthly_charges = dataset['MonthlyCharges'].nlargest(4).tolist()
    return top_4_monthly_charges",list of (float64),"[118.75, 118.65, 118.6, 118.6]","[118.75, 118.65, 118.6, 118.6]"
What are the 6 longest tenures?,What are the six highest tenure values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    highest_tenure_values = dataset['tenure'].sort_values(ascending=False).head(6).tolist()
    return highest_tenure_values",list of (int64),"[72, 72, 72, 72, 72, 72]","[72, 72, 72, 72, 72, 72]"
What are the 3 shortest tenures?,What are the three smallest tenure values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_tenure_values = dataset['tenure'].nsmallest(3).tolist()
    return smallest_tenure_values",list of (int64),"[0, 0, 0]","[0, 0, 0]"
Is there a listing with a review score rating of 100?,Does any listing have a review score rating of exactly 100?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_perfect_review_score = (dataset[""review_scores_rating""] == 100).any()
    return has_perfect_review_score",bool,True,True
Are there any hosts who have listed more than 10 properties?,Does any host have a host_total_listings_count greater than 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_host_with_more_than_10_listings = (dataset[""host_total_listings_count""] > 10).any()
    return has_host_with_more_than_10_listings",bool,True,True
Are all listings instantly bookable?,Is the instant_bookable attribute True for all listings in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    all_instant_bookable = (dataset[""instant_bookable""] == ""t"").all()
    return all_instant_bookable",bool,False,False
Is there a listing that requires a minimum of 365 nights?,Does any listing have a minimum nights requirement of 365 or more?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_minimum_nights_365_or_more = (dataset[""minimum_nights""] >= 365).any()
    return has_minimum_nights_365_or_more",bool,True,True
How many unique hosts are there in the dataset?,What is the number of distinct host_id values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_host_ids = dataset[""host_id""].nunique()
    return distinct_host_ids",int64,26765,26765
What is the highest number of listings a single host has?,What is the maximum value of host_total_listings_count in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_host_total_listings_count = dataset[""host_total_listings_count""].max()
return int(max_host_total_listings_count)",int64,2739,2739.0
How many unique locations are listed by the hosts?,What is the number of distinct host locations listed by the hosts in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_host_locations = dataset[""host_location""].nunique()
    return distinct_host_locations",int64,1316,1316
What is the average review score rating across all listings?,What is the mean value of the review_scores_rating across all the listings in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_review_score = dataset[""review_scores_rating""].mean()
    return mean_review_score",float64,93.76718800000000,93.767188
What is the most common host location?,What is the host location that appears most frequently in the host_location column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_host_location = dataset[""host_location""].mode().iloc[0]
    return most_frequent_host_location",string,"New York, New York, United States","New York, New York, United States"
What is the name of the listing with the most bedrooms?,What is the name of the listing that has the maximum number of bedrooms?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_bedrooms_listing = dataset.loc[dataset[""bedrooms""] == dataset[""bedrooms""].max()]
    name_of_listing = max_bedrooms_listing[""name""].iloc[0]

    return name_of_listing",string,"Walk to UN, Macy's & Empire State B","Walk to UN, Macy's & Empire State B"
Which location has the highest number of listings?,What is the city or neighbourhood with the highest count of listings in the given airbnb dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    city_counts = dataset[""city""].value_counts()
    neighbourhood_counts = dataset[""neighbourhood""].value_counts()
    max_city_count = city_counts.max()
    max_neighbourhood_count = neighbourhood_counts.max()
    
    if max_city_count > max_neighbourhood_count:
        answer = city_counts.idxmax()
    elif max_neighbourhood_count > max_city_count:
        answer = neighbourhood_counts.idxmax()
    else:
        city_max = city_counts.idxmax()
        neighbourhood_max = neighbourhood_counts.idxmax()
        answer = city_max if len(city_max) < len(neighbourhood_max) else neighbourhood_max
        
    return answer",string,New York,"New York, New York, United States"
What is the most common property type?,What is the property type that appears most frequently in the property_type column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_property_type = dataset[""property_type""].mode().iloc[0]
    return most_frequent_property_type",string,Entire apartment,Entire apartment
What are the top 6 unique host locations with the most listings?,What are the top 6 unique host locations that have the highest number of listings in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    host_location_counts = dataset['host_location'].value_counts()
    top_6_host_locations = host_location_counts.nlargest(6).index.tolist()
    
    return top_6_host_locations",list of (string),"['New York, New York, United States', 'US', 'Brooklyn, New York, United States', 'Queens, New York, United States', 'Los Angeles, California, United States', 'Bronx, New York, United States']","['New York, New York, United States', 'US', 'Brooklyn, New York, United States', 'Queens, New York, United States', 'Los Angeles, California, United States', 'Bronx, New York, United States']"
What are the 2 unique host locations with the most listings?,What are the two most frequent unique host locations based on the total number of listings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    host_location_counts = dataset[""host_location""].value_counts()
    top_two_host_locations = host_location_counts.nlargest(2).index.tolist()
    
    return top_two_host_locations",list of (string),"['New York, New York, United States', 'US']","['New York, New York, United States', 'US']"
List the 4 most common property types.,What are the top 4 most frequent property types in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    property_type_counts = dataset[""property_type""].value_counts()
    top_4_property_types = property_type_counts.nlargest(4).index.tolist()
    
    return top_4_property_types",list of (string),"['Entire apartment', 'Private room in apartment', 'Private room in house', 'Private room in townhouse']","['Entire apartment', 'Private room in apartment', 'Entire condominium', 'Entire house']"
What are the 2 most common types of properties?.,What are the top two most frequent property types in the property_type category?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    property_type_counts = dataset[""property_type""].value_counts()
    top_two_property_types = property_type_counts.nlargest(2).index.tolist()
    
    return top_two_property_types",list of (string),"['Entire apartment', 'Private room in apartment']","['Entire apartment', 'Private room in apartment']"
What are the top 3 highest review score ratings?,What are the top three highest values in the review_scores_rating column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_three_highest_ratings = dataset['review_scores_rating'].nlargest(3).tolist()
    return top_three_highest_ratings",list of (float64),"[100.0, 100.0, 100.0]","[100, 100, 100]"
What are the 5 lowest number of minimum nights required?,What are the five smallest values in the minimum_nights column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_nights = dataset[""minimum_nights""].nsmallest(5).tolist()
    return min_nights",list of (int64),"[1, 1, 1, 1, 1]","[1, 1, 1, 1, 1]"
What are the 4 highest unique number of bedrooms listed?,,,,ERROR,"[21, 14, 13, 11]"
What are the 6 lowest review scores given because of locations?,What are the six lowest review scores for location given in the review_scores_location column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_six_review_scores = dataset['review_scores_location'].nsmallest(6).tolist()
    return lowest_six_review_scores",list of (float64),"[2.0, 2.0, 2.0, 2.0, 2.0, 2.0]","[2, 2, 2, 2, 2, 2]"
Was there a day when the minimum temperature was below zero and it didn't rain?,Does any day exist where the minimum temperature was less than zero and the precipitation was zero?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    result = (dataset[""tmin""] < 0) & (dataset[""prec""] == 0)
    return result.any()",bool,True,True
Are there records where the solar radiation exceeds 10 but the maximum temperature was below 20?,Are there any records in the climate dataset where the solar radiation value in the sol column is greater than 10 and the maximum temperature in the tmax column is less than 20?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    result = (dataset[""sol""] > 10) & (dataset[""tmax""] < 20)
    return result.any()",bool,True,True
Did any day with maximum wind speed above 15 also have average wind speed below 5?,"Are there any days where the maximum wind speed, racha, is greater than 15 and the average wind speed, velmedia, is less than 5?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    days_with_high_racha_and_low_velmedia = dataset[(dataset[""racha""] > 15) & (dataset[""velmedia""] < 5)]
    return not days_with_high_racha_and_low_velmedia.empty",bool,True,True
Were there days in the summer where the minimum temperature dropped below 10?,Were there any summer days where the minimum temperature was less than 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    summer_days = dataset[dataset[""season""] == ""summer""]
    min_temp_less_than_10 = summer_days[summer_days[""tmin""] < 10]
    
    return not min_temp_less_than_10.empty",bool,False,True
How many days had a maximum temperature above 30 degrees?,What is the count of days where the maximum temperature exceeds 30 degrees?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count_days = len(dataset[dataset[""tmax""] > 30])
    return count_days",int64,5500,5500
"On average, what's the minimum temperature during winters?",What is the average of the minimum temperatures recorded during the winter season?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    winter_season_data = dataset[dataset[""season""] == ""winter""]
    average_min_temp = winter_season_data[""tmin""].mean()

    return average_min_temp",float64,,2.7196080000000000
How many unique days had solar radiation measurements?,What is the number of distinct days for which solar radiation measurements are available in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_days = dataset['fecha'].dt.date.nunique()
    return distinct_days",int64,36858,28615
What's the highest wind speed ever recorded?,"What is the maximum value of the racha column, which represents the highest wind speed ever recorded?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_racha_value = dataset[""racha""].max()
    return max_racha_value",float64,32.2,32.2
On which weekday did the highest temperature ever occur?,What is the weekday name when the maximum temperature ever recorded occurred?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_temp_individual = dataset.loc[dataset[""tmax""] == dataset[""tmax""].max()]
    weekday_name = max_temp_individual[""weekday_name""].iloc[0]

    return weekday_name",category,Friday,Friday
In which season do we find the highest average solar radiation?,Which season has the highest average solar radiation value in the sol column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_sol_by_season = dataset.groupby(""season"")[""sol""].mean()
    max_avg_sol_season = avg_sol_by_season.idxmax()

    return max_avg_sol_season",category,Summer,Summer
Which month had the lowest average wind speed?,What is the month_name with the minimum average velmedia wind speed?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_velmedia = dataset.groupby(""month_name"")[""velmedia""].mean()
    min_avg_velmedia_month = avg_velmedia.idxmin()

    return min_avg_velmedia_month",string,October,October
On what date was the highest pressure ever recorded?,What is the fecha value corresponding to the maximum presMax value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_pres_max_fecha = dataset.loc[dataset[""presMax""].idxmax()][""fecha""]
    return max_pres_max_fecha",datetime64[us],22-12-2016,22-12-2016
What are the top 3 months with the highest average maximum temperatures?,What are the names of the top 3 months with the highest average tmax temperatures?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_tmax_temperatures = dataset.groupby(""month_name"")[""tmax""].mean().reset_index()
    top_3_months = average_tmax_temperatures.nlargest(3, ""tmax"")
    top_3_month_names = top_3_months[""month_name""].tolist()

    return top_3_month_names",list of (string),"['July', 'August', 'June']","['July', 'August', 'June']"
"Which are the 5 weekdays with the most rain, ranked from highest to lowest?","What are the top 5 weekday names with the highest total precipitation, ordered from highest to lowest?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    weekday_precipitation = dataset.groupby(""weekday_name"")[""prec""].sum().reset_index()
    top_5_weekdays = weekday_precipitation.sort_values(by=""prec"", ascending=False).head(5)
    top_5_weekday_names = top_5_weekdays[""weekday_name""].tolist()

    return top_5_weekday_names",list of (string),"['Friday', 'Sunday', 'Saturday', 'Thursday', 'Wednesday']","['Friday', 'Sunday', 'Saturday', 'Thursday', 'Wednesday']"
"List the 4 seasons ranked by average solar radiation, from highest to lowest.",What are the names of the 4 seasons ordered by their mean solar radiation in descending order?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_sol_by_season = dataset.groupby(""season"")[""sol""].mean().reset_index()
    mean_sol_by_season = mean_sol_by_season.sort_values(by=""sol"", ascending=False)
    top_4_seasons = mean_sol_by_season.head(4)
    season_names = top_4_seasons[""season""].tolist()

    return season_names",list of (string),"['Summer', 'Spring', 'Autumn', 'Winter']","['Summer', 'Spring', 'Autumn', 'Winter']"
Which 2 months recorded the lowest average minimum temperatures?,What are the names of the two months with the lowest average minimum temperature values in the climate dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_tmin = dataset.groupby(""month_name"")[""tmin""].mean().reset_index()
    avg_tmin = avg_tmin.sort_values(by=""tmin"")
    lowest_two_months = avg_tmin.head(2)[""month_name""].tolist()
    
    return lowest_two_months",list of (string),"['January', 'December']","['January', 'December']"
List the top 5 recorded maximum temperatures.,What are the five highest recorded tmax temperatures in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    tmax_temperatures = dataset[""tmax""].sort_values(ascending=False).head(5).tolist()
    return tmax_temperatures",list of (float64),"[40.7, 40.6, 40.0, 40.0, 40.0]","[40.7, 40.6, 40.0, 40.0, 40.0]"
What are the 4 lowest wind speeds ever recorded?,"What are the four smallest values in the velmedia column, which represents the average wind speed?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_velmedia_values = dataset['velmedia'].nsmallest(4).tolist()
    return smallest_velmedia_values",list of (float64),"[0.0, 0.0, 0.0, 0.0]","[0.0, 0.0, 0.0, 0.0]"
Rank the highest 3 solar radiation measurements.,"What are the top 3 highest solar radiation measurements in the dataset, as represented by the sol column?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_sol = dataset['sol'].nlargest(3).tolist()
    return top_3_sol",list of (float64),"[14.9, 14.8, 14.7]","[14.9, 14.8, 14.7]"
Which 6 days of the year (numbered from 1 to 365/366) had the highest average temperatures?,What are the day of the year numbers for the 6 days with the highest average temperatures?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_6_days = dataset.nlargest(6, 'tmed')
    day_of_year_numbers = top_6_days['dayofyear'].tolist()
    
    return day_of_year_numbers",list of (int64),"[215, 168, 223, 179, 232, 201]","[209, 210, 208, 207, 211, 205]"
"Are there records where the RETRINOIN_xRZI exceeds 10,000?","Does any record in the dataset have a value greater than 10,000 for the RETRINOIN_xRZI column?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_value_greater_than_10000 = (dataset[""RETRINOIN_xRZI""] > 10000).any()
    return has_value_greater_than_10000",bool,True,True
Are there any female respondents who belong to the ESTE NUTS1 region?,Does the dataset contain any female respondents where the NUTS1 region is ESTE?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
female_respondents = dataset[(dataset[""SEXO""] == ""female"") & (dataset[""NUTS1""] == ""ESTE"")]
return not female_respondents.empty",bool,False,True
Do we have respondents who fall under both PRIVADO control and NACIONAL market?,Are there any respondents with CONTROL set to PRIVADO and MERCADO set to NACIONAL?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    respondents = dataset[(dataset[""CONTROL""] == ""PRIVADO"") & (dataset[""MERCADO""] == ""NACIONAL"")]
    return not respondents.empty",bool,True,True
"Are there records with RETRINOIN_WwQk less than 5,000?",Does the dataset contain any records where the value of RETRINOIN_WwQk is less than 5000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_retrinoin_w_wqk_less_than_5000 = (dataset[""RETRINOIN_WwQk""] < 5000).any()
    return has_retrinoin_w_wqk_less_than_5000",bool,True,True
How many unique respondents belong to the ESTE NUTS1 region?,What is the number of distinct respondents in the dataset where the NUTS1 region is ESTE?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_respondents = dataset[dataset[""NUTS1""] == ""ESTE""][""RESPONSA""].nunique()
    return distinct_respondents",int64,2,58852
"On average, what's the RETRINOIN value for male respondents?",What is the mean RETRINOIN value for respondents where SEXO is male?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    male_respondents = dataset[dataset[""SEXO""] == ""male""]
    mean_retrinoin = male_respondents[""RETRINOIN""].mean()

    return mean_retrinoin",float64,,29370.243704000000
What's the highest value for RETRINOIN_ac1q in the dataset?,What is the maximum value of the RETRINOIN_ac1q column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_value = dataset[""RETRINOIN_ac1q""].max()
    return max_value",float64,199496.34,199496.34
How many unique clusters are present in the 'umap_cluster' column?,What is the number of distinct categories in the 'umap_cluster' column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_categories = dataset[""umap_cluster""].nunique()
    return distinct_categories",int64,73,73
Which 'ANOS2' category has the most number of respondents?,What is the 'ANOS2' category with the highest frequency of occurrence in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    anos2_counts = dataset[""ANOS2""].value_counts()
    most_frequent_anos2 = anos2_counts.idxmax()

    return most_frequent_anos2",string,DE 40 A 49,DE 40 A 49
In which 'NUTS1' region do we find the highest average RETRINOIN?,Which 'NUTS1' region has the highest average 'RETRINOIN' value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_retrinoins = dataset.groupby(""NUTS1"")[""RETRINOIN""].mean()
    max_average_retrinoins_region = average_retrinoins.idxmax()

    return max_average_retrinoins_region",string,COMUNIDAD DE MADRID,COMUNIDAD DE MADRID
Which 'MERCADO' category is the least common in the dataset?,What is the 'MERCADO' category with the lowest frequency in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mercado_counts = dataset[""MERCADO""].value_counts()
    lowest_frequency_mercado = mercado_counts.idxmin()

    return lowest_frequency_mercado",string,UNIÓN EUROPEA,UNIÓN EUROPEA
Which 'umap_cluster' is the most dominant in the dataset?,What is the 'umap_cluster' that appears most frequently in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_umap_cluster = dataset['umap_cluster'].mode().iloc[0]
    return most_frequent_umap_cluster",string,Cluster 1,Cluster 1
Which are the 2 least common age categories in the dataset?,"What are the two least frequent categories of age in the dataset, based on the ANOS2 column?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    anos2_counts = dataset[""ANOS2""].value_counts()
    least_frequent_anos2 = anos2_counts.nsmallest(2).index.tolist()
    
    return least_frequent_anos2",list of (string),"['MENOS 19 AÑOS', 'MÁS DE 59']","['MENOS 19 AÑOS', 'MÁS DE 59']"
Which are the 3 least common 'ANOS2' categories in the dataset?,What are the three least frequent categories in the 'ANOS2' column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    anos2_counts = dataset[""ANOS2""].value_counts()
    least_frequent_categories = anos2_counts.nsmallest(3).index.tolist()
    
    return least_frequent_categories",list of (string),"['MENOS 19 AÑOS', 'MÁS DE 59', 'DE 20 A 29']","['MENOS 19 AÑOS', 'MÁS DE 59', 'DE 20 A 29']"
List the top 5 'NUTS1' regions by frequency.,What are the top 5 most frequent 'NUTS1' regions in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_nuts1_regions = dataset['NUTS1'].value_counts().head(5).index.tolist()
    return top_5_nuts1_regions",list of (string),"['ESTE', 'COMUNIDAD DE MADRID', 'NORESTE', 'SUR', 'CENTRO']","['ESTE', 'COMUNIDAD DE MADRID', 'NORESTE', 'SUR', 'CENTRO']"
Which 2 'umap_cluster' categories are the least represented?,What are the two least frequent categories in the 'umap_cluster' column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    umap_cluster_counts = dataset['umap_cluster'].value_counts()
    least_frequent_categories = umap_cluster_counts.nsmallest(2).index.tolist()
    
    return least_frequent_categories",list of (string),"['Cluster 71', 'Cluster 73']","['Cluster 71', 'Cluster 73']"
List the top 5 recorded RETRINOIN values.,What are the five highest recorded values in the RETRINOIN column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_five_retrinoin = dataset['RETRINOIN'].nlargest(5).tolist()
    return top_five_retrinoin",list of (float64),"[4225998.36, 4153877.05, 4021902.63, 3903390.45, 2192967.2]","[4225998.36, 4153877.05, 4021902.63, 3903390.45, 2192967.2]"
What are the 4 lowest x values in the dataset?,What are the four smallest values in the x column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_x_values = dataset['x'].nsmallest(4).tolist()
    return smallest_x_values",list of (float64),"[-23714.217, -23706.5, -23698.271, -23697.166]","[-23714.217, -23706.5, -23698.271, -23697.166]"
Rank the highest 3 y values in the dataset.,What are the top 3 y values in the dataset in descending order?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_y_values = dataset['y'].sort_values(ascending=False).head(3).tolist()
    return top_3_y_values",list of (float64),"[28352.02, 28313.926, 28283.78]","[28352.02, 28313.926, 28283.78]"
What are the largest 2 y values in the dataset?.,What are the two largest values in the y column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    two_largest_y_values = dataset['y'].nlargest(2).tolist()
    return two_largest_y_values",list of (float64),"[28352.02, 28313.926]","[28352.02, 28313.926]"
Is the most visited URL related to 'no code data science'?,Does the URL with the highest average monthly searches contain the keyword 'no code data science'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_searches_url = dataset.loc[dataset[""Avg. monthly searches""] == dataset[""Avg. monthly searches""].max()]
max_searches_keyword = max_searches_url[""Keyword""].values[0]
contains_keyword = 'no code data science' in max_searches_keyword

return contains_keyword",bool,True,True
Does any URL have a competition level of 'Low'?,Is there any URL with a competition level of 'Low' in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    low_competition_urls = dataset[dataset[""Competition""] == ""Low""]
    return not low_competition_urls.empty",bool,True,True
Are there any URLs with an average monthly searches above 1000?,Does any URL have an average monthly searches value greater than 1000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_searches = (dataset[""Avg. monthly searches""] > 1000).any()
    return has_high_searches",bool,False,False
Is the URL with the lowest ranking also the one with the highest monthly searches?,Does the URL with the minimum ranking value also have the maximum average monthly searches value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_ranking_url = dataset.loc[dataset[""Ranking""] == dataset[""Ranking""].min()]
    max_avg_monthly_searches_url = dataset.loc[dataset[""Avg. monthly searches""] == dataset[""Avg. monthly searches""].max()]
    
    return min_ranking_url[""URLs""].values[0] == max_avg_monthly_searches_url[""URLs""].values[0]",bool,True,True
How many unique URLs are in the dataset?,What is the number of distinct URLs present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_urls = dataset[""URLs""].nunique()
    return distinct_urls",int64,28,28
What is the lowest ranking value in the dataset?,What is the minimum value of the Ranking column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_ranking = dataset[""Ranking""].min()
    return min_ranking",uint8,1,11
What is the minimum average monthly searches in the dataset?,What is the lowest average monthly searches value present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_avg_monthly_searches = dataset[""Avg. monthly searches""].min()
    return lowest_avg_monthly_searches",uint8,50,50
How many unique keywords are present in the dataset?,What is the number of distinct keywords present in the Keyword column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_keywords = dataset[""Keyword""].nunique()
    return distinct_keywords",int64,6,6
What is the competition level of the highest-ranked URL?,What is the competition category of the URL with the highest ranking?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    highest_ranking_url = dataset.loc[dataset[""Ranking""] == dataset[""Ranking""].max()]
    competition_category = highest_ranking_url[""Competition""].iloc[0]

    return competition_category",string,Low,Medium
What keyword has the highest average monthly searches?,Which keyword has the maximum average monthly searches?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_searches_keyword = dataset.loc[dataset[""Avg. monthly searches""] == dataset[""Avg. monthly searches""].max()]
max_searches_keyword = max_searches_keyword[""Keyword""].iloc[0]

return max_searches_keyword",string,no code data science,no code data science
What is the competition level for the URL with the highest ranking?,What is the competition category for the URL with the highest ranking value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    highest_ranking_url = dataset.loc[dataset[""Ranking""] == dataset[""Ranking""].max()]
    competition_category = highest_ranking_url[""Competition""].iloc[0]

    return competition_category",category,Low,Low
What keyword is associated with the URL with the lowest ranking?,What is the keyword associated with the URL that has the minimum ranking?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_ranking_url = dataset.loc[dataset[""Ranking""] == dataset[""Ranking""].min()]
keyword = min_ranking_url[""Keyword""].iloc[0]

return keyword",category,no code data science,no code data science
What are the top 3 URLs with the highest average monthly searches?,What are the top three URLs based on their average monthly searches in descending order?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_three_urls = dataset.sort_values(by=""Avg. monthly searches"", ascending=False).head(3)
top_three_urls = top_three_urls[""URLs""].tolist()

return top_three_urls",list of (string),"['https://www.obviously.ai/', 'https://datrics.ai/', 'https://analyticsindiamag.com/top-12-no-code-machine-learning-platforms-in-2021/']","['https://www.obviously.ai/', 'https://venturebeat.com/2021/10/12/no-code-ai-startup-obviously-ai-raises-4-7m/', 'https://hbr.org/2021/11/how-no-code-platforms-could-disrupt-the-it-industry']"
List the bottom 2 competition levels of URLs with ranking better than 5.,What are the two lowest competition levels of URLs where the ranking is greater than 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_dataset = dataset[dataset[""Ranking""] > 5]
    lowest_competition_urls = filtered_dataset.sort_values(by=""Competition"").head(2)
    competition_levels = lowest_competition_urls[""Competition""].tolist()

    return competition_levels",list of (string),"['Medium', 'Medium']","['Medium', 'Unknown']"
Which are the 4 keywords associated with the URLs of lowest rankings?,What are the four keywords corresponding to the URLs with the lowest ranking values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_ranking_urls = dataset.loc[dataset[""Ranking""] == dataset[""Ranking""].min()]
    keywords = lowest_ranking_urls[""Keyword""].tolist()
    four_keywords = keywords[:4]
    return four_keywords",list of (string),"['no code data science', 'no code data analytics', 'no code analytics', 'no code data science tools']","['no code data science', 'no code data analytics', 'no code data science', 'no code data science']"
Enumerate the 3 URLs with the highest ranking.,What are the top 3 URLs based on their ranking?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_3_urls = dataset.sort_values(by='Ranking').head(3)['URLs'].tolist()
return top_3_urls",list of (string),"['https://www.obviously.ai/', 'https://hbr.org/2021/11/how-no-code-platforms-can-bring-ai-to-small-and-midsize-businesses', 'https://www.obviously.ai/']","['https://www.obviously.ai/', 'https://www.obviously.ai/', 'https://venturebeat.com/2021/10/12/no-code-ai-startup-obviously-ai-raises-4-7m/']"
What are the lowest 4 rankings associated with the keyword 'no code data science'?,What are the four lowest rankings in the dataset where the keyword is 'no code data science'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_dataset = dataset[dataset[""Keyword""] == ""no code data science""]
    lowest_rankings = filtered_dataset[""Ranking""].nsmallest(4).tolist()
    
    return lowest_rankings",list of (int64),"[1, 2, 3, 4]","[10, 9, 8, 7]"
List the bottom 3 average monthly searches for URLs with medium competition.,What are the three lowest average monthly searches for URLs where the competition level is medium?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    medium_competition_urls = dataset[dataset[""Competition""] == ""medium""]
    lowest_searches = medium_competition_urls.nsmallest(3, ""Avg. monthly searches"")[""Avg. monthly searches""].tolist()
    
    return lowest_searches",list of (uint8),[],"[50, 50, 50]"
Provide the lowest 5 rankings of URLs with low competition (if any).,What are the URLs with the lowest 5 rankings that have low competition?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    low_competition_urls = dataset[(dataset[""Competition""] == ""low"")].sort_values(by=""Ranking"").head(5)
    urls = low_competition_urls[""URLs""].tolist()
    
    return urls",list of (string),[],"[11, 10, 10, 9, 9]"
Specify the bottom 2 average monthly searches for URLs with the highest rankings.,What are the two lowest average monthly searches among the URLs with the highest ranking?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    highest_ranking = dataset[""Ranking""].max()
    highest_ranking_urls = dataset[dataset[""Ranking""] == highest_ranking]
    lowest_searches = highest_ranking_urls[""Avg. monthly searches""].nsmallest(2).tolist()
    
    return lowest_searches",list of (uint8),"[50, 50]","[50, 50]"
Is there any wine with a quality rating of 10?,Does the dataset contain any wine samples with a quality rating of 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_quality = dataset[""quality""].max()
    has_quality_10 = max_quality >= 10 and (dataset[""quality""] == 10).any()

    return has_quality_10",bool,False,False
Are there any wines with residual sugar above 15g/dm^3?,Does the dataset contain any wines where the residual sugar level exceeds 15g/dm^3?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    wines_with_high_residual_sugar = dataset[dataset[""residual sugar""] > 15]
    return not wines_with_high_residual_sugar.empty",bool,True,True
Is the highest alcohol content wine also the one with the highest quality rating?,Does the wine with the maximum alcohol content also have the maximum quality rating?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_alcohol_wine = dataset.loc[dataset[""alcohol""] == dataset[""alcohol""].max()]
    max_quality_wine = dataset.loc[dataset[""quality""] == dataset[""quality""].max()]
    
    return max_alcohol_wine.index.isin(max_quality_wine.index).any()",bool,False,False
Does any wine have a pH level below 2.5?,Is there at least one wine sample with a pH value less than 2.5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_low_pH = (dataset[""pH""] < 2.5).any()
    return has_low_pH",bool,False,False
How many unique quality ratings are there in the dataset?,What is the number of distinct values in the quality column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_quality_values = dataset[""quality""].nunique()
    return distinct_quality_values",int64,6,6
What is the maximum fixed acidity level found in the dataset?,What is the highest value of fixed acidity in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    highest_fixed_acidity = dataset[""fixed acidity""].max()
    return highest_fixed_acidity",float64,15.9,15.9
What is the minimum volatile acidity level in the dataset?,What is the lowest value of volatile acidity in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_volatile_acidity = dataset[""volatile acidity""].min()
    return lowest_volatile_acidity",float64,0.12,0.12
How many wines have free sulfur dioxide above 50 mg/dm^3?,What is the count of wines where the free sulfur dioxide level is greater than 50 mg/dm^3?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = len(dataset[dataset[""free sulfur dioxide""] > 50])
    return count",int64,16,16
What is the quality rating of the wine with the highest alcohol content?,What is the quality rating of the wine sample with the maximum alcohol content?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_alcohol_wine = dataset.loc[dataset[""alcohol""] == dataset[""alcohol""].max()]
    quality_rating = max_alcohol_wine[""quality""].values[0]

    return quality_rating",uint8,5,5
What is the quality rating of the wine with the highest fixed acidity?,What is the quality rating of the wine sample that has the highest fixed acidity value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_fixed_acidity_wine = dataset.loc[dataset[""fixed acidity""] == dataset[""fixed acidity""].max()]
quality_rating = max_fixed_acidity_wine[""quality""].values[0]

return quality_rating",uint8,5,5
What is the quality rating of the wine with the lowest volatile acidity?,What is the quality rating of the wine sample that has the minimum volatile acidity value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_volatile_acidity_wine = dataset.loc[dataset[""volatile acidity""] == dataset[""volatile acidity""].min()]
quality_rating = min_volatile_acidity_wine[""quality""].values[0]

return quality_rating",uint8,7,7
What is the quality rating of the wine with the highest pH level?,What is the quality rating of the wine sample with the maximum pH level?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_pH_wine = dataset.loc[dataset[""pH""] == dataset[""pH""].max()]
quality_rating = max_pH_wine[""quality""].values[0]

return quality_rating",uint8,6,6
List the quality ratings of the top 3 wines with the highest alcohol content.,What are the quality ratings of the top three wines with the highest alcohol content in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_three_wines = dataset.nlargest(3, 'alcohol')
    quality_ratings = top_three_wines['quality'].tolist()
    
    return quality_ratings",list of (uint8),"[5, 6, 6]","['5', '6', '6']"
Enumerate the quality ratings of the bottom 2 wines with the lowest residual sugar.,What are the quality ratings of the two wines with the lowest residual sugar levels?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_sugar_wines = dataset.nsmallest(2, 'residual sugar')
    quality_ratings = lowest_sugar_wines['quality'].tolist()
    
    return quality_ratings",list of (uint8),"[6, 6]","['6', '6']"
Which are the quality ratings of the top 5 wines with the highest density?,What are the quality ratings of the top 5 wines with the highest density values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_5_wines = dataset.nlargest(5, 'density')
quality_ratings = top_5_wines['quality'].tolist()
return quality_ratings",list of (uint8),"[6, 6, 7, 5, 5]","['6', '6', '7', '5', '5']"
List the quality ratings of the bottom 4 wines with the lowest pH level.,What are the quality ratings of the four wines with the lowest pH levels in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_ph_wines = dataset.nsmallest(4, 'pH')
    quality_ratings = lowest_ph_wines['quality'].tolist()
    
    return quality_ratings",list of (uint8),"[4, 6, 6, 8]","['4', '6', '6', '8']"
What are the alcohol contents of the top 4 wines with the highest quality ratings?,What are the alcohol levels of the top 4 wines ranked by their quality ratings in descending order?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_4_wines = dataset.sort_values(by='quality', ascending=False).head(4)
alcohol_levels = top_4_wines['alcohol'].tolist()
return alcohol_levels",list of (float64),"[11.0, 10.0, 12.9, 12.5]","['12.8', '12.6', '12.9', '9.8']"
List the volatile acidity levels of the bottom 3 wines with the lowest quality ratings.,What are the volatile acidity levels of the three wines with the lowest quality ratings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_quality_wines = dataset.nsmallest(3, 'quality')
    volatile_acidity_levels = lowest_quality_wines['volatile acidity'].tolist()
    
    return volatile_acidity_levels",list of (float64),"[0.58, 0.61, 1.185]","['0.58', '0.61', '1.185']"
Enumerate the fixed acidity levels of the top 5 wines with the highest quality ratings.,What are the fixed acidity levels of the top 5 wines ranked by their quality ratings in descending order?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_wines = dataset.sort_values(by='quality', ascending=False).head(5)
    fixed_acidity_levels = top_5_wines['fixed acidity'].tolist()
    
    return fixed_acidity_levels",list of (float64),"[10.7, 7.2, 5.6, 9.1, 8.6]","['7.9', '10.3', '5.6', '12.6', '11.3']"
Provide the residual sugar levels of the bottom 2 wines with the lowest quality ratings.,What are the residual sugar levels of the two wines with the lowest quality ratings in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
lowest_quality_wines = dataset.nsmallest(2, 'quality')
residual_sugar_levels = lowest_quality_wines['residual sugar'].tolist()
return residual_sugar_levels",list of (float64),"[2.2, 2.1]","['2.2', '2.1']"
Is there any purchase with a total cost above 1000?,Does any purchase have a total cost greater than 1000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_costs = dataset[""Total""]
    has_total_greater_than_1000 = (total_costs > 1000).any()

    return has_total_greater_than_1000",bool,True,True
Are there any customers who made a purchase using cash?,Does the payment method include cash for any customer transaction?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    payment_methods = dataset[""Payment""].unique()
    includes_cash = ""Cash"" in payment_methods or ""cash"" in payment_methods

    return includes_cash",bool,True,True
Is the customer with the highest total purchase cost a 'Member'?,Does the customer with the maximum total purchase cost have a customer type of 'Member'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_total_purchase = dataset.loc[dataset[""Total""] == dataset[""Total""].max()]
    customer_type = max_total_purchase[""Customer type""].values[0]
    is_member = customer_type == 'Member'

    return is_member",bool,True,True
Does any customer with a rating strictly above 9 use 'Ewallet' as their payment method?,Is there at least one customer who has a rating greater than 9 and uses Ewallet as their payment method?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    ewallet_customers = dataset[(dataset[""Payment""] == ""Ewallet"") & (dataset[""Rating""] > 9)]
    return not ewallet_customers.empty",bool,True,True
How many unique branches are there in the dataset?,What is the number of distinct values in the Branch column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_branches = dataset[""Branch""].nunique()
    return distinct_branches",int64,3,3
What is the maximum quantity of products bought in a single purchase?,What is the maximum value in the Quantity column across all purchases?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_quantity = dataset[""Quantity""].max()
return int(max_quantity)",int64,10,10
What is the minimum total cost of a purchase in the dataset?,What is the smallest value in the Total column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_total = dataset[""Total""].min()
    return smallest_total",float64,10.6785,10.6785
How many purchases were made in Yangon city?,What is the total count of purchases made in the city of Yangon?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    yangon_purchases = dataset[dataset[""City""] == ""Yangon""]
    total_count = len(yangon_purchases)

    return total_count",int64,340,340
What is the payment method used for the purchase with the highest total cost?,What payment method corresponds to the purchase with the maximum total cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_total_cost_purchase = dataset.loc[dataset[""Total""] == dataset[""Total""].max()]
    payment_method = max_total_cost_purchase[""Payment""].iloc[0]

    return payment_method",category,Credit card,Credit card
What is the product line of the purchase with the highest total cost?,What is the product line associated with the purchase that has the maximum total cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_total_cost_purchase = dataset.loc[dataset[""Total""] == dataset[""Total""].max()]
    product_line = max_total_cost_purchase[""Product line""].iloc[0]

    return product_line",category,Fashion accessories,Fashion accessories
What is the customer type of the purchase with the lowest total cost?,What is the customer type associated with the purchase that has the minimum total cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_total_cost_purchase = dataset.loc[dataset[""Total""] == dataset[""Total""].min()]
customer_type = min_total_cost_purchase[""Customer type""].iloc[0]

return customer_type",category,Member,Member
What is the gender of the customer with the highest total purchase cost?,What is the gender category of the customer who has the maximum total purchase cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_total_purchase_cost_customer = dataset.loc[dataset[""Total""] == dataset[""Total""].max()]
    gender_category = max_total_purchase_cost_customer[""Gender""].iloc[0]

    return gender_category",category,Female,Female
List the payment methods of the top 3 purchases with the highest total cost.,What are the payment methods used for the top 3 transactions with the highest total cost in the supermarket dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_transactions = dataset.nlargest(3, 'Total')
    payment_methods = top_3_transactions['Payment'].tolist()
    
    return payment_methods",list of (string),"['Credit card', 'Credit card', 'Ewallet']","['Credit card', 'Credit card', 'Ewallet']"
Enumerate the product lines of the bottom 2 purchases with the lowest total cost.,What are the product lines associated with the two purchases that have the smallest total cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_two_purchases = dataset.nsmallest(2, 'Total')
    product_lines = smallest_two_purchases['Product line'].tolist()
    
    return product_lines",list of (string),"['Sports and travel', 'Fashion accessories']","['Sports and travel', 'Fashion accessories']"
Which are the customer types of the top 5 purchases with the highest total cost?,What are the customer types associated with the top 5 purchases that have the highest total cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_purchases = dataset.nlargest(5, 'Total')
    customer_types = top_5_purchases['Customer type'].tolist()
    
    return customer_types",list of (string),"['Member', 'Normal', 'Member', 'Normal', 'Normal']","['Member', 'Normal', 'Member', 'Normal', 'Normal']"
List the genders of the bottom 4 purchases with the lowest total cost.,What are the genders associated with the four purchases that have the lowest total cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_total_cost_purchases = dataset.nsmallest(4, 'Total')
    genders = lowest_total_cost_purchases['Gender'].tolist()
    
    return genders",list of (string),"['Male', 'Female', 'Female', 'Male']","['Male', 'Female', 'Female', 'Male']"
What are the quantities of products bought in the top 4 purchases with the highest total cost?,What are the quantities of products in the top 4 purchases when sorted by total cost in descending order?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_purchases = dataset.sort_values(by='Total', ascending=False).head(4)
    quantities = top_purchases['Quantity'].tolist()
    
    return quantities",list of (int64),"[10, 10, 10, 10]","[10, 10, 10, 10]"
List the unit prices of the bottom 3 purchases with the lowest total cost.,What are the unit prices of the three purchases with the lowest total cost in the supermarket dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_total_cost_purchases = dataset.nsmallest(3, 'Total')
    unit_prices = lowest_total_cost_purchases['Unit price'].tolist()
    
    return unit_prices",list of float64,"[10.17, 12.09, 12.54]","[10.17, 12.09, 12.54]"
Enumerate the ratings of the top 5 purchases with the highest total cost.,What are the ratings of the top 5 purchases when sorted by total cost in descending order?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_purchases = dataset.sort_values(by='Total', ascending=False).head(5)
    ratings = top_5_purchases['Rating'].tolist()
    
    return ratings",list of float64,"[6.6, 8.7, 4.5, 8.0, 4.4]","[6.6, 8.7, 4.5, 8.0, 4.4]"
Provide the gross incomes of the bottom 2 purchases with the lowest total cost.,What are the gross incomes of the two purchases with the smallest total cost?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_total_cost_purchases = dataset.nsmallest(2, 'Total')
    gross_incomes = smallest_total_cost_purchases['gross income'].tolist()
    
    return gross_incomes",list of (float64),"[0.5085, 0.6045]","[0.5085, 0.6045]"
Are there any individuals in the dataset who are above 60 years of age?,Does the dataset contain any individuals with an age greater than 60?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    individuals_with_age_greater_than_60 = dataset[dataset[""Age""] > 60]
    return not individuals_with_age_greater_than_60.empty",bool,True,False
Does anyone have a Diabetes Pedigree Function score above 2.5?,Is there at least one person with a Diabetes Pedigree Function score greater than 2.5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_diabetes_pedigree = (dataset[""DiabetesPedigreeFunction""] > 2.5).any()
    return has_high_diabetes_pedigree",bool,False,True
Does the person with the highest glucose level also have diabetes?,Does the person with the maximum glucose level have an outcome indicating diabetes,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_glucose_individual = dataset.loc[dataset[""Glucose""] == dataset[""Glucose""].max()]
    has_diabetes = max_glucose_individual[""Outcome""].values[0] == 1

    return has_diabetes",bool,True,True
Is there anyone who has zero pregnancies and is diabetic?,Does the dataset contain any individuals with zero pregnancies and a diabetic outcome?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    individuals_with_zero_pregnancies_and_diabetic_outcome = dataset[(dataset[""Pregnancies""] == 0) & (dataset[""Outcome""] == 1)]
    return not individuals_with_zero_pregnancies_and_diabetic_outcome.empty",bool,True,True
What is the maximum number of pregnancies recorded in the dataset?,What is the highest value of pregnancies found in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_pregnancies = dataset[""Pregnancies""].max()
    return max_pregnancies",uint8,17,17
What is the minimum blood pressure level recorded in the dataset?,What is the lowest value of BloodPressure found in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_blood_pressure = dataset[""BloodPressure""].min()
    return min_blood_pressure",uint8,0,0
What is the average BMI recorded in the dataset?,What is the mean value of the BMI column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_bmi = dataset[""BMI""].mean()
    return mean_bmi",float64,31.992578000000000,31.992578000000000
How many individuals have an insulin level above 150?,What is the count of individuals with insulin levels greater than 150?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = len(dataset[dataset[""Insulin""] > 150])
    return count",int64,153,187
What is the diabetes outcome for the person with the highest BMI?,What is the Outcome value for the row with the maximum BMI in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_bmi_row = dataset.loc[dataset[""BMI""].idxmax()]
    outcome_value = max_bmi_row[""Outcome""]

    return outcome_value",uint8,1.0,1
What is the diabetes outcome for the person with the lowest blood pressure?,What is the Outcome value for the individual with the minimum BloodPressure value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_blood_pressure_individual = dataset.loc[dataset[""BloodPressure""] == dataset[""BloodPressure""].min()]
outcome_value = min_blood_pressure_individual[""Outcome""].iloc[0]

return outcome_value",uint8,0,0
What is the diabetes outcome for the person with the highest insulin level?,What is the Outcome value for the person with the maximum Insulin level in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_insulin_individual = dataset.loc[dataset[""Insulin""] == dataset[""Insulin""].max()]
    outcome_value = max_insulin_individual[""Outcome""].values[0]

    return outcome_value",uint8,1,1
What is the diabetes outcome for the person with the lowest glucose level?,What is the Outcome value for the person with the minimum Glucose level in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_glucose_individual = dataset.loc[dataset[""Glucose""] == dataset[""Glucose""].min()]
outcome_value = min_glucose_individual[""Outcome""].values[0]

return outcome_value",uint8,0,0
List the diabetes outcomes of the top 3 individuals with the highest number of pregnancies.,What are the diabetes outcomes for the top 3 individuals with the most pregnancies based on the Pregnancies column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_pregnancies = dataset.nlargest(3, 'Pregnancies')
    diabetes_outcomes = top_3_pregnancies['Outcome'].tolist()
    
    return diabetes_outcomes",list of (uint8),"[1, 1, 1]","[1, 1, 1]"
List the diabetes outcomes of the bottom 2 individuals with the lowest BMI.,What are the Outcome values for the two individuals with the smallest BMI values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_bmi_individuals = dataset.nsmallest(2, 'BMI')
    outcome_values = smallest_bmi_individuals['Outcome'].tolist()
    
    return outcome_values",list of (uint8),"[1, 0]","[0, 0]"
List the diabetes outcomes of the top 5 individuals with the highest insulin levels.,What are the Outcome values for the top 5 rows with the highest Insulin levels in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_insulin_rows = dataset.nlargest(5, 'Insulin')
    outcome_values = top_5_insulin_rows['Outcome'].tolist()
    
    return outcome_values",list of (uint8),"[1, 0, 0, 1, 1]","[1, 1, 1, 1, 1]"
List the diabetes outcomes of the bottom 4 individuals with the lowest blood pressure.,What are the Outcome values for the four individuals with the lowest BloodPressure in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_blood_pressure_individuals = dataset.nsmallest(4, 'BloodPressure')
    outcome_values = lowest_blood_pressure_individuals['Outcome'].tolist()
    
    return outcome_values",list of (uint8),"[0, 1, 0, 0]","[0, 0, 0, 0]"
What are the ages of the top 4 individuals with the highest number of pregnancies?,"What are the ages of the top 4 individuals with the highest number of pregnancies in the dataset, sorted in descending order by the number of pregnancies?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_4_pregnancies = dataset.nlargest(4, 'Pregnancies')
    ages = top_4_pregnancies['Age'].tolist()
    return ages",list of (float64),"[47, 43, 46, 38]","[51, 67, 67, 67]"
List the BMI of the bottom 3 individuals with the lowest glucose levels.,What are the BMI values of the three individuals with the lowest glucose levels in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_glucose_individuals = dataset.nsmallest(3, 'Glucose')
    bmi_values = lowest_glucose_individuals['BMI'].tolist()
    
    return bmi_values",list of (float64),"[24.7, 27.7, 32.0]","[32.0, 32.0, 32.0]"
Enumerate the blood pressure levels of the top 5 individuals with the highest Diabetes Pedigree Function scores.,What are the BloodPressure levels for the top 5 individuals with the highest DiabetesPedigreeFunction scores?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_individuals = dataset.nlargest(5, 'DiabetesPedigreeFunction')
    blood_pressure_levels = top_5_individuals['BloodPressure'].tolist()
    
    return blood_pressure_levels",list of (uint8),"[78, 70, 40, 82, 66]","[0, 0, 0, 0, 0]"
Provide the glucose levels of the 2 individuals with the highest insulin levels.,What are the glucose levels of the two individuals with the highest insulin levels in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_insulin_individuals = dataset.nlargest(2, 'Insulin')
    glucose_levels = max_insulin_individuals['Glucose'].tolist()
    
    return glucose_levels",list of (uint8),"[189, 197]","[189, 197]"
Are there any articles that have the material type 'Op-Ed'?,Does the dataset contain any articles where the material type is 'Op-Ed'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    op_ed_articles = dataset[dataset[""material_type""] == 'Op-Ed']
    return not op_ed_articles.empty",bool,True,True
Does the article with the longest headline contain the keyword 'United States Politics and Government'?,Does the article with the maximum length of headline contain 'United States Politics and Government' in its keywords?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_length_headline = dataset.loc[dataset[""headline""].str.len().idxmax()]
    keywords = max_length_headline[""keywords""]
    
    return 'United States Politics and Government' in keywords",bool,False,False
Is there any article published on '2021-01-05'?,Does the date '2021-01-05' exist in the date column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    date_exists = dataset['date'].eq('2021-01-05').any()
    return date_exists",bool,True,True
Does any article contain more than 10 keywords?,,,,ERROR,True
How many unique material types are there in the dataset?,What is the number of distinct categories in the material_type column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_categories = dataset[""material_type""].nunique()
    return distinct_categories",int64,16,16
What is the longest length of a headline in the dataset?,What is the maximum length of the headline strings in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_length = dataset[""headline""].str.len().max()
    return max_length",int64,145.0,147
How many articles were published on '2021-01-02'?,What is the count of articles published on the date '2021-01-02'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count_of_articles = len(dataset[dataset['date'] == '2021-01-02'])

    return count_of_articles",int64,56,52
What is the highest number of keywords associated with a single article?,What is the maximum count of keywords found in any single article's keywords field?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_keywords_count = dataset['keywords'].apply(lambda x: len(str(x).split(','))).max()
    return max_keywords_count",int64,1,45
What is the material type of the article with the longest headline?,What is the material type of the article that has the longest headline string?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    longest_headline_article = dataset.loc[dataset[""headline""].str.len().idxmax()]
    material_type = longest_headline_article[""material_type""]

    return material_type",category,Interactive Feature,News
What is the material type of the article with the shortest headline that is not news or video?,What is the material type of the non-news and non-video article with the minimum length headline?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    non_news_video_articles = dataset[(dataset[""material_type""] != ""news"") & (dataset[""material_type""] != ""video"")]
    min_length_headline_article = non_news_video_articles.loc[non_news_video_articles[""headline""].str.len().idxmin()]
    material_type = min_length_headline_article[""material_type""]

    return material_type",category,News,Slideshow
What is the material type of the non-editorial article with the most number of keywords?,,,,ERROR,News
What is the most common material amongst articles with the least number of keywords?,,,,ERROR,News
List the material types of the top 3 articles with the longest headlines.,,,,ERROR,"['News', 'News', 'News']"
List the material types of the bottom 2 articles with the shortest headlines that are not videos or slides.,,,,ERROR,"['News', 'News']"
List the material types of the top 5 articles with the most number of keywords.,,,,ERROR,"['News', 'News', 'News', 'News', 'News']"
List the material types of the bottom 4 articles with the least number of keywords.,,,,ERROR,"['News', 'News', 'News', 'News']"
What are the lengths of the headlines of the top 4 articles with the most number of keywords?,,,,ERROR,"[86, 85, 84, 84]"
List the number of keywords in the bottom 3 articles with the shortest headlines.,,,,ERROR,"[1, 1, 1]"
Enumerate the lengths of the headlines of the top 5 articles with the longest headlines.,,,,ERROR,"[96, 96, 95, 95, 95]"
Provide the number of keywords in the bottom 2 articles with the least number of keywords.,,,,ERROR,"[1, 1]"
Is the 'USA' the most common entry in the 'Geographies' column?,Is 'USA' the most frequently occurring value in the 'Geographies' column?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    most_frequent_geography = db['Geographies'].mode().iloc[0]
    is_usa_most_frequent = most_frequent_geography == 'USA'
    
    return is_usa_most_frequent",bool,[False],False
Are there any participants who are unemployed with a bachelor's degree from Africa?,Are there any participants from Africa with a bachelor's degree who are unemployed?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    participants_from_africa = db[(db['In which country do you currently reside?'].str.contains('Africa')) | (db['In which country do you currently reside?'].str.contains('South Africa'))]
    participants_with_bachelors_degree = participants_from_africa[participants_from_africa['What is the highest level of formal education that you have attained or plan to attain within the next 2 years?'] == 'Bachelor\'s degree']
    unemployed_participants = participants_with_bachelors_degree[participants_with_bachelors_degree['Select the title most similar to your current role (or most recent title if retired)'] == 'Unemployed']
    
    return not unemployed_participants.empty",bool,False,False
Do all participants recommend Python as the first programming language?,Is Python the most recommended programming language for beginners among all participants?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    most_recommended_language = db['What programming language would you recommend an aspiring data scientist to learn first?'].value_counts().idxmax()
    is_python_most_recommended = most_recommended_language == 'Python'
    
    return is_python_most_recommended",bool,True,False
Are there more than 1000 participants who hope to become familiar with AWS in the next 2 years?,,,,ERROR,False
How many unique job titles are represented in the dataset?,What is the number of unique job titles represented by the 'Select the title most similar to your current role (or most recent title if retired)' column in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    unique_job_titles = db['Select the title most similar to your current role (or most recent title if retired)'].nunique()
    return unique_job_titles",int64,14,14
What's the median of the average number of years participants have used machine learning methods?,What is the median value of the average number of years that participants have used machine learning methods?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    median_value = db['(Average) For how many years have you used machine learning methods?'].median()
    return median_value",float64,1.5,1.5
How many participants are from the United Kingdom?,What is the number of participants whose country of residence is the United Kingdom?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    uk_residents = db[db[""In which country do you currently reside?""] == ""United Kingdom""]
    num_uk_residents = len(uk_residents)
    
    return num_uk_residents",int64,0,450
What is the most common number of programming languages used by participants on a regular basis?,,,,ERROR,2
What's the most common computing platform used for data science projects?,What is the most frequently used computing platform for data science projects among the respondents?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_platform = dataset['What type of computing platform do you use most often for your data science projects?'].mode().iloc[0]
    return most_frequent_platform",string,A laptop,A laptop
What's the most common programming language used on a regular basis?,Which programming language is most frequently used by professionals on a regular basis?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    most_frequent_language = db['What programming languages do you use on a regular basis?'].mode().iloc[0]
    return most_frequent_language",string,['Python'],Python
Which country has the second highest number of participants?,What is the country with the second highest count of participants in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    country_counts = db['In which country do you currently reside?'].value_counts()
    second_highest_country = country_counts.index[1]
    return second_highest_country",string,United States of America,United States of America
Which title is the most common among participants?,What is the most frequently occurring title among the participants in the 'Select the title most similar to your current role (or most recent title if retired)' category?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    title_counts = dataset['Select the title most similar to your current role (or most recent title if retired)'].value_counts()
    most_frequent_title = title_counts.idxmax()
    
    return most_frequent_title",string,Data Scientist,Data Scientist
What are the top 4 geographies represented in the dataset?,,,,ERROR,"['India', 'USA', 'Western Europe', 'China - Japan - Korea']"
Name the top 3 general segments of participants.,What are the top 3 most common general segments of participants in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    general_segments = db['General Segments'].value_counts().head(3).index.tolist()
    return general_segments",list of (string),"[array(['Analysts'], dtype=object), array(['Data Scientists'], dtype=object), array(['Academics'], dtype=object)]","['Analysts', 'Data Scientists', 'Academics']"
list the top 4 most common job titles.,What are the four most frequently occurring job titles in the 'Select the title most similar to your current role (or most recent title if retired)' category?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    job_titles = dataset['Select the title most similar to your current role (or most recent title if retired)']
    title_counts = job_titles.value_counts()
    most_frequent_titles = title_counts.nlargest(4).index.tolist()
    
    return most_frequent_titles",list of (string),"['Data Scientist', 'Software Engineer', 'Other', 'Data Analyst']","['Data Scientist', 'Software Engineer', 'Other', 'Data Analyst']"
Identify the top 6 programming languages used regularly.,"What are the top 6 programming languages that professionals use regularly, based on the provided dataset?","def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    programming_languages = db['What programming languages do you use on a regular basis?'].value_counts().index.tolist()
    top_6_programming_languages = programming_languages[:6]
    return top_6_programming_languages",list of (string),"[array(['Python'], dtype=object), array(['R'], dtype=object), array(['SQL'], dtype=object), array(['Other'], dtype=object), array(['Java'], dtype=object), array(['Javascript'], dtype=object)]","['Python', 'SQL', 'R', 'Javascript', 'C++', 'Java']"
Report the top 4 age ranges of participants by frequency,What are the top 4 age ranges with the highest frequency of participants based on the average age of the participants?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    age_range = pd.cut(db['(Average) What is your age (years)?'], bins=[0, 20, 30, 40, 50, 60, 100], labels=['0-20', '21-30', '31-40', '41-50', '51-60', '61-100'], right=False)
    age_range_freq = age_range.value_counts().head(4)
    top_4_age_ranges = age_range_freq.index.tolist()
    return top_4_age_ranges",list of (string),"['21-30', '31-40', '41-50', '51-60']","['25-29', '30-34', '22-24', '35-39']"
list the highest average 3 years of machine learning experience.,What are the top 3 average years of machine learning experience in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    average_years_ml = db['(Average) For how many years have you used machine learning methods?'].sort_values(ascending=False).head(3).tolist()
    return average_years_ml",list of (float64),"[20.0, 20.0, 20.0]","[19.83, 19.74, 19.68]"
Identify the 5 highest yearly compensations.,What are the top 5 highest average yearly compensations reported in the dataset?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    average_compensations = db['(Average) What is your current yearly compensation (approximate $USD)?_rx_K'].sort_values(ascending=False).head(5).tolist()
    return average_compensations",list of (float64),"[174999.5, 174999.5, 174999.5, 174999.5, 174999.5]","[1000000, 1000000, 1000000, 1000000, 1000000]"
Report the 5 most common sizes of the company where participants work.,What are the top 5 most frequent company sizes where the professionals are employed?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    company_sizes = db['(Average) What is the size of the company where you are employed?'].value_counts().index[:5].tolist()
    return company_sizes",list of (float64),"[24.0, 10000.0, 5500.0, 150.0, 624.0]","['0-49 employees', '10,000 or more employees', '1000-9,999 employees', '50-249 employees', '250-999 employees']"
Are there more reviews with rating 5 from 'GB' than 'US'?,Does the count of reviews with a rating of 5 from country code 'GB' exceed the count of reviews with a rating of 5 from country code 'US'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    gb_reviews = dataset[(dataset[""country_code""] == 'GB') & (dataset[""rating""] == 5)]
    us_reviews = dataset[(dataset[""country_code""] == 'US') & (dataset[""rating""] == 5)]
    
    return len(gb_reviews) > len(us_reviews)",bool,True,True
Is the average rating for 'Wise' in 'GB' above 4?,Is the mean rating for the company 'Wise' in the country 'GB' greater than 4?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    wise_gb_ratings = dataset[(dataset[""Company""] == ""Wise"") & (dataset[""country_code""] == ""GB"")]
    mean_rating = wise_gb_ratings[""rating""].mean()
    return mean_rating > 4",bool,True,True
Do any reviews originate from 'AO'?,Are there any reviews where the country code is 'AO'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    reviews_from_ao = dataset[dataset[""country_code""] == 'AO']
    return not reviews_from_ao.empty",bool,True,True
Did any reviews receive a rating of 1?,Are there any reviews where the rating is equal to 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_rating_one = dataset[""rating""].isin([1]).any()
    return has_rating_one",bool,True,True
What's the total number of reviews for 'Wise'?,What is the total count of reviews where the company is 'Wise'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    wise_reviews = dataset[dataset[""Company""] == ""Wise""]
    total_count = len(wise_reviews)

    return total_count",int64,3840,3840
How many unique countries gave 'Wise' a rating of 5?,What is the number of distinct countries where the company 'Wise' received a rating of 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    wise_reviews = dataset[(dataset[""Company""] == ""Wise"") & (dataset[""rating""] == 5)]
    distinct_countries = wise_reviews[""country_code""].nunique()

    return distinct_countries",int64,120,120
What is the highest rating received?,What is the maximum rating received in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_rating = dataset[""rating""].max()
    return max_rating",uint8,5,5
What's the average rating across all reviews?,What is the mean of all the ratings in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_rating = dataset[""rating""].mean()
    return mean_rating",float64,4.097756000000000,4.097756000000000
Which company received the most 5-star reviews?,What is the company that has received the highest number of reviews with a rating of 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_rating_reviews = dataset[dataset[""rating""] == 5]
    company_counts = max_rating_reviews[""Company""].value_counts()
    company_with_most_reviews = company_counts.idxmax()

    return company_with_most_reviews",string,Wise,Wise
From which country did 'Wise' receive the most reviews?,Which country code has the highest frequency of reviews for the company 'Wise'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    wise_reviews = dataset[dataset['Company'] == 'Wise']
    country_code_counts = wise_reviews['country_code'].value_counts()
    most_frequent_country_code = country_code_counts.idxmax()

    return most_frequent_country_code",category,GB,GB
Which country had the lowest representation in the reviews?,What country code has the least number of occurrences in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    country_code_counts = dataset[""country_code""].value_counts()
    least_common_country_code = country_code_counts.idxmin()

    return least_common_country_code",string,CW,CW
Which company received the lowest rating?,What is the name of the company that has the minimum rating?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_rating_company = dataset.loc[dataset[""rating""] == dataset[""rating""].min()]
company_name = min_rating_company[""Company""].iloc[0]

return company_name",string,Wise,N26
Which are the top 3 countries with the most 5-star reviews for 'Wise'?,"What are the top three country codes where the company is 'Wise' and the rating is 5, ordered by the count of 5-star reviews in descending order?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    wise_five_star_reviews = dataset[(dataset[""Company""] == ""Wise"") & (dataset[""rating""] == 5)]
    top_three_country_codes = wise_five_star_reviews[""country_code""].value_counts().head(3).index.tolist()
    
    return top_three_country_codes",list of (string),"['GB', 'US', 'ES']","['GB', 'US', 'ES']"
Which are the 2 companies represented in the dataset?,What are the names of the two unique companies present in the Company column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
unique_companies = dataset[""Company""].unique()
unique_companies = unique_companies.tolist()
unique_companies = unique_companies[:2]

return unique_companies",list of (string),"['Wise', 'N26']","['Wise', 'N26']"
Which are the bottom 4 countries in terms of review count? If two or more have the same number order them alphabetically.,What are the names of the bottom 4 countries when ordered by review count in ascending order and then alphabetically in case of a tie?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    country_review_counts = dataset['country_code'].value_counts().reset_index()
    country_review_counts.columns = ['country_code', 'review_count']
    country_review_counts = country_review_counts.sort_values(by=['review_count', 'country_code']).head(4)
    bottom_4_countries = country_review_counts['country_code'].tolist()
    
    return bottom_4_countries",list of (string),"['AI', 'KR', 'FO', 'PY']","['CW', 'FO', 'KZ', 'NE']"
What are the 3 most common countries? If two or more have the same number order them alphabetically.,"List the top 3 countries by frequency of occurrence in the dataset, and if there are ties in frequency, sort them alphabetically by country name.","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    country_counts = dataset['country_code'].value_counts()
    top_3_countries = country_counts.nlargest(3)
    top_3_countries = top_3_countries.index.tolist()
    ties = country_counts[country_counts == top_3_countries[-1]]
    if len(ties) > 1:
        top_3_countries = sorted(top_3_countries)
    return top_3_countries",list of (string),"['GB', 'DE', 'FR']","['GB', 'DE', 'FR']"
What are the 3 most common ratings?,What are the top three most frequent rating values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
rating_counts = dataset[""rating""].value_counts()
top_three_ratings = rating_counts.nlargest(3).index.tolist()

return top_three_ratings",list of (int64),"[5, 1, 4]","[5, 1, 4]"
What are the 2 least common ratings?,,,,ERROR,"[3, 2]"
What are the best 4 unique ratings given to 'Wise'?,,,,ERROR,"[5, 4, 2, 1]"
What are the bottom 5 unique ratings given to 'N26'?,,,,ERROR,"[1, 2, 3, 4, 5]"
Is there any customer with a PhD education level?,Does any customer have PhD as their education level?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_phd = dataset[""Education""].eq(""PhD"").any()
    return has_phd",bool,True,True
Do we have any customers who are married?,Are there any customers with a marital status of married in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    married_customers = dataset[dataset[""Marital_Status""] == ""Married""]
    return not married_customers.empty",bool,True,True
Is there any customer with income higher than 100000?,Are there any customers in the dataset with an income greater than 100000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_income = dataset[""Income""].max() > 100000 or (dataset[""Income""] > 100000).any()
    return has_high_income",bool,True,True
Has any customer made more than 10 web purchases?,Is there at least one customer who has made more than 10 purchases through the web as indicated by the NumWebPurchases attribute?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_more_than_10_web_purchases = (dataset[""NumWebPurchases""] > 10).any()
    return has_more_than_10_web_purchases",bool,True,True
How many customers do we have in the dataset?,What is the total count of unique customer IDs in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_ids = dataset[""ID""].nunique()
    return unique_ids",int64,2240,2240
What's the average income of our customers?,What is the mean value of the Income column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_income = dataset[""Income""].mean()
    return mean_income",float64,52247.25135400000,52247.25135400000
What's the maximum number of web purchases made by a customer?,What is the maximum value in the NumWebPurchases column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_num_web_purchases = dataset[""NumWebPurchases""].max()
return max_num_web_purchases",uint8,27,27
What's the minimum recency of purchase among the customers?,What is the smallest recency value among all the customers in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_recency = dataset[""Recency""].min()
    return smallest_recency",uint8,0,0
What's the most common education level among our customers?,What is the mode of the Education column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
education_mode = dataset[""Education""].mode().iloc[0]
return education_mode",string,Graduation,Graduation
What's the most common marital status among our customers?,What is the marital status that appears most frequently in the Marital_Status column of our customer dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_marital_status = dataset[""Marital_Status""].mode().iloc[0]
    return most_frequent_marital_status",string,Married,Married
Who is the customer with the highest income?,What is the ID of the customer with the maximum income?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_income_customer = dataset.loc[dataset[""Income""].idxmax()]
    customer_id = str(max_income_customer[""ID""])

    return customer_id",string,9432,9432
Who is the customer with the most recent purchase?,What is the ID of the customer with the most recent date in the Dt_Customer column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_recent_customer = dataset.loc[dataset[""Dt_Customer""] == dataset[""Dt_Customer""].max()]
    customer_id = most_recent_customer[""ID""].astype(str).iloc[0]

    return customer_id",string,7300,4047
Who are the 3 customers with the highest income?,What are the IDs of the top 3 customers with the highest income?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_customers = dataset.nlargest(3, 'Income')
    ids = top_3_customers['ID'].astype(str).tolist()
    return ids",list of (string),"['9432', '1503', '1501']","[9432, 1503, 1501]"
What are the 2 most common education levels among our customers?,What are the two most frequent categories in the Education column of our customer dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
education_counts = dataset[""Education""].value_counts()
top_two_education = education_counts.nlargest(2).index.tolist()
return top_two_education",list of (string),"['Graduation', 'PhD']","['Graduation', 'PhD']"
What are the 3 most common marital statuses among our customers?,What are the top three most frequent categories in the Marital_Status column of our customer dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    marital_status_counts = dataset[""Marital_Status""].value_counts()
    top_three_marital_status = marital_status_counts.nlargest(3).index.tolist()
    
    return top_three_marital_status",list of (string),"['Married', 'Together', 'Single']","['Married', 'Together', 'Single']"
Who are the 3 customers with the most web purchases?,What are the IDs of the top 3 customers with the highest number of web purchases?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_customers = dataset.nlargest(3, 'NumWebPurchases')
    ids = top_3_customers['ID'].tolist()
    
    return ids",list of (uint16),"[5255, 4619, 10311]","[5255, 4619, 10311]"
What are the top 3 income values among our customers?,What are the three highest income values in the Income column of our customer dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    income_values = dataset[""Income""].sort_values(ascending=False).head(3).tolist()
    return income_values",list of (float64),"[666666.0, 162397.0, 160803.0]","[666666.0, 162397.0, 160803.0]"
What are the top 2 recency values among our customers?,What are the two highest recency values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    recency_values = dataset[""Recency""].sort_values(ascending=False).unique()
    two_highest_recency = recency_values[:2].tolist()
    
    return two_highest_recency",list of (uint8),"[99, 98]","[99, 99]"
What are the bottom 3 income values among our customers?,What are the three lowest income values in the Income column of our customer dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_incomes = dataset['Income'].nsmallest(3).tolist()
    return lowest_incomes",list of (float64),"[1730.0, 2447.0, 3502.0]","[1730.0, 2447.0, 3502.0]"
What are the bottom 2 recency values among our customers?,What are the two lowest recency values in the dataset among all customers?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    recency_values = dataset[""Recency""].sort_values().unique()
    two_lowest_recency = recency_values[:2].tolist()
    
    return two_lowest_recency",list of (uint8),"[0, 1]","[0, 0]"
Is there any customer with a high salary?,Does any employee have a salary classified as high?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_salary = dataset[""salary""].eq(""high"").any()
    return has_high_salary",bool,True,True
Do we have any employees who suffered a work accident?,Are there any employees where the Work Accident attribute is not null or has a value indicating an accident occurred?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_work_accident = not dataset[""Work Accident""].isnull().all() or (dataset[""Work Accident""] != 'No').any()
    return has_work_accident",bool,True,True
Is there any employee with more than 100 hours per month on average?,Are there any employees whose average monthly hours exceed 100?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    employees_with_high_hours = dataset[dataset[""Average Monthly Hours""] > 100]
    return not employees_with_high_hours.empty",bool,True,True
Does any employee have a satisfaction level above 0.9?,Is there at least one employee with a satisfaction level greater than 0.9?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
satisfied_employees = dataset[dataset[""Satisfaction Level""] > 0.9]
return not satisfied_employees.empty",bool,True,True
How many employees do we have in the dataset?,What is the total count of employee records in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
total_count = len(dataset)
return total_count",int64,14999,14999
What's the median satisfaction level of our employees?,What is the median value of the Satisfaction Level of all employees in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    satisfaction_level_median = dataset[""Satisfaction Level""].median()
    return satisfaction_level_median",float64,0.64,0.64
What's the highest number of projects for a given employee?,What is the maximum value in the Number of Projects column for any employee?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_projects = dataset[""Number of Projects""].max()
    return int(max_projects)",int64,7,7
What's the most common marital status among the employees?,Which marital status appears most frequently in the Marital_Status column of the employee dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_marital_status = dataset[""Marital_Status""].mode().iloc[0]
    return most_frequent_marital_status",string,Together,Together
What's the most common education level among our employees?,Which education level appears most frequently in our employee dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_education_level = dataset['Left'].value_counts().idxmax()
    return most_frequent_education_level",string,No,Graduation
What's the most common marital status in the database?,What is the marital status that appears most frequently in the Marital_Status column of the database?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
marital_status_counts = dataset[""Marital_Status""].value_counts()
most_frequent_marital_status = marital_status_counts.idxmax()

return most_frequent_marital_status",string,Together,Married
"Among the employees who have left the company in sales, what's the most common salary level?",What is the most frequent salary level among employees in the sales department who have left the company?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sales_department_employees = dataset[(dataset[""Department""] == ""sales"") & (dataset[""Left""] == ""Yes"")]
    most_frequent_salary = sales_department_employees[""salary""].mode().iloc[0]
    
    return most_frequent_salary",string,low,low
"Among the employees who have had a work accident in sales, what's the most common salary level?",What is the most frequent salary level among employees in the sales department who have had a work accident?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sales_department_with_work_accident = dataset[(dataset[""Department""] == ""sales"") & (dataset[""Work Accident""] == ""Yes"")]
    most_frequent_salary = sales_department_with_work_accident[""salary""].mode().iloc[0]
    
    return most_frequent_salary",string,medium,low
What are the top 3 satisfaction levels?,What are the top three highest satisfaction levels in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
sorted_dataset = dataset.sort_values(by='Satisfaction Level', ascending=False)
top_three_satisfaction_levels = sorted_dataset['Satisfaction Level'].head(3).tolist()
return top_three_satisfaction_levels",list of (float64),"[1.0, 1.0, 1.0]","[1, 1, 1]"
What are the top 2 most common Work Accident statuses among our employees?,What are the two most frequently occurring Work Accident statuses in the employee dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    work_accident_counts = dataset[""Work Accident""].value_counts()
    most_frequent_work_accidents = work_accident_counts.nlargest(2).index.tolist()
    
    return most_frequent_work_accidents",list of (string),"['No', 'Yes']","['No', 'Yes']"
What are the top 3 most common marital statuses among our employees?,What are the three most frequently occurring values in the Marital_Status column of the employee dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    marital_status_counts = dataset[""Marital_Status""].value_counts()
    top_three_marital_status = marital_status_counts.nlargest(3).index.tolist()
    
    return top_three_marital_status",list of (string),"['Together', 'Single', 'Married']","['Together', 'Single', 'Married']"
What are the highest 3 years spent in the company? ,What are the top 3 highest years spent in the company by employees?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    years_in_company = dataset['Years in the Company'].sort_values(ascending=False).unique()
    top_3_years = years_in_company[:3].tolist()
    
    return top_3_years",list of (int64),"[10, 8, 7]","[10, 10, 10]"
What are the 3 departments with more 'medium' salary levels?,Which three departments have the most employees with a salary level of 'medium'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    medium_salary_employees = dataset[dataset[""salary""] == ""medium""]
    department_counts = medium_salary_employees[""Department""].value_counts()
    top_three_departments = department_counts.nlargest(3).index.tolist()
    
    return top_three_departments",list of (string),"['sales', 'technical', 'support']","['sales', 'technical', 'support']"
"For the 2 employees with the top satisfaction levels who belong to the sales department, what are their salary levels?",What are the salary categories of the top 2 employees with the highest satisfaction levels in the sales department?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_2_employees = dataset.loc[(dataset[""Department""] == ""sales"")].sort_values(by=""Satisfaction Level"", ascending=False).head(2)
    salary_categories = top_2_employees[""salary""].tolist()
    
    return salary_categories",list of (category),"['medium', 'medium']","['low', 'low']"
What are the top 3 average monthly hours worked among the employees in the top 3 departments with the most employees?,What are the top 3 average Average Monthly Hours values for the top 3 departments with the highest number of employees?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_departments = dataset[""Department""].value_counts().head(3).index
    top_3_departments_data = dataset[dataset[""Department""].isin(top_3_departments)]
    average_hours = top_3_departments_data.groupby(""Department"")[""Average Monthly Hours""].mean().sort_values(ascending=False).head(3).tolist()
    
    return average_hours",list of float64,"[202.49742647058824, 200.91135265700484, 200.75818752803949]","[200.91135265700484, 202.49742647058824, 200.75818752803949]"
What are the lowest 2 satisfaction levels among the employees who have not had a work accident?,What are the two lowest satisfaction levels reported by employees who have not experienced a work accident?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    no_work_accident = dataset[dataset[""Work Accident""] == ""No""]
    lowest_satisfaction_levels = no_work_accident[""Satisfaction Level""].nsmallest(2).tolist()
    
    return lowest_satisfaction_levels",list of (float64),"[0.09, 0.09]","[0.09, 0.09]"
"Is there any country with a Ladder score above 7.5, a Generosity score above 0.2, and a Social support score above 0.7?","Are there any countries where the Ladder score is greater than 7.5, the Generosity score is greater than 0.2, and the Social support score is greater than 0.7?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    countries = dataset[(dataset[""Ladder score""] > 7.5) & (dataset[""Generosity""] > 0.2) & (dataset[""Social support""] > 0.7)]
    return len(countries) > 0",bool,True,True
"Are there any countries in Western Europe with a Perceptions of corruption score above 0.5, a Ladder score above 7, and a Social support score above 0.7?","Does Western Europe have any countries where the Perceptions of corruption score is greater than 0.5, the Ladder score is greater than 7, and the Social support score is greater than 0.7?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    western_europe = dataset[dataset[""Regional indicator""] == ""Western Europe""]
    filtered_countries = western_europe[(western_europe[""Perceptions of corruption""] > 0.5) & (western_europe[""Ladder score""] > 7) & (western_europe[""Social support""] > 0.7)]
    
    return not filtered_countries.empty",bool,True,True
Are there any countries in Western Europe with a Perceptions of corruption score above 0.5?,Does any country in Western Europe have a Perceptions of corruption score greater than 0.5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    western_europe = dataset[dataset[""Regional indicator""] == ""Western Europe""]
    corruption_scores = western_europe[""Perceptions of corruption""]
    has_high_corruption = (corruption_scores > 0.5).any()

    return has_high_corruption",bool,True,True
Is there any country with a Social support score below 0.5?,Does any country have a Social support score less than 0.5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_low_social_support = (dataset[""Social support""] < 0.5).any()
    return has_low_social_support",bool,True,True
What's the average Ladder score among the countries in Western Europe with a Generosity score above 0.2 and a Social support score above 0.7?,What is the mean Ladder score of countries located in Western Europe where the Generosity score is greater than 0.2 and the Social support score is greater than 0.7?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    western_europe = dataset[dataset[""Regional indicator""] == ""Western Europe""]
    filtered_dataset = western_europe[(western_europe[""Generosity""] > 0.2) & (western_europe[""Social support""] > 0.7)]
    mean_ladder_score = filtered_dataset[""Ladder score""].mean()

    return mean_ladder_score",float64,7.222675000000000,7.222675000000000
What's the average Perceptions of corruption score among the countries in Sub-Saharan Africa with a Ladder score below 5 and a Social support score below 0.5?,What is the mean Perceptions of corruption score for countries in the Sub-Saharan Africa region where the Ladder score is less than 5 and the Social support score is less than 0.5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sub_saharan_africa = dataset[dataset[""Regional indicator""] == ""Sub-Saharan Africa""]
    filtered_dataset = sub_saharan_africa[(sub_saharan_africa[""Ladder score""] < 5) & (sub_saharan_africa[""Social support""] < 0.5)]
    mean_perceptions_of_corruption = filtered_dataset[""Perceptions of corruption""].mean()

    return mean_perceptions_of_corruption",float64,0.7493710000,0.7493710000
What's the maximum Generosity score among the countries?,What is the highest Generosity score among all the countries in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_generosity = dataset[""Generosity""].max()
return max_generosity",float64,0.560664000,0.560664000
What's the minimum Social support score among the countries?,What is the lowest Social support score among all the countries in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_social_support = dataset[""Social support""].min()
    return lowest_social_support",float64,0.319460000,0.319460000
Which region has the highest number of countries with a Ladder score above 7 and a Generosity score above 0.2?,What is the regional indicator with the maximum count of countries where the Ladder score is greater than 7 and the Generosity score is greater than 0.2?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_dataset = dataset[(dataset[""Ladder score""] > 7) & (dataset[""Generosity""] > 0.2)]
    regional_indicator_counts = filtered_dataset[""Regional indicator""].value_counts()
    max_count_regional_indicator = regional_indicator_counts.idxmax()

    return max_count_regional_indicator",string,Western Europe,Western Europe
Which region accounts for the most countries with a Generosity score above 0.2?,What regional indicator is most common among countries where the Generosity score is greater than 0.2?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_dataset = dataset[dataset[""Generosity""] > 0.2]
    most_common_regional_indicator = filtered_dataset[""Regional indicator""].mode().iloc[0]

    return most_common_regional_indicator",string,Western Europe,Western Europe
In which region are the majority of countries with a Perceptions of corruption score below 0.5 located?,Which regional indicator is most common among countries where the perceptions of corruption score is less than 0.5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_dataset = dataset[dataset[""Perceptions of corruption""] < 0.5]
    most_common_regional_indicator = filtered_dataset[""Regional indicator""].mode().iloc[0]

    return most_common_regional_indicator",string,Western Europe,Western Europe
In which region can you find the majority of countries with a Social support score above 0.7?,Which regional indicator is most common among countries where the social support score is greater than 0.7?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_dataset = dataset[dataset[""Social support""] > 0.7]
    most_common_regional_indicator = filtered_dataset[""Regional indicator""].mode().iloc[0]

    return most_common_regional_indicator",string,Western Europe,Western Europe
Can you name the three regions that have the most countries with a Ladder score above 7 and a Generosity score above 0.2?,What are the names of the top three Regional indicators that have the most countries with a Ladder score greater than 7 and a Generosity score greater than 0.2?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_dataset = dataset[(dataset[""Ladder score""] > 7) & (dataset[""Generosity""] > 0.2)]
    regional_indicators = filtered_dataset[""Regional indicator""].value_counts().head(3).index.tolist()
    
    return regional_indicators",list of (string),"['Western Europe', 'North America and ANZ', 'Middle East and North Africa']",['Western Europe']
What are the top 3 regions with the most countries with a Generosity score above 0.2?,Which are the top 3 regional indicators that have the most countries where the Generosity score is greater than 0.2?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_dataset = dataset[dataset[""Generosity""] > 0.2]
    regional_indicators = filtered_dataset[""Regional indicator""].value_counts().head(3).index.tolist()
    
    return regional_indicators",list of (string),"['Western Europe', 'Southeast Asia', 'Sub-Saharan Africa']","['Western Europe', 'Southeast Asia', 'Sub-Saharan Africa']"
Identify the three highest Ladder scores from countries in Western Europe that have a Generosity score above 0.2 and a Social support score above 0.7.,What are the top three Ladder scores for Western European countries where Generosity is greater than 0.2 and Social support is greater than 0.7?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    western_european_countries = dataset[(dataset[""Regional indicator""] == ""Western Europe"") & (dataset[""Generosity""] > 0.2) & (dataset[""Social support""] > 0.7)]
    top_three_ladder_scores = western_european_countries[""Ladder score""].nlargest(3).tolist()
    
    return top_three_ladder_scores",list of (float64),"[7.504499912, 7.448900223, 7.164500237]","[7.504499912, 7.448900223, 7.164500237]"
What are the top 3 Perceptions of corruption scores among the countries in Sub-Saharan Africa?,What are the top 3 Perceptions of corruption scores for countries where the Regional indicator is Sub-Saharan Africa?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sub_saharan_africa = dataset[dataset[""Regional indicator""] == ""Sub-Saharan Africa""]
    top_3_perceptions_of_corruption = sub_saharan_africa.nlargest(3, ""Perceptions of corruption"")[""Perceptions of corruption""].tolist()
    
    return top_3_perceptions_of_corruption",list of (float64),"[0.891806662, 0.861874342, 0.861330688]","[0.891806662, 0.861874342, 0.861330688]"
What are the top 3 Generosity scores among the countries in Western Europe?,What are the three highest Generosity scores for countries where the Regional indicator is Western Europe?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    western_europe_dataset = dataset[dataset[""Regional indicator""] == ""Western Europe""]
    top_3_generosity_scores = western_europe_dataset[""Generosity""].nlargest(3).tolist()
    
    return top_3_generosity_scores",list of (float64),"[0.263732493, 0.246944219, 0.214965805]","[0.263732493, 0.246944219, 0.214965805]"
What are the top 3 Social support scores among the countries in Sub-Saharan Africa?,What are the three highest Social support scores for countries where the Regional indicator is Sub-Saharan Africa?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sub_saharan_africa = dataset[dataset[""Regional indicator""] == ""Sub-Saharan Africa""]
    top_three_social_support = sub_saharan_africa.nlargest(3, ""Social support"")[""Social support""].tolist()
    
    return top_three_social_support",list of (float64),"[0.910357833, 0.852532268, 0.846880972]","[0.910357833, 0.852532268, 0.846880972]"
Which are the three lowest Ladder scores in Western Europe?,What are the three smallest Ladder scores for countries in the Western Europe region?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    western_europe_dataset = dataset[dataset[""Regional indicator""] == ""Western Europe""]
    ladder_scores = western_europe_dataset[""Ladder score""].sort_values(ascending=True).head(3).tolist()
    
    return ladder_scores",list of (float64),"[5.514999866, 5.53550005, 5.910900116]","[5.514999866, 5.53550005, 5.910900116]"
Which are the three lowest Perceptions of corruption scores in Sub-Saharan Africa?,What are the three lowest Perceptions of corruption scores for countries in the Sub-Saharan Africa region?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sub_saharan_africa = dataset[dataset[""Regional indicator""] == ""Sub-Saharan Africa""]
    perceptions_of_corruption = sub_saharan_africa[""Perceptions of corruption""].sort_values(ascending=True).head(3).tolist()
    
    return perceptions_of_corruption",list of (float64),"[0.183541179, 0.606934547, 0.619799435]","[0.183541179, 0.606934547, 0.619799435]"
Is the song with the highest rank from 1965?,Does the song with the highest rank have a year attribute equal to 1965?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
highest_rank_song = dataset.loc[dataset[""Rank""] == dataset[""Rank""].max()]
year_of_highest_rank_song = highest_rank_song[""Year""].values[0]

return year_of_highest_rank_song == 1965",bool,True,True
Does the song with the lowest rank contain the word 'love' in its lyrics?,Is the word 'love' present in the lyrics of the song with the minimum rank?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_rank_song = dataset.loc[dataset[""Rank""] == dataset[""Rank""].min()]
    lyrics = min_rank_song[""Lyrics""].values[0]
    is_love_present = 'love' in lyrics.lower()

    return is_love_present",bool,False,True
Is the artist of the song with the highest rank the same as the artist of the song with the lowest rank?,Does the artist of the song with the minimum rank match the artist of the song with the maximum rank?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_rank_artist = dataset.loc[dataset[""Rank""] == dataset[""Rank""].min()][""Artist""].iloc[0]
    max_rank_artist = dataset.loc[dataset[""Rank""] == dataset[""Rank""].max()][""Artist""].iloc[0]
    
    return min_rank_artist == max_rank_artist",bool,False,False
Are there songs without lyrics?,Does the dataset contain any songs where the lyrics attribute is empty?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    is_empty_lyrics = dataset[""Lyrics""].isnull().any() or (dataset[""Lyrics""] == """").any()
    return is_empty_lyrics",bool,True,True
How many songs were produced in 1965?,What is the total count of songs where the year of production is 1965?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_count = len(dataset[dataset[""Year""] == 1965])
    return total_count",int64,100,100
In which year was the song with the highest rank produced?,What is the year of production of the song with the lowest rank value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_rank_song = dataset.loc[dataset[""Rank""] == dataset[""Rank""].min()]
    year_of_production = lowest_rank_song[""Year""].iloc[0]

    return year_of_production",uint16,1965,1965
What's the rank of the song with the longest lyrics?,What rank corresponds to the song with the maximum length of lyrics in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_lyrics_length_index = dataset[""Lyrics""].str.len().idxmax()
rank = dataset.loc[max_lyrics_length_index, ""Rank""]

return rank",uint8,19,19
How many unique artists are there in the dataset?,What is the number of distinct artists in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_artists = dataset[""Artist""].nunique()
    return distinct_artists",int64,2473,2473
Who is the artist of the song with the highest rank?,What is the artist associated with the song having the minimum rank value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_rank_song = dataset.loc[dataset[""Rank""] == dataset[""Rank""].min()]
artist = min_rank_song[""Artist""].iloc[0]

return artist",category,sam the sham and the pharaohs,sam the sham and the pharaohs
What is the title of the song with the lowest rank?,What is the song title associated with the minimum rank value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_rank_individual = dataset.loc[dataset[""Rank""] == dataset[""Rank""].min()]
song_title = min_rank_individual[""Song""].iloc[0]

return song_title",category,wooly bully,how sweet it is to be loved by you
Which song's lyrics contain the word 'love' the most times?,,,,ERROR,the way you love me
What is the title of the top song produced in the earliest year?,What is the song title of the top ranked song that was produced in the earliest year in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    earliest_year = dataset[""Year""].min()
    earliest_year_songs = dataset[dataset[""Year""] == earliest_year]
    top_ranked_song = earliest_year_songs.loc[earliest_year_songs[""Rank""] == earliest_year_songs[""Rank""].min()]
    song_title = top_ranked_song[""Song""].iloc[0]

    return song_title",category,wooly bully,wooly bully
Who are the artists of the top 5 ranked songs?,What are the names of the artists for the top 5 ranked songs in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_ranks = dataset.loc[dataset[""Rank""] <= 5]
    top_5_artists = top_5_ranks[""Artist""].tolist()
    
    return top_5_artists",list of (string),"['sam the sham and the pharaohs', 'four tops', 'the rolling stones', 'we five', 'the righteous brothers', 'ssgt barry sadler', 'the association', 'the righteous brothers', 'the four tops', '  the mysterians', 'lulu', 'the box tops', 'bobbie gentry', 'the association', 'the monkees', 'the beatles', 'paul mauriat', 'bobby goldsboro', 'otis redding', 'the rascals', 'the archies', 'the 5th dimension', 'the temptations', 'the rolling stones', 'sly  the family stone', 'simon  garfunkel', 'the carpenters', 'the guess who', 'bj thomas', 'edwin starr', 'three dog night', 'rod stewart', 'carole king', 'the osmonds', 'bee gees', 'roberta flack', 'gilbert osullivan', 'don mclean', 'harry nilsson', 'sammy davis jr', 'tony orlando and dawn', 'jim croce', 'roberta flack', 'marvin gaye', 'paul mccartney  wings', 'barbra streisand', 'terry jacks', 'love unlimited orchestra', 'redbone', 'the jackson 5', 'captain  tennille', 'glen campbell', 'elton john', 'freddy fender', 'frankie valli', 'wings', 'elton john  kiki dee', 'johnnie taylor', 'the four seasons', 'wild cherry', 'rod stewart', 'andy gibb', 'the emotions', 'barbra streisand', 'hot', 'andy gibb', 'bee gees', 'debby boone', 'bee gees', 'exile', 'the knack', 'donna summer', 'chic', 'rod stewart', 'peaches  herb', 'blondie', 'pink floyd', 'olivia newtonjohn', 'michael jackson', 'captain  tennille', 'kim carnes', 'diana ross  lionel richie', 'kenny rogers', 'john lennon', 'rick springfield', 'olivia newtonjohn', 'survivor', 'joan jett and the blackhearts', 'paul mccartney and stevie wonder', 'the j geils band', 'the police', 'michael jackson', 'irene cara', 'men at work', 'michael jackson', 'prince', 'tina turner', 'paul mccartney and michael jackson', 'kenny loggins', 'phil collins', 'wham featuring george michael', 'madonna', 'wham', 'foreigner', 'chaka khan', 'dionne and friends dionne warwick gladys knight elton john and stevie wonder', 'lionel richie', 'klymaxx', 'patti labelle and michael mcdonald', 'mr mister', 'the bangles', 'heart', 'gregory abbott', 'whitney houston', 'starship', 'george michael', 'inxs', 'george harrison', 'rick astley', 'guns n roses', 'chicago', 'bobby brown', 'poison', 'paula abdul', 'janet jackson', 'wilson phillips', 'roxette', 'sinead oconnor', 'bell biv devoe', 'madonna', 'bryan adams', 'color me badd', 'cc music factory', 'paula abdul', 'timmy t', 'boyz ii men', 'sir mixalot', 'kris kross', 'vanessa williams', 'tlc', 'whitney houston', 'tag team', 'ub40', 'janet jackson', 'silk', 'ace of base', 'all4one', 'boyz ii men', 'celine dion', 'mariah carey', 'coolio featuring lv', 'tlc', 'tlc', 'seal', 'boyz ii men', ""los del r'io"", 'mariah carey and boyz ii men', 'celine dion', 'the tony rich project', 'mariah carey', 'elton john', 'jewel', 'puff daddy featuring faith evans and 112', 'toni braxton', 'puff daddy featuring mase', 'next', 'brandy and monica', 'shania twain', 'savage garden', 'leann rimes', 'cher', 'tlc', 'monica', 'whitney houston featuring faith evans and kelly price', 'britney spears', 'faith hill', 'santana featuring rob thomas', 'santana featuring the product gb', 'joe', 'vertical horizon', 'lifehouse', 'alicia keys', 'janet', 'train', 'jennifer lopez featuring ja rule', 'nickelback', 'ashanti', 'nelly', 'nelly featuring kelly rowland', 'the calling', '50 cent', 'r kelly', 'sean paul', 'beyonce featuring jayz', '3 doors down', 'usher featuring lil jon and ludacris', 'usher', 'alicia keys', 'maroon 5', 'outkast featuring sleepy brown', 'mariah carey', 'gwen stefani', 'mario', 'kelly clarkson', 'ciara and missy elliott', 'daniel powter', 'sean paul', 'nelly furtado featuring timbaland', 'james blunt', 'shakira featuring wyclef jean', 'beyonce', 'rihanna featuring jayz', 'gwen stefani featuring akon', 'fergie', 'tpain featuring yung joc', 'flo rida featuring tpain', 'leona lewis', 'alicia keys', 'lil wayne featuring static major', 'timbaland featuring onerepublic', 'the black eyed peas', 'lady gaga', 'lady gaga featuring colby odonis', 'the black eyed peas', 'taylor swift', 'keha', 'lady antebellum', 'train', 'katy perry featuring snoop dogg', 'usher featuring william', 'adele', 'lmfao featuring lauren bennett and goonrock', 'katy perry', 'katy perry featuring kanye west', 'pitbull featuring neyo afrojack and nayer', 'gotye featuring kimbra', 'carly rae jepsen', ""fun featuring janelle mon'ae"", 'maroon 5 featuring wiz khalifa', 'ellie goulding', 'macklemore and ryan lewis featuring wanz', 'robin thicke featuring ti and pharrell williams', 'imagine dragons', 'baauer', 'macklemore and ryan lewis featuring ray dalton', 'pharrell williams', 'katy perry featuring juicy j', 'john legend', 'iggy azalea featuring charli xcx', 'onerepublic', 'mark ronson featuring bruno mars', 'ed sheeran', 'wiz khalifa featuring charlie puth', 'fetty wap', 'maroon 5']","['sam the sham and the pharaohs', 'ssgt barry sadler', 'the beach boys', 'the beatles', 'the beatles']"
What are the titles of the 3 songs with the shortest lyrics?,,,,ERROR,"['girl youll be a woman soon', 'papa dont preach', 'breathe']"
What are the top 4 songs by rank produced in the most recent year?,What are the song names of the top 4 ranked songs from the most recent year in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_recent_year = dataset[""Year""].max()
    top_songs = dataset[(dataset[""Year""] == most_recent_year) & (dataset[""Rank""] <= 4)]
    song_names = top_songs[""Song""].tolist()

    return song_names",list of (string),"['uptown funk', 'thinking out loud', 'see you again', 'trap queen']","['uptown funk', 'thinking out loud', 'see you again', 'trap queen']"
Who are the artists of the bottom 5 ranked songs?,What are the names of the artists for the five lowest ranked songs in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_ranked_songs = dataset.nsmallest(5, 'Rank')
    artists = lowest_ranked_songs['Artist'].tolist()
    
    return artists",list of (string),"['sam the sham and the pharaohs', 'ssgt barry sadler', 'lulu', 'the beatles', 'the archies']","['marvin gaye', 'wilson pickett', 'neil diamond', 'jerry butler', 'the beatles']"
What are the ranks of the top 3 songs with the most occurrences of the word 'love' in their lyrics?,,,,ERROR,"[64, 41, 28]"
What are the years of production of the bottom 4 ranked songs?,What are the years associated with the four lowest ranked songs in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_ranked_songs = dataset.nsmallest(4, 'Rank')
    years = lowest_ranked_songs['Year'].tolist()
    
    return years",list of (uint16),"[1965, 1966, 1967, 1968]","[1965, 1966, 1967, 1968]"
What are the ranks of the 2 songs produced in the earliest year?,What are the ranks of the two songs with the smallest year value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_year = dataset[""Year""].min()
    min_year_songs = dataset[dataset[""Year""] == min_year]
    ranks = min_year_songs[""Rank""].tolist()
    return ranks",list of (int64),"[1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100]","[1, 2]"
What are the years of production of the top 5 songs with the longest lyrics?,,,,ERROR,"[1998, 2009, 2010, 2007, 2002]"
Is the song with the highest rank from 1965 by the Beatles?,Does the song with the highest rank in the year 1965 have the artist attribute as the Beatles?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    highest_rank_song_1965 = dataset.loc[(dataset[""Year""] == 1965) & (dataset[""Rank""] == dataset.loc[dataset[""Year""] == 1965, ""Rank""].max())]
    is_artist_beatles = highest_rank_song_1965[""Artist""].eq(""The Beatles"").any()

    return is_artist_beatles",bool,False,False
Which artist has the song with the highest rank in 1965?,What is the name of the artist with the song that has the lowest rank value in the year 1965?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_rank_artist_1965 = dataset.loc[(dataset[""Year""] == 1965) & (dataset[""Rank""] == dataset.loc[dataset[""Year""] == 1965, ""Rank""].min())]
    artist_name = lowest_rank_artist_1965[""Artist""].iloc[0]

    return artist_name",string,sam the sham and the pharaohs,sam the sham and the pharaohs
Who are the artists of the top 3 songs in 1965?,What are the names of the artists for the top 3 ranked songs released in the year 1965?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_artists_1965 = dataset[(dataset[""Year""] == 1965) & (dataset[""Rank""] <= 3)]
    artist_names = top_3_artists_1965[""Artist""].tolist()
    
    return artist_names",list of (string),"['sam the sham and the pharaohs', 'four tops', 'the rolling stones']","['sam the sham and the pharaohs', 'four tops', 'the beach boys']"
What are the years of production of the top 3 songs with the word 'love' in their lyrics by the Beatles?,What are the years of the top 3 songs by the Beatles that have the word 'love' in their lyrics?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    beatles_songs = dataset[(dataset[""Artist""] == ""The Beatles"") & (dataset[""Lyrics""].str.contains(""love"", case=False))]
    top_3_songs = beatles_songs.nsmallest(3, ""Rank"")
    years = top_3_songs[""Year""].tolist()
    
    return years",list of (int64),[],"[1967, 1965, 1966]"
"Are there records where the 'count' exceeds 20,000?","Does the dataset contain any rows where the count value is greater than 20,000?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    return (dataset['count'] > 20000).any()",bool,True,True
Do we have any records originating from 'Jefferson'?,Are there any records where the name_origin is 'Jefferson'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_jefferson = dataset[""name_origin""].eq('Jefferson').any()
    return has_jefferson",bool,True,True
Are there destinations with the name 'Baldwin'?,Does the name_dest column contain the value 'Baldwin'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    return 'Baldwin' in dataset['name_dest'].values",bool,True,True
Are there records where the latitude of the destination is greater than 60?,Does the dataset contain any rows where the latitude of the destination is greater than 60?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    result = dataset[""lat_dest""].gt(60).any()
    return result",bool,True,True
How many unique destinations are there in the dataset?,What is the number of distinct destinations in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_destinations = dataset[""name_dest""].nunique()
    return distinct_destinations",int64,1905,3219
"On average, how many times is each origin-destination pair reported?",What is the average count of each unique origin and destination pair in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_count = dataset.groupby([""name_origin"", ""name_dest""])[""count""].mean().mean()
    return average_count",float64,60.56884900000000,67.7453800000000
What's the highest count value in the dataset?,What is the maximum value in the count column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_count = dataset[""count""].max()
    return max_count",uint16,40580,40580
How many unique origin names are there in the dataset?,What is the number of distinct name_origin values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_name_origin_count = dataset[""name_origin""].nunique()
    return distinct_name_origin_count",int64,1904,1904
From which origin do we have the highest 'count' recorded?,What is the origin with the maximum count recorded in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_count_origin = dataset.loc[dataset[""count""] == dataset[""count""].max()][""origin""].values[0]
    return max_count_origin",float64,,
To which destination do we find the highest 'count' reported?,What is the name_dest of the row with the maximum count value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_count_row = dataset.loc[dataset[""count""].idxmax()]
    name_dest = max_count_row[""name_dest""]

    return name_dest",category,Los Angeles,Los Angeles
Which origin has the lowest latitude?,What is the origin with the minimum latitude value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_lat_origin = dataset.loc[dataset[""lat_origin""].idxmin()][""origin""]
return min_lat_origin",float64,72055.0,Guáanica
Which destination has the highest longitude?,What is the name_dest of the destination with the maximum lon_dest value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_lon_dest = dataset.loc[dataset[""lon_dest""] == dataset[""lon_dest""].max()]
    name_dest = max_lon_dest[""name_dest""].iloc[0]

    return name_dest",string,Fajardo,Fajardo
What are the 3 origins with the highest average count?,What are the top 3 origin values with the highest average count in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
average_count = dataset.groupby(""origin"")[""count""].mean().reset_index()
average_count = average_count.sort_values(by=""count"", ascending=False)
top_3_origin = average_count[""origin""].head(3).tolist()
return top_3_origin",list of (float64),"[6037.0, 36061.0, 6075.0]","['Los Angeles', 'New York', 'San Francisco']"
Which are the 4 destinations with the lowest average count?,What are the names of the 4 destinations with the lowest average count of occurrences?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_counts = dataset.groupby(""name_dest"")[""count""].mean().reset_index()
    lowest_average_counts = average_counts.sort_values(by=""count"").head(4)
    names_of_destinations = lowest_average_counts[""name_dest""].tolist()

    return names_of_destinations",list of (string),"['Kalawao', 'Loving', 'Kenedy', 'Wheatland']","['Kalawao', 'Loving', 'Kenedy', 'Wheatland']"
List the 5 origins with the highest average latitude values.,What are the top 5 origins with the highest average latitude values based on the lat_origin column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
average_latitudes = dataset.groupby(""name_origin"")[""lat_origin""].mean().reset_index()
average_latitudes = average_latitudes.sort_values(by=""lat_origin"", ascending=False).head(5)
top_5_origins = average_latitudes[""lat_origin""].tolist()
return top_5_origins",list of (float64),"[69.42718361, 67.1026012, 65.55633884, 64.86897452, 64.84688024]","['North Slope', 'Northwest Arctic', 'Yukon-Koyukuk', 'Nome', 'Fairbanks North Star']"
Which 2 origins have the lowest non-null average longitude values?,"What are the two origins with the lowest average longitude values, excluding any null values?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    non_null_dataset = dataset.dropna(subset=['lon_origin'])
    average_lon = non_null_dataset.groupby('name_origin')['lon_origin'].mean().reset_index()
    lowest_two = average_lon.sort_values(by='lon_origin').head(2)
    answer = lowest_two['lon_origin'].tolist()
    return answer",list of (float64),"[-167.08526, -163.9614772]","['Aleutians West', 'Nome']"
List the highest 5 count values.,What are the top 5 count values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_count_values = dataset['count'].nlargest(5).tolist()
    return top_5_count_values",list of (uint16),"[40580, 39899, 38430, 28524, 24452]","[40580, 39899, 38430, 28524, 24452]"
What are the 3 highest latitude values for destinations?,"What are the top three highest latitude values for destinations in the dataset, specifically from the lat_dest column?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_three_latitudes = dataset['lat_dest'].nlargest(3).tolist()
    return top_three_latitudes",list of (float64),"[69.42718361, 69.42718361, 69.42718361]","[69.42718361, 69.42718361, 69.42718361]"
Rank the lowest 4 longitude values for origins.,What are the four smallest longitude values for the origins in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_longitudes = dataset['lon_origin'].nsmallest(4).tolist()
    return smallest_longitudes",list of (float64),"[-167.08526, -167.08526, -167.08526, -167.08526]","[-167.08526, -167.08526, -167.08526, -167.08526]"
Which 6 destination IDs have the highest average counts?,What are the 6 destination IDs with the highest average counts in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_counts = dataset.groupby(""dest"")[""count""].mean().reset_index()
    average_counts = average_counts.sort_values(by=""count"", ascending=False)
    top_6_dest_ids = average_counts[""dest""].head(6).tolist()

    return top_6_dest_ids",list of (uint32),"[6037, 36061, 48201, 6059, 6071, 6085]","[6037, 36061, 48201, 6059, 6071, 6085]"
Are there talks with more than a million views?,Do any talks have a view count greater than one million?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_million_views = (dataset[""views""] > 1000000).any()
    return has_million_views",bool,True,True
Is there a talk by 'Elon Musk'?,Does 'Elon Musk' appear as a speaker in any of the talks?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    elon_musk_appears = dataset['speaker_1'].str.contains('Elon Musk').any() or dataset['all_speakers'].str.contains('Elon Musk').any()
    return elon_musk_appears",bool,True,True
Are there any TEDx events included?,Does the event column in the dataset contain any TEDx events?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    tedx_events = dataset[dataset[""event""].str.contains(""TEDx"")]
    return not tedx_events.empty",bool,True,True
Are there talks available in more than 10 languages?,Is the number of unique languages in the available_lang column greater than 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unique_languages = dataset['available_lang'].str.split(',').explode().unique()
    is_greater_than_10 = len(unique_languages) > 10

    return is_greater_than_10",bool,False,True
How many unique speakers are there in the dataset?,What is the number of distinct speakers in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_speakers = dataset['speaker_1'].nunique()
    return distinct_speakers",int64,3274,3274
What's the average number of views for the talks?,What is the mean of the views for all the talks in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_views = dataset[""views""].mean()
    return mean_views",float64,2148005.5737830000,2148005.5737830000
What's the maximum duration of a talk (in seconds)?,What is the maximum value in the duration column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_duration = dataset[""duration""].max()
    return max_duration",uint16,3922,3922
How many talks have more than 500 comments?,What is the number of talks that have a comment count greater than 500?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    talks_with_comments_greater_than_500 = dataset[dataset[""comments""] > 500]
    number_of_talks = len(talks_with_comments_greater_than_500)

    return number_of_talks",int64,186,186
Which event has the highest average views?,What is the event with the maximum average views in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_views_per_event = dataset.groupby(""event"")[""views""].mean()
    max_average_views_event = average_views_per_event.idxmax()

    return max_average_views_event",string,TEDxPuget Sound,TEDxPuget Sound
Which speaker's talk has the most comments?,What is the speaker_1 whose talk has the maximum number of comments?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_comments_talk = dataset.loc[dataset[""comments""] == dataset[""comments""].max()]
    speaker_1 = max_comments_talk[""speaker_1""].iloc[0]

    return speaker_1",string,Richard Dawkins,Richard Dawkins
Which talk's title has the least views?,What is the title of the talk with the minimum views?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_views_talk = dataset.loc[dataset[""views""] == dataset[""views""].min()]
    title = min_views_talk[""title""].iloc[0]

    return title",string,Por qué necesitamos proteger el alta mar,Por qué necesitamos proteger el alta mar
In which event was the longest talk held?,What is the event where the talk with the maximum duration was held?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_duration_talk = dataset.loc[dataset[""duration""] == dataset[""duration""].max()]
    event = max_duration_talk[""event""].iloc[0]

    return event",string,Countdown,Countdown
Which are the top 4 events with the highest average number of comments?,What are the names of the top 4 events with the highest average number of comments?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_comments_per_event = dataset.groupby(""event"")[""comments""].mean().reset_index()
    top_4_events = average_comments_per_event.sort_values(by=""comments"", ascending=False).head(4)
    top_4_event_names = top_4_events[""event""].tolist()

    return top_4_event_names",list of (string),"['TEDxPuget Sound', 'TEDxHouston', 'TEDxFiDiWomen', 'TEDxUW']","['TEDxPuget Sound', 'TEDxHouston', 'TEDxFiDiWomen', 'TEDxUW']"
List the top 3 most frequent speakers in the dataset. If two have the same count go by alphabetical order. ,"What are the names of the top 3 speakers who appear most frequently in the all_speakers column, resolving ties by sorting alphabetically?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    all_speakers = dataset['all_speakers'].str.split(',').explode()
    top_speakers = all_speakers.value_counts().reset_index()
    top_speakers.columns = ['speaker', 'count']
    top_speakers = top_speakers.sort_values(by=['count', 'speaker'], ascending=[False, True])
    top_3_speakers = top_speakers.head(3)['speaker'].tolist()
    return top_3_speakers",list of (string),"[""{0: 'Alex Gendler'}"", ""{0: 'Iseult Gillespie'}"", ""{0: 'Emma Bryce'}""]","['Alex Gendler', 'Iseult Gillespie', 'Emma Bryce']"
Which 5 events have the shortest average talk durations?,What are the names of the 5 events with the shortest average duration of talks?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_duration_by_event = dataset.groupby(""event"")[""duration""].mean().reset_index()
    average_duration_by_event = average_duration_by_event.sort_values(by=""duration"")
    shortest_5_events = average_duration_by_event.head(5)
    event_names = shortest_5_events[""event""].tolist()

    return event_names",list of (string),"['TEDxConcorde', 'Small Thing Big Idea', 'The TED Interview', 'TEDxConcordiaUPortland', 'The Way We Work']","['TEDxConcorde', 'Small Thing Big Idea', 'The TED Interview', 'TEDxConcordiaUPortland', 'The Way We Work']"
List 2 events with the most number of talks.,What are the names of the two events with the highest number of talks in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    event_counts = dataset['event'].value_counts()
    top_two_events = event_counts.nlargest(2).index.tolist()
    
    return top_two_events",list of (string),"['TED-Ed', 'TED2018']","['TED-Ed', 'TED2018']"
What are the top 4 most viewed talks' view counts?,What are the view counts of the top 4 talks with the most views in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_4_talks = dataset.nlargest(4, 'views')
    view_counts = top_4_talks['views'].tolist()
    
    return view_counts",list of (uint32),"[65051954, 57074270, 56932551, 49730580]","[65051954, 57074270, 56932551, 49730580]"
List the 3 shortest talk durations in the dataset.,What are the three smallest values in the duration column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_durations = dataset['duration'].nsmallest(3).tolist()
    return smallest_durations",list of (uint16),"[60, 78, 78]","[60, 78, 78]"
What are the 5 highest number of comments?,What are the top 5 highest values in the comments column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_comments = dataset['comments'].nlargest(5).tolist()
    return top_5_comments",list of (float64),"[6449.0, 4931.0, 3424.0, 3006.0, 2984.0]","[6449.0, 4931.0, 3424.0, 3006.0, 2984.0]"
List the view counts of the 6 least viewed talks.,What are the view counts of the six talks with the lowest number of views?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_views_talks = dataset.nsmallest(6, 'views')
    view_counts = lowest_views_talks['views'].tolist()
    
    return view_counts",list of (uint32),"[0, 0, 0, 0, 0, 0]","[0, 0, 0, 0, 0, 0]"
Is it true that the oldest person in the dataset has a stroke?,Does the person with the maximum age in the dataset have a stroke value greater than 0?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_age_individual = dataset.loc[dataset[""age""] == dataset[""age""].max()]
    has_stroke = max_age_individual[""stroke""].values[0] > 0

    return has_stroke",bool,True,True
Do all smokers have hypertension?,Is hypertension present in every individual with a smoking status of smoker?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smokers = dataset[dataset[""smoking_status""] == ""smoker""]
    hypertension_present = (smokers[""hypertension""] > 0).all()

    return hypertension_present",bool,True,False
Are all people with heart diseases married?,Is the ever_married attribute True for all individuals where heart_disease is greater than 0?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
individuals_with_heart_disease = dataset[dataset[""heart_disease""] > 0]
ever_married_attribute = individuals_with_heart_disease[""ever_married""]

return ever_married_attribute.eq(""Yes"").all()",bool,False,False
Is the average glucose level higher for males than females?,Is the mean of avg_glucose_level for males greater than the mean of avg_glucose_level for females?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    male_avg_glucose = dataset[dataset[""gender""] == ""Male""][""avg_glucose_level""].mean()
    female_avg_glucose = dataset[dataset[""gender""] == ""Female""][""avg_glucose_level""].mean()
    
    return male_avg_glucose > female_avg_glucose",bool,True,True
How many people in the dataset have a stroke?,What is the total count of individuals in the dataset where the stroke attribute is greater than 0?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_count = len(dataset[dataset[""stroke""] > 0])
    return total_count",int64,249,249
What is the average age of people who smoke?,What is the mean age of individuals where smoking status is not never smoked or former smoker?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_dataset = dataset[(dataset[""smoking_status""] != ""never smoked"") & (dataset[""smoking_status""] != ""formerly smoked"")]
    mean_age = filtered_dataset[""age""].mean()

    return mean_age",float64,37.73850300000000,47.09632400000000
What is the highest glucose level recorded in the dataset?,What is the maximum value of avg_glucose_level in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_avg_glucose_level = dataset[""avg_glucose_level""].max()
return max_avg_glucose_level",float64,271.74,271.74
How many unique 'work_type' categories are there in the dataset?,What is the number of distinct categories in the 'work_type' column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
num_distinct_work_types = dataset[""work_type""].nunique()
return num_distinct_work_types",int64,5,5
What is the most common work type among stroke patients?,Which work type category appears most frequently in the work_type column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_work_type = dataset['work_type'].mode().iloc[0]
    return most_frequent_work_type",string,Private,Private
What is the smoking status of the youngest person in the dataset?,What is the smoking status category of the person with the minimum age in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_age_individual = dataset.loc[dataset[""age""] == dataset[""age""].min()]
smoking_status = min_age_individual[""smoking_status""].iloc[0]

return smoking_status",category,Unknown,Unknown
What is the residence type of the person with the highest BMI?,What is the residence type category of the individual with the maximum bmi value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_bmi_individual = dataset.loc[dataset[""bmi""] == dataset[""bmi""].max()]
    residence_type = max_bmi_individual[""Residence_type""].iloc[0]

    return residence_type",category,Rural,Rural
What is the gender of the person with the lowest glucose level?,What is the gender category of the individual with the minimum average glucose level in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_glucose_individual = dataset.loc[dataset[""avg_glucose_level""] == dataset[""avg_glucose_level""].min()]
gender_category = min_glucose_individual[""gender""].iloc[0]

return gender_category",category,Female,Female
What are the top 3 work types among people with heart diseases?,"What are the three most common work types among individuals who have heart disease, as indicated by the heart_disease column in the dataset?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    heart_disease_individuals = dataset[dataset[""heart_disease""] == 1]
    work_type_counts = heart_disease_individuals[""work_type""].value_counts()
    most_common_work_types = work_type_counts.nlargest(3).index.tolist()
    
    return most_common_work_types",list of (string),"['Private', 'Self-employed', 'Govt_job']","['Private', 'Self-employed', 'Govt_job']"
What are the 5 most common smoking statuses among people with a stroke?,What are the top 5 most frequent smoking_status categories for individuals who have had a stroke?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    stroke_individuals = dataset[dataset[""stroke""] == 1]
    smoking_status_counts = stroke_individuals[""smoking_status""].value_counts()
    top_5_smoking_status = smoking_status_counts.nlargest(5).index.tolist()
    
    return top_5_smoking_status",list of (string),"['never smoked', 'formerly smoked', 'Unknown', 'smokes']","['never smoked', 'formerly smoked', 'Unknown', 'smokes']"
What are the top 2 residence types of people with hypertension?,What are the two most common Residence_type categories among individuals where hypertension is present?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    individuals_with_hypertension = dataset[dataset[""hypertension""] > 0]
    residence_type_counts = individuals_with_hypertension[""Residence_type""].value_counts()
    two_most_common_residence_types = residence_type_counts.nlargest(2).index.tolist()
    
    return two_most_common_residence_types",list of (string),"['Rural', 'Urban']","['Rural', 'Urban']"
What are the top 2 work types among people who have never married?,What are the two most common work types among individuals where ever_married is No?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    unmarried_individuals = dataset[dataset[""ever_married""] == ""No""]
    work_type_counts = unmarried_individuals[""work_type""].value_counts()
    two_most_common_work_types = work_type_counts.nlargest(2).index.tolist()
    
    return two_most_common_work_types",list of (string),"['Private', 'children']","['Private', 'children']"
What are the oldest 5 ages of people with strokes?,What are the top 5 highest ages of individuals who have had a stroke?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    stroke_individuals = dataset[dataset[""stroke""] == 1]
    top_5_highest_ages = stroke_individuals[""age""].sort_values(ascending=False).head(5).tolist()
    
    return top_5_highest_ages",list of (float64),"[82.0, 82.0, 82.0, 82.0, 82.0]","[82.0, 82.0, 82.0, 82.0, 82.0]"
What are the 3 lowest BMIs among people who smoke?,What are the three smallest bmi values for individuals where smoking_status indicates they smoke?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smokers = dataset[dataset[""smoking_status""] == ""smokes""]
    smallest_bmi_values = smokers[""bmi""].nsmallest(3).tolist()
    
    return smallest_bmi_values",list of (float64),"[15.7, 16.7, 16.7]","[15.7, 16.7, 16.7]"
What are the top 4 glucose levels of people who have heart diseases?,What are the four highest average glucose levels among individuals with heart disease?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
heart_disease_individuals = dataset[dataset[""heart_disease""] == 1]
avg_glucose_levels = heart_disease_individuals[""avg_glucose_level""].sort_values(ascending=False).head(4).tolist()
return avg_glucose_levels",list of (float64),"[271.74, 254.63, 254.6, 252.72]","[271.74, 254.63, 254.6, 252.72]"
What are the 6 highest ages of people who have never married?,What are the six highest age values of individuals where the ever_married attribute is set to No or a similar category indicating they have never married?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    never_married_individuals = dataset[dataset[""ever_married""] == ""No""]
    highest_age_values = never_married_individuals[""age""].sort_values(ascending=False).head(6).tolist()
    
    return highest_age_values",list of (float64),"[82.0, 82.0, 82.0, 82.0, 82.0, 82.0]","[82.0, 82.0, 82.0, 82.0, 82.0, 82.0]"
Are there any reflections with more than 10 sentences?,Does any reflection have a number of sentences greater than 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_more_than_10_sentences = (dataset[""num_sentence""] > 10).any()
    return has_more_than_10_sentences",bool,True,True
Is there a reflection from 'USA' with over 5 sentences?,Does any reflection from the 'USA' have more than 5 sentences?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    usa_reflections = dataset[dataset[""country""] == ""USA""]
    has_more_than_5_sentences = (usa_reflections[""num_sentence""] > 5).any()

    return has_more_than_5_sentences",bool,True,True
Are there any reflections categorized as 'affection'?,Does the dataset contain any reflections with a ground truth category of 'affection'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    affection_reflections = dataset[dataset[""ground_truth_category""] == 'affection']
    return not affection_reflections.empty",bool,True,True
Are there any married individuals who reflected on 'exercise'?,Does the dataset contain any records where the marital status is married and the cleaned_hm reflection is 'exercise'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    married_and_exercise = dataset[(dataset[""marital""] == ""married"") & (dataset[""cleaned_hm""] == ""exercise"")]
    return not married_and_exercise.empty",bool,False,True
How many unique reflection periods are there?,What is the number of distinct reflection periods in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_reflection_periods = dataset[""reflection_period""].nunique()
    return distinct_reflection_periods",int64,2,2
"On average, how many sentences are there in the reflections?",What is the mean number of sentences in the reflections as represented by the num_sentence column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
mean_num_sentence = dataset[""num_sentence""].mean()

return mean_num_sentence",float64,1.3407670000000000,1.3407670000000000
What's the highest age of an individual in the dataset?,What is the maximum age value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_age = dataset[""age""].max()
return max_age",float64,233.0,233.0
How many reflections are from 'IND'?,What is the count of rows where the country is 'IND'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = len(dataset[dataset[""country""] == ""IND""])
    return count",int64,16729,16729
Which country has the highest average number of sentences in their reflections?,What country has the maximum average value of num_sentence in the given dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_num_sentence_per_country = dataset.groupby(""country"")[""num_sentence""].mean()
    country_with_max_average_num_sentence = average_num_sentence_per_country.idxmax()

    return country_with_max_average_num_sentence",string,UKR,UKR
Which gender has the most reflections categorized as 'affection'?,What is the gender with the highest frequency of ground truth category being 'affection'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    affection_dataset = dataset[dataset[""ground_truth_category""] == 'affection']
    gender_counts = affection_dataset[""gender""].value_counts()
    most_frequent_gender = gender_counts.idxmax()

    return most_frequent_gender",string,m,f
From which country is the oldest individual who reflected?,What is the country of the individual with the maximum age who reflected?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_age_individual = dataset.loc[dataset[""age""] == dataset[""age""].max()]
    country = max_age_individual[""country""].iloc[0]

    return country",category,USA,USA
Which marital status has the most reflections on 'bonding'?,What marital status category appears most frequently in relation to the 'bonding' reflection period?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    bonding_reflection_period = dataset[dataset['reflection_period'] == 'bonding']
    marital_status_counts = bonding_reflection_period['marital'].value_counts()
    most_frequent_marital_status = marital_status_counts.idxmax()

    return most_frequent_marital_status",string,single,single
Which are the top 3 countries with the highest average number of sentences in their reflections?,What are the names of the top three countries with the highest average number of sentences in their reflections?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_sentences_per_country = dataset.groupby(""country"")[""num_sentence""].mean().reset_index()
    top_three_countries = average_sentences_per_country.sort_values(by=""num_sentence"", ascending=False).head(3)
    top_three_country_names = top_three_countries[""country""].tolist()

    return top_three_country_names",list of (string),"['UKR', 'CRI', 'HKG']","['UKR', 'CRI', 'HKG']"
List the 4 most common predicted categories in the dataset.,What are the top 4 most frequently occurring predicted categories in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
predicted_categories = dataset[""predicted_category""].value_counts().head(4).index.tolist()
return predicted_categories",list of (string),"['affection', 'achievement', 'enjoy_the_moment', 'bonding']","['affection', 'achievement', 'enjoy_the_moment', 'bonding']"
Which 5 countries have the youngest average age of reflectors?,What are the names of the 5 countries with the lowest average age of reflectors?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_age_by_country = dataset.groupby(""country"")[""age""].mean().reset_index()
    average_age_by_country = average_age_by_country.sort_values(by=""age"")
    countries_with_lowest_average_age = average_age_by_country.head(5)[""country""].tolist()
    
    return countries_with_lowest_average_age",list of (string),"['KAZ', 'ALB', 'LKA', 'SLV', 'MAR']","['KAZ', 'ALB', 'LKA', 'MAR', 'SLV']"
List 2 genders with the most number of reflections.,What are the two most common gender categories in the dataset based on the number of occurrences?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
gender_counts = dataset[""gender""].value_counts()
most_common_genders = gender_counts.nlargest(2).index.tolist()
return most_common_genders",list of (string),"['m', 'f']","['m', 'f']"
What are the lowest 4 number of sentences?,What are the four smallest values in the num_sentence column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_values = dataset[""num_sentence""].nsmallest(4).tolist()
    return smallest_values",list of (uint8),"[1, 1, 1, 1]","[1, 1, 1, 1]"
List the 3 highest ages in the dataset.,What are the top 3 highest age values present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_highest_age = dataset['age'].sort_values(ascending=False).head(3).tolist()
    return top_3_highest_age",list of (float64),"[233.0, 233.0, 233.0]","[233.0, 233.0, 233.0]"
Which are the highest 5 number of sentences?,What are the top 5 highest values of the number of sentences in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_num_sentence = dataset['num_sentence'].sort_values(ascending=False).head(5).tolist()
    return top_5_num_sentence",list of (uint8),"[69, 60, 58, 56, 53]","[69, 60, 58, 56, 53, 51]"
List the age of the 6 youngest individuals in the dataset.,What are the ages of the six individuals with the lowest age values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    six_lowest_ages = dataset['age'].nsmallest(6).tolist()
    return six_lowest_ages",list of (float64),"[2.0, 2.0, 2.0, 2.0, 2.0, 2.0]","[2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0]"
Is it true that the youngest participant has met their match?,,,,ERROR,False
Do all people who got a match have the same race as their partner?,Is the race of every person who got a match the same as their partner's race?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    matched_individuals = dataset[dataset[""match""] == 1]
    same_race = matched_individuals.apply(lambda row: row[""race""] == row[""race_o""], axis=1)
    return same_race.all()",bool,False,False
Are all participants who expected more than 5 matches male?,Is the gender of all participants who expected more than 5 matches male?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    participants_with_more_than_5_matches = dataset[dataset[""expected_num_matches""] > 5]
    gender_of_participants = participants_with_more_than_5_matches[""gender""].unique()
    is_all_male = len(gender_of_participants) == 1 and gender_of_participants[0] == ""male""

    return is_all_male",bool,False,True
Is the average age of participants who got a match higher than those who didn't?,Is the mean age of participants who had a match greater than the mean age of participants who did not have a match?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    matched_participants = dataset[dataset[""match""] == 1]
    unmatched_participants = dataset[dataset[""match""] == 0]
    
    mean_age_matched = matched_participants[""age""].mean()
    mean_age_unmatched = unmatched_participants[""age""].mean()
    
    return mean_age_matched > mean_age_unmatched",bool,False,False
How many participants had a match?,What is the total number of participants where the match attribute is set to 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    total_participants = len(dataset[dataset[""match""] == 1])
    return total_participants",int64,1380,1380
What is the average age of participants who have the same race as their partner?,What is the mean age of participants where the race of the participant is the same as their partner's race?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    same_race_participants = dataset[dataset[""race""] == dataset[""race_o""]]
    mean_age = same_race_participants[""age""].mean()

    return mean_age",float64,26.390237000000000,26.390237000000000
What is the highest number of matches expected by any participant in the dataset?,What is the maximum value of expected number of matches in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_expected_matches = dataset[""expected_num_matches""].max()
    return max_expected_matches",float64,18.0,18.0
How many unique 'race' categories are there in the dataset?,What is the number of distinct categories in the 'race' column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_race_categories = dataset[""race""].nunique()
    return distinct_race_categories",int64,5,5
What is the most common race among participants who got a match?,What is the most frequently occurring race among participants where the match attribute is 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    matched_participants = dataset[dataset[""match""] == 1]
    most_frequent_race = matched_participants[""race""].mode().iloc[0]
    
    return most_frequent_race",string,european/caucasian-american,european/caucasian-american
What is the gender of the youngest participant in the dataset?,What is the gender category of the participant with the minimum age in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_age_participant = dataset.loc[dataset[""age""] == dataset[""age""].min()]
    gender_category = min_age_participant[""gender""].iloc[0]

    return gender_category",string,male,male
What is the race of the participant with the highest number of expected matches?,What is the race of the participant who has the maximum expected number of matches?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_matches_participant = dataset.loc[dataset[""expected_num_matches""] == dataset[""expected_num_matches""].max()]
    race = max_matches_participant[""race""].iloc[0]

    return race",category,other,other
What is the wave of the participant with the youngest age?,What is the wave value of the participant who has the minimum age?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_age_participant = dataset.loc[dataset[""age""] == dataset[""age""].min()]
    wave_value = min_age_participant[""wave""].values[0]

    return wave_value",uint8,5,5
What are the top 3 waves among people who got a match?,What are the top 3 wave values among the people for whom the match attribute is set to 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    matched_individuals = dataset.loc[dataset[""match""] == 1]
    top_3_wave_values = matched_individuals[""wave""].value_counts().head(3).index.tolist()
    
    return top_3_wave_values",list of (uint8),"[21, 4, 11]","[21, 4, 11]"
What are the 5 most common races among people who expected more than 5 matches?,What are the top 5 most frequent races among individuals who have an expected number of matches greater than 5?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_dataset = dataset[dataset[""expected_num_matches""] > 5]
    top_5_races = filtered_dataset[""race""].value_counts().head(5).index.tolist()
    return top_5_races",list of (string),"['european/caucasian-american', 'asian/pacific islander/asian-american', 'black/african american', 'latino/hispanic american', 'other']","['european/caucasian-american', 'asian/pacific islander/asian-american', 'black/african american', 'latino/hispanic american', 'other']"
What are the top 4 waves of people who have the same race as their partner?,What are the top 4 wave numbers where the participants have the same race as their partner?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    same_race_participants = db.loc[db[""samerace""] == 1]
    wave_counts = same_race_participants[""wave""].value_counts()
    top_4_waves = wave_counts.nlargest(4).index.tolist()
    
    return top_4_waves",list of (uint8),"[15, 9, 21, 11]","[15, 9, 21, 11]"
What are the top 2 genders among people who expected no match?,What are the two most common genders among individuals who have an expected number of matches equal to zero?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    zero_matches = dataset[dataset[""expected_num_matches""] == 0]
    gender_counts = zero_matches[""gender""].value_counts()
    most_common_genders = gender_counts.nlargest(2).index.tolist()
    
    return most_common_genders",list of (string),"['female', 'male']","['female', 'male']"
What are the top 5 ages of participants who got a match?,What are the top 5 age values of participants where the match attribute is 1?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    matched_participants = db.loc[db[""match""] == 1]
    top_5_ages = matched_participants[""age""].nlargest(5).tolist()
    return top_5_ages",list of (float64),"[42.0, 42.0, 42.0, 42.0, 39.0]","[42.0, 42.0, 42.0, 42.0, 39.0]"
What are the 3 lowest numbers of matches expected by people who got a match?,What are the three smallest expected numbers of matches for individuals who actually got a match?,"def answer_question(db, datasetTableSchema, question, expectedAnswerType):
    matched_individuals = db.loc[db[""match""] == 1]
    smallest_expected_matches = matched_individuals[""expected_num_matches""].nsmallest(3).tolist()
    return smallest_expected_matches",list of (int64),"[0.0, 0.0, 0.0]","[0.0, 0.0, 0.0]"
What are the top 4 ages of people who have the same race as their partner?,What are the four highest ages of individuals where the race of the person matches the race of their partner?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    same_race_individuals = dataset[dataset[""race""] == dataset[""race_o""]]
    ages = same_race_individuals[""age""].sort_values(ascending=False).head(4).tolist()
    return ages",list of (float64),"[55.0, 55.0, 55.0, 42.0]","[55.0, 55.0, 55.0, 42.0]"
What are the 6 youngest ages of participants who expected no match?,What are the six smallest age values of participants where the expected number of matches is zero?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    zero_matches = dataset[dataset[""expected_num_matches""] == 0]
    smallest_six_ages = zero_matches[""age""].nsmallest(6).tolist()
    return smallest_six_ages",list of (float64),"[18.0, 18.0, 18.0, 18.0, 18.0, 18.0]","[18.0, 18.0, 18.0, 18.0, 18.0, 18.0]"
Are there any tweets with more than 10 retweets?,Does any tweet have a retweet count greater than 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_retweet_count_greater_than_10 = (dataset[""retweet_count""] > 10).any()
    return has_retweet_count_greater_than_10",bool,True,True
Is there a negative sentiment tweet from 'United' airline?,Does the dataset contain a tweet with negative sentiment from the airline 'United'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    united_tweets = dataset[dataset['airline'] == 'United']
    negative_sentiment_united_tweets = united_tweets[united_tweets['airline_sentiment'] == 'negative']
    
    return not negative_sentiment_united_tweets.empty",bool,True,True
Are there any tweets categorized with 'Late Flight' as the negative reason?,Does the dataset contain any tweets where the negative reason is 'Late Flight'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    late_flight_tweets = dataset[dataset[""negativereason""] == ""Late Flight""]
    return not late_flight_tweets.empty",bool,True,True
Are there any tweets from 'Eastern Time (US & Canada)' timezone with positive sentiment?,Does the dataset contain any tweets with positive airline sentiment and a user timezone of 'Eastern Time (US & Canada)'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    positive_sentiment = dataset[(dataset[""airline_sentiment""] == ""positive"") & (dataset[""user_timezone""] == ""Eastern Time (US & Canada)"")]
    return not positive_sentiment.empty",bool,True,True
How many unique user timezones are there in the dataset?,What is the number of distinct user timezones present in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_user_timezones = dataset[""user_timezone""].nunique()
    return distinct_user_timezones",int64,85,85
"On average, what is the sentiment confidence of the tweets?",What is the mean value of the airline_sentiment_confidence column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_airline_sentiment_confidence = dataset[""airline_sentiment_confidence""].mean()
    return mean_airline_sentiment_confidence",float64,0.9001690000000000,0.9001690000000000
What's the maximum number of retweets a tweet has received?,What is the highest retweet count among all the tweets?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_retweet_count = dataset[""retweet_count""].max()
    return max_retweet_count",int64,44,44
How many tweets are from 'Virgin America' airline?,What is the total count of tweets where the airline is 'Virgin America'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    virgin_america_tweets = dataset[dataset[""airline""] == 'Virgin America']
    total_count = len(virgin_america_tweets)

    return total_count",int64,504,504
Which airline has the highest average sentiment confidence?,What is the airline with the maximum average airline sentiment confidence?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_confidence = dataset.groupby(""airline"")[""airline_sentiment_confidence""].mean()
    max_confidence_airline = average_confidence.idxmax()
    
    return max_confidence_airline",string,US Airways,US Airways
Which negative reason is most commonly associated with 'American' airline?,What is the most frequent negative reason mentioned for the airline 'American' in the tweets?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    american_airline_tweets = dataset[dataset[""airline""] == ""American""]
    most_frequent_negative_reason = american_airline_tweets[""negativereason""].mode().iloc[0]
    
    return most_frequent_negative_reason",string,Customer Service Issue,Customer Service Issue
From which timezone is the tweet with the highest sentiment confidence?,What is the user_timezone of the tweet with the maximum airline_sentiment_confidence?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_confidence_tweet = dataset.loc[dataset[""airline_sentiment_confidence""] == dataset[""airline_sentiment_confidence""].max()]
user_timezone = max_confidence_tweet[""user_timezone""].iloc[0]

return user_timezone",category,Eastern Time (US & Canada),Eastern Time (US & Canada)
Which airline has the most tweets with negative sentiment?,What is the airline with the highest number of tweets where the airline_sentiment is negative?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    negative_tweets = dataset[dataset[""airline_sentiment""] == ""negative""]
    airline_counts = negative_tweets[""airline""].value_counts()
    max_airline = airline_counts.idxmax()

    return max_airline",string,United,United
Which are the top 3 airlines with the highest average sentiment confidence?,What are the names of the top 3 airlines with the highest average airline sentiment confidence?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    average_confidence = dataset.groupby(""airline"")[""airline_sentiment_confidence""].mean().reset_index()
    top_3_airlines = average_confidence.nlargest(3, ""airline_sentiment_confidence"")
    top_3_airline_names = top_3_airlines[""airline""].tolist()

    return top_3_airline_names",list of (string),"['US Airways', 'American', 'United']","['US Airways', 'American', 'United']"
List the 3 most common negative reasons in the dataset.,What are the top 3 most frequently occurring negative reasons in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    negativereason_counts = dataset['negativereason'].value_counts()
    top_3_negativereasons = negativereason_counts.nlargest(3).index.tolist()
    
    return top_3_negativereasons",list of (string),"['Customer Service Issue', 'Late Flight', ""Can't Tell""]","['Customer Service Issue', 'Late Flight', 'Can't Tell']"
Which 3 user timezones have the most number of tweets?,What are the top 3 user timezones with the highest frequency of tweets?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_timezones = dataset[""user_timezone""].value_counts().head(3).index.tolist()
    return top_3_timezones",list of (string),"['Eastern Time (US & Canada)', 'Central Time (US & Canada)', 'Pacific Time (US & Canada)']","['Eastern Time (US & Canada)', 'Central Time (US & Canada)', 'Pacific Time (US & Canada)']"
List the 2 airlines with the least number of tweets in the dataset.,What are the names of the two airlines with the minimum number of tweets in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    airline_tweet_counts = dataset[""airline""].value_counts()
    min_tweet_count = airline_tweet_counts.min()
    min_airlines = airline_tweet_counts[airline_tweet_counts == min_tweet_count].index.tolist()
    if len(min_airlines) > 2:
        min_airlines = min_airlines[:2]
    return min_airlines",list of (string),['Virgin America'],"['Virgin America', 'Delta']"
What are the top 4 tweet IDs with the lowest sentiment confidence?,What are the top 4 tweet ids that have the smallest airline sentiment confidence values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_confidence_ids = dataset.nsmallest(4, 'airline_sentiment_confidence')['tweet_id'].tolist()
    return smallest_confidence_ids",list of int64,"[569972097453137920, 568092537786748928, 568028183267639297, 568993773277069312]","[570306133677760513, 570301031407624196, 570300817074462722, 570300767074181121]"
List the 3 highest retweet counts in the dataset.,"What are the top 3 highest retweet counts in the dataset, ordered in descending order by retweet count?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_retweet_counts = dataset['retweet_count'].sort_values(ascending=False).head(3).tolist()
    return top_3_retweet_counts",list of (int64),"[44, 32, 31]","[44, 32, 31]"
What are the 2 lowest values for sentiment confidence?,What are the two smallest values in the airline_sentiment_confidence column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    smallest_two_confidences = dataset['airline_sentiment_confidence'].nsmallest(2).tolist()
    return smallest_two_confidences",list of (float64),"[0.335, 0.3353]","[0.335, 0.335]"
List the 6 highest sentiment confidence values.,What are the top 6 highest values of airline sentiment confidence in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_6_confidence = dataset['airline_sentiment_confidence'].sort_values(ascending=False).head(6).tolist()
    return top_6_confidence",list of (float64),"[1.0, 1.0, 1.0, 1.0, 1.0, 1.0]","[1.0, 1.0, 1.0, 1.0, 1.0, 1.0]"
Is it true that the student with the highest number of absences is from a rural area?,Does the student with the maximum number of absences have an address attribute set to rural?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_absences_student = dataset.loc[dataset[""absences""] == dataset[""absences""].max()]
    address = max_absences_student[""address""].iloc[0]
    return address == ""rural""",bool,False,True
Are all students who are in a romantic relationship older than 17?,Is the age of every student who is in a romantic relationship greater than 17?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    romantic_students = dataset[dataset[""romantic""] == ""yes""]
    ages = romantic_students[""age""]
    return (ages > 17).all()",bool,False,False
Is the average final grade (G3) of students who consume a lot of alcohol (Dalc > 2) lower than those who don't?,Is the mean of the final grade of students who have a weekly alcohol consumption greater than 2 less than the mean of the final grade of students who have a weekly alcohol consumption less than or equal to 2?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_final_grade_high_alcohol = dataset.loc[dataset[""Walc""] > 2, ""G3""].mean()
    mean_final_grade_low_alcohol = dataset.loc[dataset[""Walc""] <= 2, ""G3""].mean()
    is_mean_less = mean_final_grade_high_alcohol < mean_final_grade_low_alcohol

    return is_mean_less",bool,True,True
Do all students who have both parents at home (Pstatus = 'T') have more than 3 free time after school (freetime > 3)?,Is it true that every student with both parents at home has more than 3 hours of free time after school?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    students_with_both_parents = dataset[dataset[""famsup""] == ""yes""]
    has_more_than_3_hours_free_time = (students_with_both_parents[""freetime""] > 3).all()

    return has_more_than_3_hours_free_time",bool,False,False
How many students have their mother's education (Medu) level above 3?,"What is the number of students where the mother's education level, Medu, is greater than 3?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    num_students = len(dataset[dataset[""Medu""] > 3])
    return num_students",int64,131,131
What is the average age of students who want to take higher education (higher = 'yes')?,What is the mean age of students where the higher education attribute is 'yes'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    higher_education_students = dataset[dataset[""higher""] == ""yes""]
    mean_age = higher_education_students[""age""].mean()

    return mean_age",float64,16.634667000000000,16.634667000000000
What is the highest number of absences among students?,What is the maximum value of absences among all the students in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_absences = dataset[""absences""].max()
    return max_absences",int64,75,75
How many unique schools are there in the dataset?,What is the number of distinct schools in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_schools = dataset[""school""].nunique()
    return distinct_schools",int64,2,2
What is the most common mother's job among students who want to take higher education?,"What is the most frequently occurring mother's job among students who want to pursue higher education, as indicated by the higher category?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    higher_education_students = dataset[dataset[""higher""] == ""yes""]
    most_frequent_mjob = higher_education_students[""Mjob""].mode().iloc[0]
    
    return most_frequent_mjob",string,other,other
What is the gender of the student with the highest final grade (G3)?,What is the sex of the student who achieved the highest grade in the final term G3?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_grade_student = dataset.loc[dataset[""G3""] == dataset[""G3""].max()]
    sex_of_max_grade_student = max_grade_student[""sex""].iloc[0]

    return sex_of_max_grade_student",category,M,M
What is the school of the student with the highest number of absences?,What is the school category of the student who has the maximum number of absences?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_absences_student = dataset.loc[dataset[""absences""] == dataset[""absences""].max()]
    school_category = max_absences_student[""school""].iloc[0]

    return school_category",category,GP,GP
What is the family size of the student with the highest final grade (G3)?,What is the family size category of the student who achieved the highest final grade in G3?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_grade_student = dataset.loc[dataset[""G3""] == dataset[""G3""].max()]
    family_size_category = max_grade_student[""famsize""].iloc[0]

    return family_size_category",category,GT3,GT3
What are the top 3 reasons for choosing a school among students who want to take higher education?,"What are the three most common reasons for choosing a school among students who want to pursue higher education, as indicated by the reason column where higher is yes?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    higher_education_students = dataset[dataset[""higher""] == ""yes""]
    reasons = higher_education_students[""reason""].value_counts().head(3).index.tolist()
    
    return reasons",list of (string),"['course', 'home', 'reputation']","['course', 'home', 'reputation']"
What are the 5 most common mother's jobs among students with a final grade above 10?,"What are the top 5 most frequent mother's jobs among students where the final grade, which is G3, is greater than 10?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_dataset = dataset[dataset[""G3""] > 10]
    top_5_mjobs = filtered_dataset[""Mjob""].value_counts().head(5).index.tolist()
    
    return top_5_mjobs",list of (string),"['other', 'services', 'teacher', 'health', 'at_home']","['other', 'services', 'teacher', 'health', 'at_home']"
What are the top 4 schools among students with absences above 10?,What are the names of the top 4 schools where the students have more than 10 absences?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_schools = dataset[dataset[""absences""] > 10].groupby(""school"").size().reset_index(name=""count"").sort_values(by=""count"", ascending=False).head(4)
    school_names = top_schools[""school""].tolist()
    
    return school_names",list of (string),"['GP', 'MS']","['GP', 'MS']"
What are the top 2 family relations among students with a final grade below 10?,"What are the two most common family relations among students who have a final grade, represented by G3, of less than 10?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    students_with_low_G3 = dataset[dataset[""G3""] < 10]
    famrel_counts = students_with_low_G3[""famrel""].value_counts()
    most_common_famrels = famrel_counts.nlargest(2).index.tolist()
    
    return most_common_famrels",list of (string),"[4, 5]","[4, 5]"
What are the top 5 ages of students who want to take higher education?,What are the top 5 age values of students where the higher education attribute is set to yes?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_ages = dataset[dataset[""higher""] == ""yes""].sort_values(by=""age"", ascending=False)[""age""].head(5).tolist()
    return top_5_ages",list of (int64),"[21, 20, 20, 20, 19]","[16, 17, 15, 18, 19]"
What are the 3 lowest final grades of students who have more than 10 absences?,What are the three lowest final grades in the G3 column for students with absences greater than 10?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    students_with_absences_greater_than_10 = dataset[dataset[""absences""] > 10]
    lowest_final_grades = students_with_absences_greater_than_10[""G3""].nsmallest(3).tolist()
    
    return lowest_final_grades",list of (int64),"[4, 5, 5]","[4, 14, 17]"
What are the top 4 ages of students whose mother's education level is above 3?,"What are the four highest ages of students where the mother's education level, represented by Medu, is greater than 3?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_dataset = dataset[dataset[""Medu""] > 3]
    top_4_ages = filtered_dataset[""age""].sort_values(ascending=False).head(4).tolist()
    
    return top_4_ages",list of (uint8),"[20, 19, 19, 19]","[15, 16, 18, 17]"
What are the 6 lowest final grades of students who don't want to take higher education?,What are the six lowest final grades of students where the higher education attribute is set to no!,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    lowest_grades = dataset[dataset[""higher""] == ""no""].sort_values(by=""G3"")[""G3""].head(6).tolist()
    return lowest_grades",list of (int64),"[0, 0, 0, 0, 0, 0]","[8, 10, 12, 9, 7, 13]"
Is it true that the oldest company (based on approval year) is from an urban (UrbanRural=1) area?,Does the company with the earliest approval year have an UrbanRural attribute equal to 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
earliest_approval_year_individual = dataset.loc[dataset[""ApprovalFY""] == dataset[""ApprovalFY""].min()]
is_urban_rural_equal_to_1 = earliest_approval_year_individual[""UrbanRural""].eq(1).any()

return is_urban_rural_equal_to_1",bool,False,False
Are all companies with more than 10 employees located in an urban (UrbanRural=1) area?,Is it true that all companies with more than 10 employees have an UrbanRural value of 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    companies_with_more_than_10_employees = dataset[dataset[""NoEmp""] > 10]
    urban_rural_values = companies_with_more_than_10_employees[""UrbanRural""].unique()
    is_all_urban_rural_1 = len(urban_rural_values) == 1 and urban_rural_values[0] == 1

    return is_all_urban_rural_1",bool,False,False
"Are all companies with a default amount greater than $250,000 in the food sector?",Do all companies with a default amount greater than 250000 fall under the food sector in terms of their sector classification?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    companies_with_high_default = dataset[dataset[""default_amount""] > 250000]
    sectors = companies_with_high_default[""Sector""].unique()
    return len(sectors) == 1 and sectors[0] == ""Food""",bool,False,False
Is the average number of retained jobs higher for companies located in urban (UrbanRural=1) areas than those in rural (UrbanRural=0) areas?,Is the mean of RetainedJob for companies in urban areas greater than the mean of RetainedJob for companies in rural areas?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
urban_retained_job_mean = dataset[dataset[""UrbanRural""] == 1][""RetainedJob""].mean()
rural_retained_job_mean = dataset[dataset[""UrbanRural""] == 0][""RetainedJob""].mean()

return urban_retained_job_mean > rural_retained_job_mean",bool,True,True
How many companies have a franchise code of 1?,What is the count of companies where the FranchiseCode is equal to 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    count = dataset[dataset[""FranchiseCode""] == 1].shape[0]
    return count",int64,57340,57340
What is the average disbursement gross for companies in the retail sector?,What is the mean value of DisbursementGross for companies where the Sector is retail?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    retail_companies = dataset[dataset[""Sector""] == ""retail""]
    mean_disbursement_gross = retail_companies[""DisbursementGross""].mean()

    return mean_disbursement_gross",float64,,164636.4123070000
What is the highest approval year in the dataset?,What is the maximum value of ApprovalFY in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_approval_fy = dataset[""ApprovalFY""].max()
return max_approval_fy",uint16,2010,2010
How many unique sectors are there in the dataset?,What is the number of distinct categories in the Sector column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_sector_categories = dataset[""Sector""].nunique()
    return distinct_sector_categories",int64,20,20
What is the most common sector among companies with a franchise code of 1?,Which sector appears most frequently in the dataset where the franchise code is equal to 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_dataset = dataset[dataset[""FranchiseCode""] == 1]
    most_frequent_sector = filtered_dataset[""Sector""].mode().iloc[0]

    return most_frequent_sector",category,Retail trade,Retail trade
What is the state of the company with the highest disbursement gross?,What is the state category of the company that has the maximum disbursement gross amount?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_disbursement_gross_individual = dataset.loc[dataset[""DisbursementGross""] == dataset[""DisbursementGross""].max()]
    state_category = max_disbursement_gross_individual[""BankState""].iloc[0]

    return state_category",category,ME,ME
What is the bank for the company with the highest default amount?,Which bank is associated with the company that has the maximum default amount?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_default_amount_individual = dataset.loc[dataset[""default_amount""] == dataset[""default_amount""].max()]
associated_bank = max_default_amount_individual[""Bank""].iloc[0]

return associated_bank",category,COMMUNITY BANK & TRUST,COMMUNITY BANK & TRUST
What is the sector of the company with the most number of employees?,What sector corresponds to the company with the maximum number of employees as indicated by the NoEmp column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_employees_company = dataset.loc[dataset[""NoEmp""] == dataset[""NoEmp""].max()]
    sector = max_employees_company[""Sector""].iloc[0]

    return sector",category,Health care and social assistance,Health care and social assistance
What are the top 3 sectors among companies with a franchise code of 1?,What are the three most common sectors for companies where the franchise code is 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    franchise_code_1 = dataset[dataset[""FranchiseCode""] == 1]
    sector_counts = franchise_code_1[""Sector""].value_counts()
    top_3_sectors = sector_counts.nlargest(3).index.tolist()
    
    return top_3_sectors",list of (string),"['Retail trade', 'Other services (except public administration)', 'Manufacturing']","['Retail trade', 'Other services (except public administration)', 'Manufacturing']"
What are the 5 most common banks among companies with an approval year earlier than 2000?,What are the top 5 banks by frequency for companies that have an approval year before the year 2000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    pre_2000_companies = dataset[dataset[""ApprovalFY""] < 2000]
    top_5_banks = pre_2000_companies[""Bank""].value_counts().head(5).index.tolist()
    
    return top_5_banks",list of (string),"['WELLS FARGO BANK NATL ASSOC', 'BANK OF AMERICA NATL ASSOC', 'U.S. BANK NATIONAL ASSOCIATION', 'JPMORGAN CHASE BANK NATL ASSOC', 'PNC BANK, NATIONAL ASSOCIATION']","['WELLS FARGO BANK NATL ASSOC', 'BANK OF AMERICA NATL ASSOC', 'U.S. BANK NATIONAL ASSOCIATION', 'JPMORGAN CHASE BANK NATL ASSOC', 'PNC BANK, NATIONAL ASSOCIATION']"
"What are the top 4 states among companies with a disbursement gross greater than $1,000,000?","Which four states have the highest number of companies where the disbursement gross amount exceeds $1,000,000?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_dataset = dataset[dataset[""DisbursementGross""] > 1000000]
    state_counts = filtered_dataset[""State""].value_counts()
    top_four_states = state_counts.nlargest(4).index.tolist()
    
    return top_four_states",list of (string),"['CA', 'TX', 'FL', 'AZ']","['CA', 'TX', 'FL', 'AZ']"
"What are the top 2 sectors among companies with a default amount greater than $500,000?",Which two sectors have the highest frequency among the companies where the default amount is greater than 500000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    high_default_companies = dataset[dataset[""default_amount""] > 500000]
    sector_counts = high_default_companies[""Sector""].value_counts()
    top_two_sectors = sector_counts.nlargest(2).index.tolist()
    
    return top_two_sectors",list of (string),"['Retail trade', 'Accommodation and food services']","['Retail trade', 'Accommodation and food services']"
What are the top 5 approval years for companies in the retail sector?,What are the top 5 ApprovalFY years for companies where the Sector is retail?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    retail_sector = dataset[dataset[""Sector""] == ""retail""]
    top_5_approval_years = retail_sector[""ApprovalFY""].value_counts().head(5).index.tolist()
    
    return top_5_approval_years",list of (int64),[],"[2005, 2004, 2006, 2007, 2003]"
What are the 3 highest disbursement gross for companies with a franchise code of 1?,What are the top 3 disbursement gross values for the companies where the franchise code is 1?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    franchise_code_1 = dataset[dataset[""FranchiseCode""] == 1]
    top_3_disbursement_gross = franchise_code_1[""DisbursementGross""].nlargest(3).tolist()
    
    return top_3_disbursement_gross",list of (uint32),"[5294366, 4656672, 4000048]","[50000.0, 100000.0, 10000.0]"
What are the top 4 approval years for companies in the state of CA?,What are the four most frequent ApprovalFY years for companies located in the state of CA?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    ca_companies = dataset[dataset[""BankState""] == ""CA""]
    approval_years = ca_companies[""ApprovalFY""].value_counts().head(4).index.tolist()
    
    return approval_years",list of (int64),"[2004, 2005, 2007, 2003]","[2007, 2004, 2006, 2003]"
What are the 6 highest default amounts among companies in the state of NY?,What are the top 6 default amounts for companies located in the state of New York?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    ny_companies = dataset[dataset[""BankState""] == ""New York""]
    top_6_default_amounts = ny_companies[""default_amount""].nlargest(6).tolist()
    
    return top_6_default_amounts",list of (uint32),[],"[0.0, 50000.0, 25000.0, 100000.0, 35000.0, 10000.0]"
Is it true that the oldest movie (based on year) in the drama genre is from the USA?,Does the drama movie with the earliest year of release have the country of origin as the USA?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    drama_movies = dataset[dataset[""genre""] == ""Drama""]
    earliest_release_movie = drama_movies.loc[drama_movies[""year""] == drama_movies[""year""].min()]
    country_of_origin = earliest_release_movie[""country""].iloc[0]
    
    return country_of_origin == ""USA""",bool,False,False
"Are all movies from the USA, with more than 80 minutes duration in the drama genre, in English?","Are all the movies with a duration greater than 80 minutes, belonging to the drama genre and originating from the USA, in the English language?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_movies = dataset[(dataset[""duration""] > 80) & (dataset[""genre""] == ""drama"") & (dataset[""country""] == ""USA"")]
    is_english_language = (filtered_movies[""language""] == ""English"").all()

    return is_english_language",bool,True,False
Are all movies with votes greater than 90 from the USA in English?,Do all movies with votes greater than 90 and country as USA have the language as English?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    usa_movies_with_high_votes = dataset[(dataset[""votes""] > 90) & (dataset[""country""] == ""USA"")]
    languages = usa_movies_with_high_votes[""language""].unique()
    
    return len(languages) == 1 and languages[0] == ""English""",bool,False,True
Is the average duration of English language movies from the USA longer than those from non-USA countries?,Is the mean duration of movies where the language is English and the country is the USA greater than the mean duration of movies where the language is English and the country is not the USA?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    english_usa_movies = dataset[(dataset[""language""] == ""English"") & (dataset[""country""] == ""USA"")]
    english_non_usa_movies = dataset[(dataset[""language""] == ""English"") & (dataset[""country""] != ""USA"")]
    
    mean_duration_usa = english_usa_movies[""duration""].mean()
    mean_duration_non_usa = english_non_usa_movies[""duration""].mean()
    
    return mean_duration_usa > mean_duration_non_usa",bool,False,False
"How many movies from the USA, in the drama genre, have a metascore of 100?",What is the count of movies from the USA with the drama genre and a metascore of 100?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    usa_drama_movies = dataset[(dataset[""country""] == ""USA"") & (dataset[""genre""] == ""Drama"") & (dataset[""metascore""] == 100.0)]
    count = len(usa_drama_movies)

    return count",int64,1,6
"What is the average duration for movies in the drama genre, from the USA, in English?","What is the mean duration of movies from the USA, in English, and classified under the drama genre?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    usa_english_drama_movies = dataset[(dataset[""country""] == ""USA"") & (dataset[""language""] == ""English"") & (dataset[""genre""] == ""Drama"")]
    mean_duration = usa_english_drama_movies[""duration""].mean()

    return mean_duration",float64,94.53737900000000,96.07927000000000
What is the latest year for English language movies from the USA in the dataset?,What is the maximum year of release for movies where the language is English and the country of origin is the USA?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    english_usa_movies = dataset[(dataset[""language""] == ""English"") & (dataset[""country""] == ""USA"")]
    max_year = english_usa_movies[""year""].max()
    
    return max_year",float64,2020.0,2020.0
How many unique languages are there in the dataset for movies from the USA?,What is the number of distinct languages in movies where the country of origin is the USA?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    usa_movies = dataset[dataset[""country""] == ""USA""]
    distinct_languages = usa_movies[""language""].nunique()
    
    return distinct_languages",int64,650,650
What is the most common genre among English language movies from the USA with a metascore of 100?,What is the most frequent genre among movies from the USA with English language and a metascore of 100?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_dataset = dataset[(dataset[""country""] == ""USA"") & (dataset[""language""] == ""English"") & (dataset[""metascore""] == 100)]
    if filtered_dataset.empty:
        return None
    most_frequent_genre = filtered_dataset[""genre""].mode().iloc[0]
    return most_frequent_genre",string,"Adventure, Family, Fantasy","Adventure, Family, Fantasy"
What is the country of the English language movie with the longest duration?,What is the country of origin for the English language film with the maximum duration?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    english_language_films = dataset[dataset[""language""] == ""English""]
    max_duration_film = english_language_films.loc[english_language_films[""duration""].idxmax()]
    country_of_origin = max_duration_film[""country""]

    return country_of_origin",category,UK,Argentina
What is the language of the movie from the USA with the highest metascore?,What language is spoken in the movie with the highest metascore from the USA?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    usa_movies = dataset[dataset[""country""] == ""USA""]
    max_metascore_movie = usa_movies.loc[usa_movies[""metascore""] == usa_movies[""metascore""].max()]
    language = max_metascore_movie[""language""].iloc[0]

    return language",category,English,English
What is the genre of the English language movie from the USA with the most votes?,What is the genre of the movie with the highest number of votes that is in the English language and from the USA?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    english_movies_from_usa = dataset[(dataset[""language""] == ""English"") & (dataset[""country""] == ""USA"")]
    max_votes_movie = english_movies_from_usa.loc[english_movies_from_usa[""votes""] == english_movies_from_usa[""votes""].max()]
    genre = max_votes_movie[""genre""].iloc[0]

    return genre",category,Drama,Drama
What are the top 3 genres among English language movies from the USA with a metascore of 100?,"What are the three most common genres of movies that have a metascore of 100, are in the English language, and are from the USA?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    filtered_dataset = dataset[(dataset[""metascore""] == 100) & (dataset[""language""] == ""English"") & (dataset[""country""] == ""USA"")]
    genre_counts = filtered_dataset[""genre""].value_counts().head(3)
    most_common_genres = genre_counts.index.tolist()

    return most_common_genres",list of (string),"['Mystery, Thriller', 'Mystery, Romance, Thriller', 'Drama, Film-Noir']","['Adventure, Family, Fantasy', 'Drama, Mystery', 'Drama, Romance, War']"
What are the 5 most common countries among English language movies with a year earlier than 2000?,List the top 5 countries that appear most frequently in the dataset for movies where the language is English and the year of release is before 2000?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    english_movies_before_2000 = dataset[(dataset[""language""] == ""English"") & (dataset[""year""] < 2000)]
    country_counts = english_movies_before_2000[""country""].value_counts()
    top_5_countries = country_counts.nlargest(5).index.tolist()
    
    return top_5_countries",list of (string),"['USA', 'UK', 'Canada', 'UK, USA', 'Australia']","['USA', 'UK', 'Canada', 'UK, USA', 'Australia']"
What are the top 4 languages among movies from the USA with a duration greater than 180 minutes?,What are the four most frequent languages of movies from the USA that have a duration of more than 180 minutes?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    usa_movies = dataset[dataset[""country""] == ""USA""]
    long_movies = usa_movies[usa_movies[""duration""] > 180]
    language_counts = long_movies[""language""].value_counts()
    most_frequent_languages = language_counts.nlargest(4).index.tolist()
    
    return most_frequent_languages",list of (string),"['English', 'English, Spanish', 'English, French', 'English, Mandarin']","['English', 'English, Spanish', 'English, Russian', 'English, Hungarian']"
What are the top 2 genres among English language movies from the USA with a metascore greater than 90?,Which two genres are most common among movies from the USA with English language and a metascore greater than 90?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    usa_movies = dataset[(dataset[""country""] == ""USA"") & (dataset[""language""] == ""English"") & (dataset[""metascore""] > 90)]
    genre_counts = usa_movies[""genre""].value_counts()
    most_common_genres = genre_counts.nlargest(2).index.tolist()
    
    return most_common_genres",list of (string),"['Drama', 'Comedy, Drama']","['Drama', 'Crime, Drama']"
What are the top 5 years for English language movies from the USA in the drama genre?,List the top 5 years in which drama movies from the USA with English language were released?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    drama_movies = dataset[(dataset[""genre""] == ""Drama"") & (dataset[""country""] == ""USA"") & (dataset[""language""] == ""English"")]
    top_5_years = drama_movies[""year""].value_counts().head(5).index.tolist()
    top_5_years = [int(year) for year in top_5_years]
    return top_5_years",list of (int64),"[2018, 2013, 2017, 2012, 2010]","[2017.0, 2016.0, 2015.0, 2013.0, 2018.0]"
What are the 3 longest durations for English language movies from the USA with a metascore of 100?,What are the top 3 longest durations of English language movies from the USA that have a perfect metascore of 100?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    english_movies_from_usa = dataset[(dataset[""language""] == ""English"") & (dataset[""country""] == ""USA"") & (dataset[""metascore""] == 100.0)]
    top_3_longest_durations = english_movies_from_usa.nlargest(3, ""duration"")[""duration""].tolist()
    
    return top_3_longest_durations",list of (int64),"[128, 112, 102]","[102, 119, 112]"
What are the four years with more English language movies from the USA?,What are the four years with the highest number of movies where the language is English and the country is the USA?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    english_usa_movies = dataset[(dataset[""language""] == ""English"") & (dataset[""country""] == ""USA"")]
    year_counts = english_usa_movies[""year""].value_counts()
    top_four_years = year_counts.nlargest(4).index.tolist()
    top_four_years = [int(year) for year in top_four_years]
    
    return top_four_years",list of (int64),"[2017, 2016, 2018, 2015]","[2017.0, 2016.0, 2018.0, 2013.0]"
Can you show the 6 highest metascores among English language movies from the USA?,What are the top 6 metascores of movies where the language is English and the country is the USA?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    english_usa_movies = dataset[(dataset[""language""] == ""English"") & (dataset[""country""] == ""USA"")]
    top_6_metascores = english_usa_movies[""metascore""].sort_values(ascending=False).head(6).tolist()
    
    return top_6_metascores",list of (float64),"[100.0, 100.0, 100.0, 100.0, 99.0, 99.0]","[49.0, 55.0, 57.0, 48.0, 54.0, 52.0]"
Is it true that the song with the lowest popularity in the dataset is longer than 300000 ms?,Is the duration in milliseconds of the song with the minimum popularity greater than 300000 milliseconds?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    min_popularity_song = dataset.loc[dataset[""popularity""] == dataset[""popularity""].min()]
    min_popularity_duration = min_popularity_song[""duration_ms""].values[0]
    return min_popularity_duration > 300000",bool,False,True
Did any song released in the year 2020 in the dataset achieve the maximum popularity?,Is there at least one song in the dataset with a release year of 2020 that has the highest popularity value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_popularity = dataset[""popularity""].max()
    songs_in_2020 = dataset[dataset[""release_year""] == 2020]
    has_max_popularity_in_2020 = (songs_in_2020[""popularity""] == max_popularity).any()

    return has_max_popularity_in_2020",bool,True,False
Does the song with the longest duration also have the highest energy?,Is the song with the maximum duration_ms also the song with the maximum energy?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_duration_ms_song = dataset.loc[dataset[""duration_ms""] == dataset[""duration_ms""].max()]
    max_energy_song = dataset.loc[dataset[""energy""] == dataset[""energy""].max()]
    
    return max_duration_ms_song.index.tolist() == max_energy_song.index.tolist()",bool,False,False
Does the song with the highest energy also have the highest popularity?,Is the song with the maximum energy value also the song with the maximum popularity value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_energy_song = dataset.loc[dataset[""energy""] == dataset[""energy""].max()]
    max_popularity_song = dataset.loc[dataset[""popularity""] == dataset[""popularity""].max()]
    
    return max_energy_song.index[0] == max_popularity_song.index[0]",bool,False,False
How many unique artists are there in the dataset?,,,,ERROR,13056
What's the average song duration in the dataset?,What is the mean duration in milliseconds of all songs in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_duration = dataset[""duration_ms""].mean()
    return mean_duration",float64,228986.69315400000,228998.0798100000
What's the maximum popularity score in the dataset?,What is the highest value in the popularity column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_popularity = dataset[""popularity""].max()
    return max_popularity",uint8,94,94
How many songs were released in the year with the most releases?,What is the total number of songs released in the year that has the highest number of song releases?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    release_year_counts = dataset[""release_year""].value_counts()
    year_with_most_releases = release_year_counts.idxmax()
    total_songs_in_year = len(dataset[dataset[""release_year""] == year_with_most_releases])

    return total_songs_in_year",int64,489,489
Who is the artist with the highest popularity score?,What is the name of the artist with the maximum popularity score?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_popularity_artist = dataset.loc[dataset[""popularity""] == dataset[""popularity""].max()]
    artist_name = max_popularity_artist[""name""].iloc[0]

    return artist_name",string,Heartbreak Anniversary,['Giveon']
In which month was the most popular song released?,What is the release month of the song with the highest popularity?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_popular_song = dataset.loc[dataset[""popularity""] == dataset[""popularity""].max()]
    release_month = most_popular_song[""release_month""].astype(str).iloc[0]

    return release_month",string,3.0,3.0
What's the name of the longest song?,What is the name of the song with the maximum duration in milliseconds?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_duration_song = dataset.loc[dataset[""duration_ms""] == dataset[""duration_ms""].max()]
    song_name = max_duration_song[""name""].iloc[0]

    return song_name",string,Monster Tunes Yearmix 2011 - Mixed by Mark Eteson,Monster Tunes Yearmix 2011 - Mixed by Mark Eteson
What's the name of the song with the most energy?,What is the name of the song with the highest energy value?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_energy_song = dataset.loc[dataset[""energy""] == dataset[""energy""].max()]
    song_name = max_energy_song[""name""].iloc[0]

    return song_name",string,Marathon (Mix Cut) - Simon O'Shine Mix,Marathon (Mix Cut) - Simon O'Shine Mix
What are the the 2 shortest songs in the dataset?,What are the names of the two songs with the shortest duration in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    shortest_songs = dataset.nsmallest(2, 'duration_ms')
    song_names = shortest_songs['name'].tolist()
    
    return song_names",list of (string),"['Rhapsody on a Theme of Paganini, Op. 43: Introduction - Allegro vivace', 'Intro']","['Rhapsody on a Theme of Paganini, Op. 43: Introduction - Allegro vivace', 'Intro']"
What are the names of the top 3 most popular songs?,What are the names of the top 3 songs with the highest popularity?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_songs = dataset.nlargest(3, 'popularity')
    names = top_3_songs['name'].tolist()
    return names",list of (string),"['Heartbreak Anniversary', 'Good Days', 'Paradise (feat. Dermot Kennedy)']","[Heartbreak Anniversary, Good Days, Paradise (feat. Dermot Kennedy)]"
What are the top 3 artists who released songs with the longest durations?,,,,ERROR,"['Mark Eteson', 'Various Artists', 'Serge Reggiani']"
What are the names of the top 2 songs with the most energy?,What are the names of the top 2 tracks with the highest energy values?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_2_tracks = dataset.nlargest(2, 'energy')
    names = top_2_tracks['name'].tolist()
    return names",list of (string),"[""Marathon (Mix Cut) - Simon O'Shine Mix"", 'Applause; Martha Tilton Returns to Stage - Live']","[Marathon (Mix Cut) - Simon O'Shine Mix, Applause; Martha Tilton Returns to Stage - Live]"
What are the top 5 most popular scores?,What are the top 5 highest popularity scores in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_popularity = dataset.nlargest(5, 'popularity')['popularity'].tolist()
    return top_5_popularity",list of (uint8),"[94, 93, 92, 88, 87]","[0, 35, 23, 1, 26]"
What are the 3 longest song durations?,What are the top 3 longest song durations in milliseconds from the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_longest_songs = dataset.nlargest(3, 'duration_ms')['duration_ms'].tolist()
    return top_3_longest_songs",list of (float64),"[4792587.0, 4658245.0, 4585640.0]","[4792587.0, 4658245.0, 4585640.0]"
What are the 4 latest release years in the dataset?,"What are the four most recent release years in the dataset, ordered in descending order by release year?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    recent_years = dataset['release_year'].sort_values(ascending=False).unique()[:4].tolist()
    return recent_years",list of (int64),"[2021, 2020, 2019, 2018]","[2021, 2021, 2021, 2021]"
What are the top 3 energy scores in the dataset?,"What are the three highest energy scores in the dataset, ordered in descending order?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    energy_scores = dataset['energy'].sort_values(ascending=False).head(3).tolist()
    return energy_scores",list of (float64),"[1.0, 1.0, 1.0]","[1.0, 1.0, 1.0]"
Is it true that the athlete with the lowest ID is older than 30 years?,Is the age of the athlete with the minimum ID greater than 30?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
min_id_individual = dataset.loc[dataset[""ID""] == dataset[""ID""].min()]
age = min_id_individual[""Age""].values[0]
return age > 30",bool,False,True
Did any athlete from the team with the most participants win two gold medals?,Was there at least one athlete from the team with the highest number of participants who won exactly two gold medals?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    team_counts = dataset['Team'].value_counts()
    max_team = team_counts.idxmax()
    team_athletes = dataset[dataset['Team'] == max_team]
    gold_medal_counts = team_athletes[team_athletes['Medal'] == 'Gold'].groupby('ID')['Medal'].count()
    two_gold_medals = gold_medal_counts[gold_medal_counts == 2].any()

    return two_gold_medals",bool,True,False
Does the athlete with the highest weight also participate in the sport with the most athletes?,Is the sport with the most participants also the sport of the athlete with the maximum weight?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_participants_sport = dataset['Sport'].value_counts().idxmax()
    max_weight_athlete_sport = dataset.loc[dataset['Weight'].idxmax()]['Sport']
    
    return most_participants_sport == max_weight_athlete_sport",bool,False,False
Does the athlete with the highest height also have a medal?,Does the athlete with the maximum height have a non-null or non-empty medal attribute?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_height_athlete = dataset.loc[dataset[""Height""] == dataset[""Height""].max()]
    has_medal = not max_height_athlete[""Medal""].isnull().any() and max_height_athlete[""Medal""].notna().any() and max_height_athlete[""Medal""].str.len().gt(0).any()

    return has_medal",bool,False,False
How many unique teams are there in the dataset?,What is the number of distinct teams in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_teams = dataset[""Team""].nunique()
    return distinct_teams",int64,1184,230
What's the average age of athletes in the dataset?,What is the mean value of the Age column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_age = dataset[""Age""].mean()
    return mean_age",float64,25.556898000000000,25.556898000000000
What's the maximum weight of athletes in the dataset?,What is the highest weight value in the Weight column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_weight = dataset[""Weight""].max()
    return max_weight",float64,214.0,214.0
How many athletes participated in the year with the most participants?,What is the total number of athletes in the year that has the highest number of participants?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    year_counts = dataset[""Year""].value_counts()
    max_year = year_counts.idxmax()
    total_athletes = len(dataset[dataset[""Year""] == max_year])

    return total_athletes",int64,16413,2536
Who is the athlete with the highest weight?,What is the name of the athlete with the maximum weight?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_weight_athlete = dataset.loc[dataset[""Weight""].idxmax()]
    name_of_athlete = max_weight_athlete[""Name""]

    return name_of_athlete",string,"Ricardo Blas, Jr.",Ricardo Blas Jr.
In which city did the athlete with the highest height participate?,What is the city where the athlete with the maximum height participated?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_height_athlete = dataset.loc[dataset[""Height""] == dataset[""Height""].max()]
    city = max_height_athlete[""City""].iloc[0]

    return city",category,Sydney,London
What's the name of the athlete who participated in the most number of games?,,,,ERROR,Robert Tait McKenzie
What's the sport of the athlete with the most medals?,What sport is associated with the athlete who has won the most medals?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_medals_athlete = dataset.loc[dataset['Medal'].notnull()]
    most_medals_athlete = most_medals_athlete.groupby('Name')['Medal'].count().reset_index()
    most_medals_athlete = most_medals_athlete.loc[most_medals_athlete['Medal'] == most_medals_athlete['Medal'].max()]
    most_medals_athlete_name = most_medals_athlete['Name'].iloc[0]
    sport = dataset.loc[dataset['Name'] == most_medals_athlete_name, 'Sport'].iloc[0]

    return sport",category,Swimming,Art Competitions
What are the top 5 most common team names in the dataset?,What are the five team names that appear most frequently in the Team column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    team_counts = dataset[""Team""].value_counts()
    top_five_teams = team_counts.nlargest(5).index.tolist()
    
    return top_five_teams",list of (string),"['United States', 'France', 'Great Britain', 'Italy', 'Germany']","[United States, France, Great Britain, Italy, Germany]"
What are the names of the top 3 athletes with the highest weights?,What are the names of the top three athletes with the highest weight values in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_three_athletes = dataset.nlargest(3, 'Weight')
    names = top_three_athletes['Name'].tolist()
    return names",list of (string),"['Ricardo Blas, Jr.', 'Ricardo Blas, Jr.', 'Aytami Ruano Vega']","[Ricardo Blas Jr., Shinichi Shinohara, Emmanuel Yarborough]"
What are the 4 most common cities of participation?,What are the top 4 cities with the highest frequency of occurrence in the City column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    city_counts = dataset[""City""].value_counts()
    top_4_cities = city_counts.nlargest(4).index.tolist()
    
    return top_4_cities",list of (string),"['London', 'Athina', 'Sydney', 'Atlanta']","[London, Athina, Sydney, Atlanta]"
What are the names of the top 2 athletes who participated in the most number of games?,What are the names of the top 2 athletes who have participated in the most number of different games?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    games_count = dataset.groupby(""Name"")[""Games""].nunique().reset_index()
    games_count = games_count.sort_values(by=""Games"", ascending=False).head(2)
    top_athletes = games_count[""Name""].tolist()
    
    return top_athletes",list of (string),"['Ian Millar', 'Hubert Raudaschl']","[Robert Tait McKenzie, Heikki Ilmari Savolainen]"
What are the top five most common ages of athletes?,What are the five most frequently occurring values in the Age column of the athletes dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
age_counts = dataset[""Age""].value_counts()
top_5_ages = age_counts.nlargest(5).index.tolist()
return top_5_ages",list of (float64),"[23.0, 24.0, 22.0, 25.0, 21.0]","[23.0, 24.0, 22.0, 25.0, 21.0]"
What are the three highest weights of athletes?,What are the top three highest values in the Weight column of the athletes dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_three_weights = dataset['Weight'].nlargest(3).tolist()
    return top_three_weights",list of (float64),"[214.0, 214.0, 198.0]","[214.0, 198.0, 190.0]"
What are the 4 most common years of participation?,What are the top 4 years with the highest frequency of occurrence in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    year_counts = dataset[""Year""].value_counts()
    top_4_years = year_counts.nlargest(4).index.tolist()
    
    return top_4_years",list of (uint16),"[1992, 1988, 2000, 1996]","[1992, 1988, 2000, 1996]"
What are the three most common heights of athletes?,What are the top three most frequent Height values of the athletes in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    height_counts = dataset['Height'].value_counts()
    top_three_heights = height_counts.nlargest(3).index.tolist()
    
    return top_three_heights",list of (float64),"[180.0, 170.0, 178.0]","[180.0, 170.0, 178.0]"
Does the dataset contain customers who are under the age of 18?,Are there any customers in the dataset with a customer_age less than 18?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_minor_customer = (dataset[""customer_age""] < 18).any()
    return has_minor_customer",bool,False,False
Are there any customers with a total transaction amount of zero?,Does the dataset contain any customers where the total transaction amount is equal to zero?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_zero_transaction = (dataset[""total_trans_amt""] == 0).any()
    return has_zero_transaction",bool,False,False
"Does the dataset include customers with a credit limit exceeding $50,000?","Are there any customers in the dataset with a credit limit greater than $50,000?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_high_credit_limit = (dataset[""credit_limit""] > 50000).any()
    return has_high_credit_limit",bool,False,False
Are there any customers in the dataset who are inactive for more than 12 months?,Does the dataset contain any customers with months_inactive_12_mon greater than 12?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    customers_with_months_inactive_greater_than_12 = dataset[dataset[""months_inactive_12_mon""] > 12]
    return not customers_with_months_inactive_greater_than_12.empty",bool,False,False
What is the highest credit limit in the dataset?,What is the maximum value of credit limit in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
max_credit_limit = dataset[""credit_limit""].max()
return max_credit_limit",float64,34516.0,34516.0
What is the maximum total transaction amount recorded?,What is the highest value of total transaction amount recorded in the total_trans_amt column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_total_trans_amt = dataset[""total_trans_amt""].max()
    return max_total_trans_amt",uint16,18484,18484
What is the largest total revolving balance in the dataset?,What is the maximum value of total_revolving_bal in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_total_revolving_bal = dataset[""total_revolving_bal""].max()
    return max_total_revolving_bal",uint16,2517,2517
What is the highest customer age in the dataset?,What is the maximum value in the customer_age column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_customer_age = dataset[""customer_age""].max()
    return max_customer_age",uint8,73,73
What is the most common level of education among the customers?,What is the most frequently occurring education level among all the customers in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_education_level = dataset[""education_level""].mode().iloc[0]
    return most_frequent_education_level",string,Graduate,Graduate
What is the most common income category of the customers?,Which income category appears most frequently in the income_category column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_frequent_income_category = dataset['income_category'].mode().iloc[0]
    return most_frequent_income_category",string,Less than $40K,Less than $40K
Which gender is most represented among the customers?,What is the most common gender among all the customers in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    most_common_gender = dataset[""gender""].mode().iloc[0]
    return most_common_gender",string,F,F
What is the most common attrition flag value?,What is the mode of the attrition_flag column in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mode_attrition_flag = dataset[""attrition_flag""].mode().values[0]
    return str(mode_attrition_flag)",category,0,0
What are the top 3 most common education levels among the customers?,What are the three most frequently occurring education levels in the education_level column of the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
education_levels = dataset[""education_level""].value_counts().head(3).index.tolist()
return education_levels",list of (string),"['Graduate', 'High School', 'Unknown']","['Graduate', 'High School', 'Unknown']"
Which are 4 most frequent income categories?,What are the top 4 most frequent categories in the income_category column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_4_income_categories = dataset['income_category'].value_counts().head(4).index.tolist()
    return top_4_income_categories",list of (string),"['Less than $40K', '$40K - $60K', '$80K - $120K', '$60K - $80K']","['Less than $40K', '$40K - $60K', '$80K - $120K', '$60K - $80K']"
Which are the top 3 most frequent income categories?,What are the top three income categories with the highest frequency in the income_category column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_three_income_categories = dataset['income_category'].value_counts().head(3).index.tolist()
    return top_three_income_categories",list of (string),"['Less than $40K', '$40K - $60K', '$80K - $120K']","['Less than $40K', '$40K - $60K', '$80K - $120K']"
Which are the two most frequent income categories?,What are the top two most frequent categories in the income_category column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_two_income_categories = dataset['income_category'].value_counts().head(2).index.tolist()
    return top_two_income_categories",list of (string),"['Less than $40K', '$40K - $60K']","['Less than $40K', '$40K - $60K']"
How old are the 5 oldest customers in the dataset?,What are the ages of the top 5 oldest customers in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_5_oldest_customers = dataset.nlargest(5, 'customer_age')
    ages_of_top_5_oldest_customers = top_5_oldest_customers['customer_age'].tolist()
    
    return ages_of_top_5_oldest_customers",list of (float64),"[73, 70, 68, 67, 67]","[73, 70, 68, 67, 67]"
What are the five customer IDs with the highest credit limit?,What are the ids of the top five customers with the highest credit limit?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_five_customers = dataset.nlargest(5, 'credit_limit')
    ids = top_five_customers['id'].tolist()
    
    return ids",list of (uint16),"[6142, 8479, 1571, 6788, 2933]","[34516.0, 34516.0, 34516.0, 34516.0, 34516.0]"
Who are the 6 customers with the highest total transaction amount?,What are the ids of the top 6 customers with the highest total transaction amount based on the total_trans_amt column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
top_6_customers = dataset.nlargest(6, 'total_trans_amt')
ids = top_6_customers['id'].astype(str).tolist()
return ids",list of (string),"['9667', '6883', '5578', '4026', '5500', '1160']","[18484, 17744, 17634, 17498, 17437, 17350]"
Who are the six customer ids with the highest total revolving balance?,What are the six customer ids with the highest total revolving balance in descending order of total_revolving_bal?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sorted_dataset = dataset.sort_values(by='total_revolving_bal', ascending=False)
    top_six_ids = sorted_dataset['id'].head(6).tolist()
    
    return top_six_ids",list of (uint16),"[7932, 6567, 2233, 5532, 7493, 3354]","[2517, 2517, 2517, 2517, 2517, 2517]"
"Are there any job positions available in 'New York, NY'?","Does the location 'New York, NY' exist in the list of available job locations?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    location_exists = 'New York, NY' in dataset['Location'].values
    
    return location_exists",bool,True,True
Are there any job listings from companies founded before 1900?,Are there any job listings where the company was founded before the year 1900?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    founded_before_1900 = dataset[dataset[""Founded""] < 1900]
    return not founded_before_1900.empty",bool,True,True
Are there any job listings that require Python skills?,"Does any job listing have python skills required, indicated by a value of 1 in the python_yn column?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_python_skill = dataset[""python_yn""].any() == 1
    return bool(has_python_skill)",bool,True,True
Is there a job listing for a 'Data Engineer' role?,Does any job listing have 'Data Engineer' as its job title?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    has_data_engineer = ('Data Engineer' in dataset['Job Title'].values)

    return has_data_engineer",bool,True,True
How many unique job titles are listed?,What is the number of distinct job titles in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    distinct_job_titles = dataset[""Job Title""].nunique()
    return distinct_job_titles",int64,264,264
"On average, how old are the companies that have job listings?",What is the mean age of the companies that have job listings in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    mean_age = dataset[""age""].mean()
    return mean_age",float64,46.591644000000000,46.591644000000000
What's the highest rating a company has received?,What is the maximum rating received by any company in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_rating = dataset[""Rating""].max()
    return max_rating",float64,5.0,5.0
How many job listings are there from 'Government' type of ownership?,What is the total count of job listings where the type of ownership is 'Government'?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    government_ownership_count = len(dataset[dataset[""Type of ownership""] == ""Government""])
    return government_ownership_count",int64,15,15
Which job title has the highest average salary?,What job title has the highest average avg_salary value in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_salary_by_job_title = dataset.groupby(""Job Title"")[""avg_salary""].mean()
    job_title_with_highest_avg_salary = avg_salary_by_job_title.idxmax()

    return job_title_with_highest_avg_salary",string,"Director II, Data Science - GRM Actuarial","Director II, Data Science - GRM Actuarial"
Which state has the most number of job listings?,What is the job_state with the highest frequency of occurrence in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    job_state_counts = dataset[""job_state""].value_counts()
    most_frequent_job_state = job_state_counts.idxmax()

    return most_frequent_job_state",string, CA, CA
From which sector is the job listing with the highest salary?,What sector corresponds to the job listing with the highest average salary value in the avg_salary column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    max_avg_salary_job = dataset.loc[dataset[""avg_salary""] == dataset[""avg_salary""].max()]
    sector = max_avg_salary_job[""Sector""].iloc[0]

    return sector",category,Insurance,Insurance
Which company size has the most job listings?,What is the company size category with the highest number of job listings?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    company_size_counts = dataset[""Size""].value_counts()
    max_count_size = company_size_counts.idxmax()

    return max_count_size",string,1001 to 5000 employees,1001 to 5000 employees
Which are the top 3 sectors with the most job listings?,What are the top three sectors that have the highest number of job listings in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    sector_counts = dataset['Sector'].value_counts()
    top_three_sectors = sector_counts.nlargest(3).index.tolist()
    
    return top_three_sectors",list of (string),"['Information Technology', 'Biotech & Pharmaceuticals', 'Business Services']","['Information Technology', 'Biotech & Pharmaceuticals', 'Business Services']"
List the 4 most common industries in the dataset.,What are the top 4 most frequent industries in the dataset based on the Industry column?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    industry_counts = dataset['Industry'].value_counts()
    top_4_industries = industry_counts.nlargest(4).index.tolist()
    
    return top_4_industries",list of (string),"['Biotech & Pharmaceuticals', 'Insurance Carriers', 'Computer Hardware & Software', 'IT Services']","['Biotech & Pharmaceuticals', 'Insurance Carriers', 'Computer Hardware & Software', 'IT Services']"
Which 5 states have the most number of job listings?,What are the top 5 job states with the highest number of job listings in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    job_state_counts = dataset['job_state'].value_counts()
    top_5_job_states = job_state_counts.nlargest(5).index.tolist()
    
    return top_5_job_states",list of (string),"[' CA', ' MA', ' NY', ' VA', ' IL']","[' CA', ' MA', ' NY', ' VA', ' IL']"
List the 3 company sizes with the least number of job listings.,What are the three company sizes with the fewest job listings in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    company_sizes = dataset['Size'].value_counts()
    fewest_listings = company_sizes.nsmallest(3).index.tolist()
    return fewest_listings",list of (string),"['-1', 'Unknown', '1 to 50 employees']","['-1', '1 to 50 employees', 'Unknown']"
What are the top 4 average salaries for job titles in the dataset?,"What are the four highest average salaries for different job titles in the dataset, ranked in descending order by their average salary values?","def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    avg_salaries = dataset.groupby(""Job Title"")[""avg_salary""].mean().reset_index()
    top_4_avg_salaries = avg_salaries.sort_values(by=""avg_salary"", ascending=False).head(4)
    top_4_avg_salaries_list = top_4_avg_salaries[""avg_salary""].tolist()

    return top_4_avg_salaries_list",list of (float64),"[254.0, 232.5, 225.0, 205.0]","[254.0, 232.5, 225.0, 205.0]"
List the year the 3 oldest companies that have job listings were founded.,What are the founding years of the three oldest companies that have job listings in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    oldest_companies = dataset.nsmallest(3, 'Founded')
    founding_years = oldest_companies['Founded'].tolist()
    
    return founding_years",list of (int16),"[-1, -1, -1]","[1744, 1781, 1781]"
Which are the highest 3 ratings given?,What are the top 3 highest ratings given in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    top_3_ratings = dataset['Rating'].sort_values(ascending=False).head(3).tolist()
    return top_3_ratings",list of (float64),"[5.0, 5.0, 5.0]","[5.0, 5.0, 5.0]"
List the average salaries of the 6 most recent companies.,What are the average salaries of the six most recently founded companies in the dataset?,"def answer_question(dataset, datasetTableSchema, question, expectedAnswerType):
    six_most_recently_founded = dataset.nlargest(6, 'Founded')
    average_salaries = six_most_recently_founded['avg_salary'].tolist()
    
    return average_salaries",list of float64,"[78.0, 88.5, 110.0, 40.5, 132.5, 20.5]","[78.0, 88.5, 110.0, 40.5, 132.5, 20.5]"
Are there any authors in the dataset who have more followers than people they are following?,,,,ERROR,True
Is there any tweet in the dataset that has more replies<gx:number> than retweets<gx:number>?,,,,ERROR,True
Are there any verified users who have tweeted in a language other than English?,,,,ERROR,True
Does the dataset contain any tweets that include image links?,,,,ERROR,True
How many unique authors are present in the dataset?,,,,ERROR,1
What is the highest number of retweets<gx:number> a single tweet has received?,,,,ERROR,117386
What is the average number of favorites per tweet?,,,,ERROR,5081.805590000000
What's the total number of tweets from verified users?,,,,ERROR,3220
Which author has the most tweets in the dataset?,,,,ERROR,3131144855
Which language is most commonly used in the tweets?,,,,ERROR,en
What is the most common source of tweets?,,,,ERROR,"<a href=""http://twitter.com/download/iphone"" rel=""nofollow"">Twitter for iPhone</a>"
"Which type of tweet (e.g., original, retweet, quote) is most common in the dataset?",,,,ERROR,original
Who are the top three authors (by ID) with the most followers?,,,,ERROR,"[3131144855, 3131144855, 3131144855]"
What are the top five most frequently mentioned names in the tweets?,,,,ERROR,"['G7', 'foreignoffice', 'UN', 'Conservatives', 'COP26']"
List the top four most commonly used languages in the tweets.,,,,ERROR,"['en', 'und', 'fr', 'es']"
What are the highest three numbers of followers count present in the dataset?,,,,ERROR,"[3543402, 3543402, 3543402]"
What are the bottom four numbers of favorites count?,,,,ERROR,"[7, 7, 8, 9]"
List the top six numbers of retweets.,,,,ERROR,"[117386, 53527, 35698, 31449, 24824, 19982]"
What are the bottom five numbers of replies?,,,,ERROR,"[2, 2, 3, 3, 4]"
